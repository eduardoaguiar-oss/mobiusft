Mobius Forensic Toolkit 2.18
	* libmobius_core: Added new method database::get_path  
	* app-chromium: Added new function get_db_schema_version(db)  
	* app-chromium: Added decoding for Login Data files  
	* app-chromium: Added decoding for Login Data For Account files  
	* app-chromium: Added decoding for Cookies files  
	* app-chromium: Added decoding for Extension Cookies files  
	* app-chromium: Added decoding for Safe Browsing Cookies files  
	* app-chromium: Added decoding for Local State files  
	* app-chromium: Implemented new class post_processor_impl  
	* app-chromium: Enhanced post_processor_impl to support decryption of both v10 and v20 Chromium encryption keys
	* ant.evidence: Added new module post.user_accounts_from_cookies  
	* ant.evidence.vfs.accounts: Removed cookie retrieval feature  
	* ant.evidence.vfs.cookies: Removed old Chromium code
	* evidence-password-hashes: Fixed .hashcat file export  
	* evidence-password-hashes: Fixed .john file export  
	* libmobius_core: Added new method io::walker::get_folder_name  
	* libmobius_core: Added new JSON decoder module (decoder::json)  
	* libmobius_core: Added new class decoder::json::tokenizer  
	* libmobius_core: Added new class decoder::json::parser  
	* libmobius_core: Added new method os::win::dpapi::blob(bytearray)  

Mobius Forensic Toolkit 2.17
	* Added new C++ extension called "app-chromium"
	* app-chromium: Retrieve autofill_entry.date_created for versions < 55
	* app-chromium: Retrieve autofill_profiles as User Accounts
	* app-chromium: Retrieve Application Profiles
	* app-chromium: Retrieve Credit Cards
	* app-chromium: Retrieve Personal Direct Identifiers (PDI)
	* app-chromium: Retrieve Received Files
	* app-chromium: Retrieve Visited URLs
	* app-chromium: Added support for History schema version up to 69
	* app-chromium: Added support for Web Data schema version up to 135
	* evidence-viewer: Added attribute "names" to User Accounts
	* evidence-viewer: Added new evidence type "Application Profile"
	* iped-frontend: Changed to use mkisofs' option -udf instead of -J (Joliet)
	* post-processor-pdi: Added new field names
	* libmobius_core: Added new function string::join
	* libmobius_core: Added new method database::has_table
	* libmobius_framework: Added method model::evidence::add_source(folder)
	* ant.evidence.vfs: Added call to app-chromium evidence loader
	* ant.evidence.vfs.autofill: Removed old Chromium code
	* ant.evidence.vfs.received_files: Removed old Chromium code
	* ant.evidence.vfs.visited_urls: Removed old Chromium code

Mobius Forensic Toolkit 2.16
	* Added new C++ extension called "post-processor-pdi"
	* tools/dirfs: Option -d to dump file data
	* evidence-viewer: Added "Evidence Sources" panel
	* evidence-viewer: Added new evidence type "pdi"
	* libmobius_python: Module model moved to framework.model
	* libmobius_python: Module crypt moved to core.crypt
	* libmobius_python: Module database moved to core.database
	* libmobius_python: Module datasource moved to core.datasource
	* libmobius_python: Module datetime moved to core.datetime
	* libmobius_python: Module decoder moved to core.decoder
	* libmobius_python: Module encoder moved to core.encoder
	* libmobius_python: Module io moved to core.io
	* libmobius_python: Module kff moved to core.kff
	* libmobius_python: Module os moved to core.os
	* libmobius_python: Module pod moved to core.pod
	* libmobius_python: Module system moved to core.system
	* libmobius_python: Module turing moved to core.turing
	* libmobius_python: Module ui moved to core.ui
	* libmobius_python: Module vfs moved to core.vfs
	* libmobius_python: Created CMakeLists.txt for module core.file_decoder
	* libmobius_python: Added new module called "framework.ant"
	* libmobius_python: Added new class framework.ant.ant
	* libmobius_python: Added new class framework.ant.post_processor
	* libmobius_python: Added new method framework.model.item.get_evidences
	* libmobius_python: Added new method framework.model.item.count_evidences
	* libmobius_python: Added new method framework.model.item.count_evidences_grouped
	* libmobius_python: Added new method core.application.get_extension_resource_path
	* libmobius_framework: Added new module called "ant"
	* libmobius_framework: Added new class ant::ant_impl_base
	* libmobius_framework: Added new class ant::ant_impl_null
	* libmobius_framework: Added new class ant::ant
	* libmobius_framework: Added new class ant::post_processor
	* libmobius_framework: Added new class ant::ant_impl_post_processor
	* libmobius_framework: Added new method model::item::get_evidences
	* libmobius_framework: Added new method model::item::count_evidences
	* libmobius_framework: Added new method model::item::count_evidences_grouped
	* libmobius_core: Added new function mobius::string::is_digit
	* libmobius_core: Added new function mobius::string::is_integer
	* libmobius_core: Added new function mobius::string::is_hex
	* libmobius_core: Added new function mobius::string::is_alpha
	* libmobius_core: Added new function mobius::string::is_alnum
	* libmobius_core: Added new function mobius::string::is_lower
	* libmobius_core: Added new function mobius::string::is_upper
	* libmobius_core: Added new function mobius::string::is_space
	* libmobius_core: Added new function mobius::string::is_cpf
	* libmobius_core: Added new function mobius::string::is_cnpj
	* libmobius_core: Added new function mobius::string::is_email
	* libmobius_core: Added new function mobius::string::is_url
	* libmobius_core: Added new function mobius::string::is_ipv4
	* libmobius_core: Added new function mobius::string::is_ipv6
	* libmobius_core: Added new method application::get_extension_resource_path
	* app.chromium: Added support for Opera GX browser

Mobius Forensic Toolkit 2.15
	* src/mobius package renamed to src/libmobius_core
	* src/mobius/framework: package renamed to src/libmobius_framework
	* src/python/mobius package renamed to src/libmobius_python
	* libmobius_python: All source files renamed from .h/.cc to .hpp/.cpp
	* libmobius_python: Migrated from autotools to CMake
	* libmobius_core: All source files renamed from .h/.cc to .hpp/.cpp
	* libmobius_core: Migrated from autotools to CMake
	* libmobius_framework: All source files renamed from .h/.cc to .hpp/.cpp
	* libmobius_framework: Migrated from autotools to CMake
	* src/tools: All source files renamed from .h/.cc to .hpp/.cpp
	* src/tools: Migrated from autotools to CMake
	* Created include module
	* Created include/mobius/core module
	* Created include/mobius/framework module
	* Module src/python/examples removed
	* Module src/python/pymobius moved to src
	* Module src/python removed
	* Project fully migrated from Autotools to CMake
	* Added new C++ extension called "app-utorrent"
	* libmobius_core: Added new method walker::get_entries_with_names
	* libmobius_core: Added new method walker::get_files_with_names
	* libmobius_core: Added new method walker::get_folders_with_names
	* libmobius_core: Added new method pod::map::pop
	* libmobius_core: Added new class value_selector
	* libmobius_core: Added new class is_empty_checker
	* libmobius_core: Added new method pod::map::empty
	* libmobius_framework: Added new method evidence_flag::to_string
	* Added new tool: utorrent_dht_dat
	* Added new tool: utorrent_resume_dat
	* Added new tool: utorrent_settings_dat
	* pymobius.ant.evidence.vfs.ip_addresses: Removed module
	* pymobius.ant.evidence.vfs.account: Removed utorrent support

Mobius Forensic Toolkit 2.14
	* configure.ac: Check for CMake availability.
	* Added new C++ extension called "app-emule".
	* Libmobius: Using doxygen tags with '@'
	* Libmobius: Namespaces using C++17 nested convention
	* Python API: Using doxygen tags with '@'
	* mobius::py::pymodule: register modules in sys.modules
	* C++ extensions: Using doxygen tags with '@'
	* app/ares: All source files renamed from .h/.cc to .hpp/.cpp
	* app/ares: Using CMake to build, install and package
	* app/emuletorrent: All source files renamed from .h/.cc to .hpp/.cpp
	* app/emuletorrent: Using CMake to build, install and package
	* app/shareaza: All source files renamed from .h/.cc to .hpp/.cpp
	* app/shareaza: Using CMake to build, install and package
	* attribute-viewer: Using CMake to build, install and package
	* category-manager: Using CMake to build, install and package
	* datasource-ufdr: Using CMake to build, install and package
	* datasource-vfs: Using CMake to build, install and package
	* datasource-viewer: Using CMake to build, install and package
	* date-code: All source files renamed from .h/.cc to .hpp/.cpp
	* date-code: Using CMake to build, install and package
	* event-viewer: Using CMake to build, install and package
	* evidence-password-hashes: Using CMake to build, install and package
	* evidence-viewer: Using CMake to build, install and package
	* extension-manager: Using CMake to build, install and package
	* file-explorer: Using CMake to build, install and package
	* floppy-imager: Using CMake to build, install and package
	* gigatribe-agent: Using CMake to build, install and package
	* gtk-ui: Using CMake to build, install and package
	* hive: Using CMake to build, install and package
	* hive-report: Using CMake to build, install and package
	* ice: Using CMake to build, install and package
	* imagefile-dnd: Using CMake to build, install and package
	* iped-frontend: Using CMake to build, install and package
	* kff-manager: Using CMake to build, install and package
	* lshw-agent: Using CMake to build, install and package
	* p2p-viewer: Removed extension
	* part-catalogue: Using CMake to build, install and package
	* part-model: Using CMake to build, install and package
	* report-model: Using CMake to build, install and package
	* report-wizard: Using CMake to build, install and package
	* sdi-window-manager: Using CMake to build, install and package
	* skype-agent: Using CMake to build, install and package
	* skype-agent-sqlite: Using CMake to build, install and package
	* turing: Using CMake to build, install and package
	* vfs-block-view-bitlocker: Using CMake to build, install and package
	* vfs-block-view-partition-system: Using CMake to build, install and package
	* vfs-item-attributes: Using CMake to build, install and package
	* ui/gtk3: All source files renamed from .h/.cc to .hpp/.cpp
	* ui/gtk3: Using CMake to build, install and package
	* vfs/block/bitlocker: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/block/bitlocker: Using CMake to build, install and package
	* vfs/block/filesystems: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/block/filesystems: Using CMake to build, install and package
	* vfs/block/partition_system_apm: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/block/partition_system_apm: Using CMake to build, install and package
	* vfs/block/partition_system_dos: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/block/partition_system_dos: Using CMake to build, install and package
	* vfs/block/partition_system_gpt: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/block/partition_system_gpt: Using CMake to build, install and package
	* vfs/filesystem/exfat: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/exfat: Using CMake to build, install and package
	* vfs/filesystem/ext2: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/ext2: Using CMake to build, install and package
	* vfs/filesystem/hfs: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/hfs: Using CMake to build, install and package
	* vfs/filesystem/iso: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/iso: Using CMake to build, install and package
	* vfs/filesystem/ntfs: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/ntfs: Using CMake to build, install and package
	* vfs/filesystem/vfat: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/filesystem/vfat: Using CMake to build, install and package
	* vfs/imagefile/dossier: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/dossier: Using CMake to build, install and package
	* vfs/imagefile/ewf: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/ewf: Using CMake to build, install and package
	* vfs/imagefile/msr: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/msr: Using CMake to build, install and package
	* vfs/imagefile/raw: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/raw: Using CMake to build, install and package
	* vfs/imagefile/solo: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/solo: Using CMake to build, install and package
	* vfs/imagefile/split: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/split: Using CMake to build, install and package
	* vfs/imagefile/vhd: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/vhd: Using CMake to build, install and package
	* vfs/imagefile/vhdx: All source files renamed from .h/.cc to .hpp/.cpp
	* vfs/imagefile/vhdx: Using CMake to build, install and package
	* src/extension: Using both CMake and Makefile.am (hybrid)
	* tools: All source files renamed from .h/.cc to .hpp/.cpp
	* benchmark: Removed module
	* unittest: Removed module
	* mobius::app: Removed module
	* tools: New tool emule_known_met
	* tools: New tool emule_stored_searches_met
	* pymobius.app.emule: Removed module
	* pymobius.p2p.emule: Removed module
	* pymobius.p2p: Removed module

Mobius Forensic Toolkit 2.13
	* Added new extension event-viewer
	* Libmobius: Added new table "event" to case schema
	* Libmobius: Added new class model::event
	* Libmobius: Added new method model::item::add_event
	* Libmobius: Added new method model::item::get_events
	* Libmobius: Changed model::item::set_datasource method to log item event
	* Libmobius: Changed model::item::remove_datasource method to log item event
	* Libmobius: Changed model::item::set_attribute method to log item event
	* Libmobius: Changed model::item::remove_attribute method to log item event
	* Libmobius: Changed model::item::new_child method to log item event
	* Libmobius: Changed database::transaction to allow consecutive transactions at the same level
	* Libmobius: Fixed bug in evidence::set_tag
	* Python API: Added new class model.event
	* Python API: Added new method model.item.add_event
	* Python API: Added new method model.item.get_events
	* Python API: framework.evidence_loader.run using GIL control
	* app-ares: Changed to log item events
	* app-emuletorrent: Changed to log item events
	* app-shareaza: Changed to log item events
	* app-shareaza: Changed to decode torrent data from CBTInfo structure
	* ice: Added support for view-groups
	* pymobius.ant.evidence: Changed to call post-processing classes registered at "evidence.post" resource list
	* pymobius.ant.evidence.post: Created new module that stores pos-processing classes
	* pymobius.ant.evidence.post.kff_alert: Pos-processing class to tag evidences using KFF
	* evidence-viewer: Changed to add icon view to view-group
	* evidence-viewer: Changed to add list view to view-group
	* evidence-viewer: Changed to add navigation view to view-group
	* evidence-viewer: Added processing view
	* evidence-viewer: Removed main view
	* evidence-viewer: Added alert column for all evidence types

Mobius Forensic Toolkit 2.12
	* configure.ac: Changed to check for libxml2
	* Libmobius: Added new class decoder::xml::dom
	* Libmobius: Added new class decoder::xml::element
	* Libmobius: Added new method decoder::mfc::seek
	* Libmobius: Added new method decoder::mfc::tell
	* Libmobius: Added new method decoder::mfc::get_size
	* Libmobius: Added new method decoder::mfc::get_ipv6
	* Libmobius: Added new function string::first_of
	* Libmobius: Added new method io::walker::get_file_by_name
	* Libmobius: Changed database::database class to initialize and shutdown sqlite3 lib
	* Libmobius: Added new class io::tempfile
	* Libmobius: Added new function io::set_tempdir_path
	* Libmobius: Added new method io::uri::get_port_number
	* app-shareaza: Changed to retrieve autofill data
	* app-shareaza: Changed to retrieve user-accounts
	* app-shareaza: Changed to retrieve local-files
	* app-shareaza: Changed to retrieve p2p-remote-files
	* app-shareaza: Changed to retrieve received-files
	* app-shareaza: Changed to retrieve sent-files
	* app-shareaza: Changed to retrieve shared-files
	* app-shareaza: Changed to retrieve full CDownloadWithTorrent structure
	* app-shareaza: Changed to decode Shareaza.db3 files
	* app-shareaza: Added new tool shareaza_library_dat
	* app-shareaza: Added new tool shareaza_sd
	* app-shareaza: Added new tool shareaza_searches_dat
	* app-ares: Changed to set account type p2p.ares
	* app-emuletorrent: Changed to set account type p2p.edonkey
	* Python API: Added new module decoder.xml
	* Python API: Added new class decoder.xml.dom
	* Python API: Added new class decoder.xml.element
	* Python API: Added new class io.tempfile
	* Python API: Added new function io.set_tempdir_path

Mobius Forensic Toolkit 2.11
	* Added new C++ extension: app-emuletorrent
	* Added new C++ extension: app-shareaza
	* category-manager: Changed to not use get_widget function
	* category-manager: Changed to use mobius.ui.box instead of Gtk.VBox
	* category-manager: Changed to use mobius.ui.box instead of Gtk.HBox
	* category-manager: Changed to use mobius.ui.label instead of Gtk.Label
	* category-manager: Changed to use mobius.ui.button
	* category-manager: Changed to use mobius.ui.icon
	* datasource-viewer: Changed to not use get_widget function
	* datasource-viewer: Changed to use mobius.ui.box instead of Gtk.VBox
	* datasource-viewer: Changed to use mobius.ui.box instead of Gtk.HBox
	* datasource-ufdr: Changed to not use get_widget function
	* datasource-ufdr: Changed to use mobius.ui.box instead of Gtk.VBox
	* datasource-ufdr: Changed to use mobius.ui.label instead of Gtk.Label
	* datasource-vfs: Changed to not use get_widget function
	* datasource-vfs: Create thread_guard when starting threads
	* datasource-vfs: Changed to use mobius.ui.box instead of Gtk.VBox
	* datasource-vfs: Changed to use mobius.ui.label instead of Gtk.Label
	* datasource-vfs: Changed to use mobius.ui.button
	* datasource-vfs: Changed to use mobius.ui.icon
	* evidence-password-hashes: Changed to not use get_widget function
	* evidence-password-hashes: Changed to use mobius.ui.box instead of Gtk.VBox
	* evidence-viewer: Changed to not use get_widget function
	* evidence-viewer: Added new details panel "Hash list"
	* evidence-viewer: Added new module model.py
	* extension-manager: Changed to not use get_widget function
	* extension-manager: Changed to use mobius.ui.box instead of Gtk.VBox
	* extension-manager: Changed to use mobius.ui.box instead of Gtk.HBox
	* extension-manager: Changed to use mobius.ui.icon
	* file-explorer: Changed to not use get_widget function
	* file-explorer: Changed to use mobius.ui.box instead of Gtk.VBox
	* file-explorer: Changed to use mobius.ui.box instead of Gtk.HBox
	* file-explorer: Changed to use mobius.ui.button
	* floppy-imager: Create thread_guard when starting threads
	* floppy-imager: Changed to use mobius.ui.box instead of Gtk.VBox
	* floppy-imager: Changed to use mobius.ui.box instead of Gtk.HBox
	* floppy-imager: Changed to use mobius.ui.label instead of Gtk.Label
	* floppy-imager: Changed to use mobius.ui.button
	* gigatribe-agent: Chagned to remove accel_group instantiation
	* gigatribe-agent: Changed to use mobius.ui.box instead of Gtk.VBox
	* gigatribe-agent: Changed to use mobius.ui.box instead of Gtk.HBox
	* gigatribe-agent: Changed to use mobius.ui.label instead of Gtk.Label
	* gigatribe-agent: Changed to use decoder.qdatastream
	* gtk-ui: Changed to not use get_widget function
	* gtk-ui: Removed service 'new-window'
	* gtk-ui: Changed to use mobius.ui.box instead of Gtk.VBox
	* gtk-ui: Changed to use mobius.ui.box instead of Gtk.HBox
	* gtk-ui: Case treeview widget moved to ICE
	* gtk-ui: Changed to use mobius.ui.icon
	* hive: Changed to not use get_widget function
	* hive: Changed to use mobius.ui.box instead of Gtk.VBox
	* ice: Changed to not use get_widget function
	* ice: Changed to use mobius.ui.box instead of Gtk.VBox
	* ice: Changed to use mobius.ui.label instead of Gtk.Label
	* ice: Changed to use mobius.ui.icon
	* iped-frontend: Changed to not use get_widget function
	* iped-frontend: Changed to create thread_guard when starting threads
	* iped-frontend: Changed to use mobius.ui.box instead of Gtk.VBox
	* iped-frontend: Changed to use mobius.ui.label instead of Gtk.Label
	* iped-frontend: Changed to use mobius.ui.button
	* kff-manager: Changed to use mobius.ui.box instead of Gtk.HBox
	* p2p-viewer: Changed to not use get_widget function
	* p2p-viewer: EmuleTorrent evidences moved to Evidence Viewer
	* p2p-viewer: Changed to use mobius.ui.box instead of Gtk.VBox
	* part-catalogue: Changed to not use get_widget function
	* part-catalogue: Changed to use mobius.ui.box instead of Gtk.VBox
	* part-catalogue: Changed to use mobius.ui.box instead of Gtk.HBox
	* part-catalogue: Changed to use mobius.ui.button
	* report-wizard: Changed to not use get_widget function
	* report-wizard: Changed to use mobius.ui.label instead of Gtk.Label
	* report-wizard: Changed to use mobius.ui.box instead of Gtk.VBox
	* report-wizard: Changed to use mobius.ui.box instead of Gtk.HBox
	* sdi-window-manager: Changed to not use get_widget function
	* skype-agent: Changed to not use get_widget function
	* skype-agent: Changed to use mobius.ui.box instead of Gtk.VBox
	* skype-agent: Changed to use mobius.ui.icon
	* turing: Changed to not use get_widget function
	* turing: Changed to use mobius.ui.box instead of Gtk.VBox
	* ui-gtk3: New class window_impl
	* ui-gtk3: box_impl implements widget ownership, to avoid children destruction
	* ui-gtk3: box_impl increments reference count for its own widget
	* ui-gtk3: icon_impl increments reference count for its own widget
	* ui-gtk3: label_impl increments reference count for its own widget
	* ui-gtk3: Added new class button_impl
	* ui-gtk3: Added new method ui::icon::set_icon_by_name
	* ui-gtk3: Added new method ui::icon::set_icon_from_data
	* datasource.ufdr: Set all attributes from model nodes
	* ant.evidence.ufdr: Retrieve file_id and hashes from chat message attachments
	* Libmobius: Added new function ui::widget::_impl
	* Libmobius: ui::box derived from ui::widget
	* Libmobius: Removed method ui::box::get_widget
	* Libmobius: ui::container derived from ui::widget
	* Libmobius: Removed method ui::container::get_widget
	* Libmobius: ui::icon derived from ui::widget
	* Libmobius: Removed method ui::icon::get_widget
	* Libmobius: ui::label derived from ui::widget
	* Libmobius: Removed method ui::label::get_widget
	* Libmobius: ui::stacked_container derived from ui::widget
	* Libmobius: Removed method ui::stacked_container::get_widget
	* Libmobius: Class core::decoder::inifile moved to module decoder
	* Libmobius: New function decoder::btencode (const bytearray&)
	* Libmobius: New method bytearray::count
	* Libmobius: pod::data operator std::string accepts bytearray values
	* Libmobius: New class ui::window_impl_base
	* Libmobius: New class ui::window
	* Libmobius: New method ui::box::add_filler
	* Libmobius: New template class core::functor
	* Libmobius: New method decoder::qdatastream::get_qdate
	* Libmobius: New method decoder::qdatastream::get_qtime
	* Libmobius: New method decoder::qdatastream::operator bool
	* Libmobius: decoder::qdatastream::get_qdatetime implemented for QT versions up to 5.1
	* Libmobius: New method ui::label::set_elide_mode
	* Libmobius: Removed method ui::widget::show
	* Libmobius: Removed method ui::widget::hide
	* Libmobius: Added new class ui::button_impl_base
	* Libmobius: Added new class ui::button
	* Libmobius: Added new method ui::icon::set_icon_by_name
	* Libmobius: Added new method ui::icon::set_icon_by_path
	* Libmobius: Added new method ui::icon::set_icon_by_url
	* Libmobius: Added new method ui::icon::set_icon_from_data
	* Libmobius: Added new method os::win::registry::hive_key::get_values_by_mask
	* Libmobius: Added new module decoder::xml
	* Libmobius: Added new class decoder::xml::dom
	* Libmobius: Added new class decoder::xml::element
	* Python API: ui.box derived from ui.widget
	* Python API: Removed method ui.box.get_widget
	* Python API: ui.container derived from ui.widget
	* Python API: Removed method ui.container.get_widget
	* Python API: ui.icon derived from ui.widget
	* Python API: Removed method ui.icon.get_widget
	* Python API: ui.label derived from ui.widget
	* Python API: Removed method ui.label.get_widget
	* Python API: ui.stacked_container derived from ui.widget
	* Python API: Removed method ui.stacked_container.get_widget
	* Python API: New class ui.window
	* Python API: New method ui.box.add_filler
	* Python API: New class mobius::py::function
	* Python API: Added decoder.qdatastream.QT_x_y constants
	* Python API: Added new method decoder.qdatastream.eof
	* Python API: New method ui.label.set_elide_mode
	* Python API: Added new class ui.button
	* Python API: Added new method ui.icon.set_icon_by_name
	* Python API: Added new method ui.icon.set_icon_by_path
	* Python API: Added new method ui.icon.set_icon_by_url
	* Python API: Added new method ui.icon.set_icon_from_data

Mobius Forensic Toolkit 2.10
	* New evidence type: Credit Card
	* New evidence type: P2P Remote File
	* app-ares: Changed file_decoder IDs
	* app-ares: Changed evidence_loader ID
	* app-ares: New class file_shareh
	* app-ares: New class file_sharel
	* app-ares: New class file_arestra
	* app-ares: New class file_phash
	* app-ares: New class file_pbthash
	* app-ares: New class file_torrenth
	* app-ares: New class decoder_impl_pbthash
	* app-ares: New class decoder_impl_torrenth
	* app-ares: decoder_impl_shareh using file_shareh class
	* app-ares: decoder_impl_sharel using file_sharel class
	* app-ares: decoder_impl_arestra using file_arestra class
	* app-ares: decoder_impl_phash using file_phash class
	* app-ares: evidence_loader_impl using file_shareh class
	* app-ares: evidence_loader_impl using file_sharel class
	* app-ares: evidence_loader_impl using file_arestra class
	* app-ares: evidence_loader_impl using file_phash class
	* app-ares: evidence_loader_impl using file_pbthash class
	* app-ares: evidence_loader_impl retrieves data from TempDL/PBTHash_xxx.dat files
	* app-ares: evidence_loader_impl retrieves data from TempUL/UDPPHash_xxx.dat files
	* app-ares: evidence_loader_impl retrieves p2p remote files
	* app-ares: evidence_loader_impl retrieves sent files
	* p2p-viewer: Ares evidences moved to Evidence Viewer
	* attribute-viewer: Use mobius.framework.category functions
	* category-manager: Use mobius.framework.category functions
	* ice: Use mobius.framework.category functions
	* part-catalogue: Use mobius.framework.category functions
	* Module pymobius.p2p.ares removed
	* evidence.ufdr.credit_card.py: New class retrieves Credit Card data from UFDR files
	* Libmobius: bytearray:find using std::search
	* Libmobius: bytearray:rfind using std::find_end
	* Libmobius: io::smbc::init using std::once_flag
	* Libmobius: io::smbc::init changed to use smbc_init_context
	* Libmobius: Added new package core::decoder
	* Libmobius: New class core::decoder::inifile
	* Libmobius: Added new module framework::category
	* Libmobius: New function framework::get_category
	* Libmobius: New function framework::new_category
	* Libmobius: New function framework::remove_category
	* Libmobius: New function framework::get_categories
	* Libmobius: New function framework::remove_categories
	* Libmobius: New function framework::new_category_transaction
	* Libmobius: Class core::attribute moved to framework module
	* Libmobius: Class core::category moved to framework module
	* Python API: Added new package core.decoder
	* Python API: New class core.decoder.inifile
	* Python API: New function get_arg_as_char
	* Python API: New function framework.get_category
	* Python API: New function framework.new_category
	* Python API: New function framework.remove_category
	* Python API: New function framework.get_categories
	* Python API: New function framework.remove_categories
	* Python API: New function framework.new_category_transaction
	* Python API: Removed class core.category_manager
	* Python API: Class core.attribute moved to framework module
	* Python API: Class core.category moved to framework module

Mobius Forensic Toolkit 2.9
	* New evidence type: Shared File
	* datasource-ufdr: Using framework.config functions
	* datasource-vfs: Using framework.config functions
	* engelbart: Extension removed
	* evidence-password-hashes: Using ui.new_icon_by_path function
	* evidence-password-hashes: Using framework.config functions
	* evidence-viewer: Using ui.new_icon_by_path function
	* evidence-viewer: Using framework.config functions
	* evidence-viewer: Show evidence tags
	* extension-manager: Using framework.config functions
	* extension-manager: Using ui.new_icon_from_data function
	* file-explorer: Using ui.icons functions
	* file-explorer: Using framework.config functions
	* gtk-ui: Removed method GtkEngine.new_image_buffer_from_file
	* gtk-ui: Removed module gtk_engine.py
	* gtk-ui: Removed service ui.new-icon-from-file
	* gtk-ui: Using framework.config functions
	* hive: Using ui.new_icon_by_path function
	* hive: Using framework.config functions
	* ice: Using framework.config functions
	* ice: Using ui.new_icon_by_name function
	* iped-frontend: Using framework.config functions
	* kff-manager: Using framework.config functions
	* p2p-viewer: Using framework.config functions
	* part-catalogue: Using framework.config functions
	* part-catalogue: Using ui.new_icon_by_name function
	* report-wizard: Using ui.new_icon_by_name function
	* sdi-window-manager: Using framework.config functions
	* skype-agent: Using framework.config functions
	* skype-agent: Using ui.new_icon_from_data function
	* turing: Using ui.new_icon_by_path function
	* app.skype: Fixe bug retrieving chat messages
	* Added new package extension::app
	* Added new C++ extension: app-ares
	* app-ares: New file_decoder "app.ares.shareh"
	* app-ares: New file_decoder "app.ares.sharel"
	* app-ares: New file_decoder "app.ares.phash"
	* app-ares: New file_decoder "app.ares.arestra"
	* app-ares: New evidence_loader "app.ares"
	* evidence.vfs.account: Removed Ares Galaxy retrieve function
	* evidence.vfs.autofill: Removed Ares Galaxy retrieve function
	* Libmobius: New class core::thread_guard
	* Libmobius_framework: Created new dynamic library
	* Libmobius_framework: New function framework::has_config
	* Libmobius_framework: New function framework::set_config
	* Libmobius_framework: New function framework::get_config
	* Libmobius_framework: New function framework::remove_config
	* Libmobius_framework: New function framework::new_config_transaction
	* Libmobius: Removed function core::has_config
	* Libmobius: Removed function core::get_config
	* Libmobius: Removed function core::set_config
	* Libmobius: Removed function core::remove_config
	* Libmobius: Removed function core::new_config_connection
	* Libmobius: Removed function core::new_config_transaction
	* Libmobius: New class ui::icon_impl_base
	* Libmobius: New class ui::icon
	* Libmobius: New function ui::new_icon_by_name
	* Libmobius: New function ui::new_icon_by_path
	* Libmobius: New function ui::new_icon_by_url
	* Libmobius: New function ui::new_icon_from_data
	* Libmobius: New function ui::set_icon_path
	* Libmobius: New package core::file_decoder
	* Libmobius: New class core::file_decoder::decoder_impl_base
	* Libmobius: New class core::file_decoder::decoder_impl_null
	* Libmobius: New class core::file_decoder::decoder
	* Libmobius: New class core::file_decoder::entry
	* Libmobius: New class core::file_decoder::metadata
	* Libmobius: New class core::file_decoder::section
	* Libmobius: New function core::file_decoder::new_decoder_by_id
	* Libmobius: New function io::entry::is_reallocated
	* Libmobius: New class io::walker
	* Libmobius: New function string::case_insensitive_fnmatch
	* Libmobius: New function decoder::hexstring
	* Libmobius: New method os::win::registry::hive_key::get_key_by_name
	* Libmobius: New method os::win::registry::hive_key::get_key_by_path
	* Libmobius: New method os::win::registry::hive_key::get_keys_by_mask
	* Libmobius: New method os::win::registry::hive_key::get_value_by_name
	* Libmobius: New method os::win::registry::hive_key::get_data_by_name
	* Libmobius: Fixed bug in string::replace, when s1 is empty
	* Libmobius: New method model::evidence::add_source (const mobius::io::file&)
	* Libmobius: New method model::evidence::add_source (const mobius::model::evidence&)
	* Libmobius: New method model::evidence::get_sources
	* Libmobius: New method os::win::registry::hive_data::get_data_as_dword
	* Libmobius: New method os::win::registry::hive_data::get_data_as_qword
	* Libmobius: New method os::win::registry::hive_data::get_data_as_string
	* Libmobius: New class framework::evidence_loader_impl_base
	* Libmobius: New class framework::evidence_loader_impl_null
	* Libmobius: New class framework::evidence_loader
	* Libmobius: New class framework::evidence_flag
	* case_schema: New table evidence_source
	* Python API: New class core.thread_guard
	* Python API: New function framework.has_config
	* Python API: New function framework.set_config
	* Python API: New function framework.get_config
	* Python API: New function framework.remove_config
	* Python API: New function framework.new_config_transaction
	* Python API: Removed function core.has_config
	* Python API: Removed function core.get_config
	* Python API: Removed function core.set_config
	* Python API: Removed function core.remove_config
	* Python API: Removed function core.new_config_connection
	* Python API: Removed function core.new_config_transaction
	* Python API: New class ui.icon
	* Python API: New function ui.set_icon_path
	* Python API: New function ui.new_icon_by_name
	* Python API: New function ui.new_icon_by_path
	* Python API: New function ui.new_icon_by_url
	* Python API: New function ui.new_icon_from_data
	* Python API: New module core.file_decoder
	* Python API: New class core.file_decoder.decoder
	* Python API: New class core.file_decoder.entry
	* Python API: New class core.file_decoder.metadata
	* Python API: New class core.file_decoder.section
	* Python API: New function core.file_decoder.new_decoder_by_id
	* Python API: pystring_from_std_string replaces invalid UTF-8 chars
	* Python API: New class io.walker
	* Python API: New module pypredicate.h
	* Python API: New class py::unary_predicate
	* Python API: Removed module pymobius.app.ares
	* ui-gtk3: New class icon_impl

Mobius Forensic Toolkit 2.8
	* New evidence type: Contact
	* ant.evidence.ufdr: Handle InstantMessage.Identifier attribute
	* ant.evidence.ufdr: Retrieve contacts from UFDR files
	* ant.evidence.ufdr: Retrieve passwords from UFDR files
	* ant.evidence.ufdr: Retrieve encryption keys from UFDR files
	* ant.evidence.ufdr: Retrieve crypto wallets from UFDR files
	* ant.evidence.ufdr: New module autofill.py
	* ant.evidence.ufdr: New module call.py
	* ant.evidence.ufdr: New module chat.py
	* ant.evidence.ufdr: New module common.py
	* ant.evidence.ufdr: New module contact.py
	* ant.evidence.ufdr: New module cookie.py
	* ant.evidence.ufdr: New module file_download.py
	* ant.evidence.ufdr: New module financial_account.py
	* ant.evidence.ufdr: New module installed_application.py
	* ant.evidence.ufdr: New module instant_message.py
	* ant.evidence.ufdr: New module password.py
	* ant.evidence.ufdr: New module searched_item.py
	* ant.evidence.ufdr: New module user_account.py
	* ant.evidence.ufdr: New module visited_page.py
	* ant.evidence.ufdr: New module web_bookmark.py
	* ant.evidence.ufdr: New module wireless_network.py
	* app.skype: evidence_source attribute has been fixed
	* pymobius.datasource.ufdr.parser: Handle dataField fields
	* pymobius.datasource.ufdr.parser: Handle relatedModels fields
	* Libmobius: New module mobius::framework
	* Python API: New module mobius.framework

Mobius Forensic Toolkit 2.7
	* ui-gtk3: New class label_impl
	* ui-gtk3: New class widget_impl
	* ui-gtk3: New class box_impl
	* ui-gtk3: New method ui_impl::new_label
	* ui-gtk3: New method ui_impl::new_widget
	* ui-gtk3: New method ui_impl::new_box
	* pymobius.ant.turing.custom_dic: Fixed bug "Set changed size during iteration"
	* pymobius.p2p.emule: Better error handling when processing control files. Reported by Clemente Paixão
	* pymobius.registry.installed_programs: Better error handling when retrieving installed programs. Reported by Clemente Paixão
	* pymobius.datasource.ufdr.parser: Added support for metadata section "Extraction Data"
	* category-manager: Changed to use ui.message_dialog.* constants
	* datasource-viewer: Changed to use ui.container
	* datasource-ufdr: Changed to use ui.container
	* datasource-vfs: Changed to use ui.message_dialog.* constants
	* datasource-vfs: Changed to use ui.container
	* engelbart: Removed method factory.new_image_buffer_from_file
	* evidence-password-hashes: Changed to use ui.container
	* evidence-viewer: Changed to use ui.message_dialog.* constants
	* evidence-viewer: Changed to use ui.container
	* evidence-viewer: Navigation simplified using combobox
	* extension-manager: Changed to use ui.message_dialog.* constants
	* file-explorer: Changed to use ui.message_dialog.* constants
	* file-explorer: Changed to use ui.container
	* gigatribe-agent: Changed to use ui.message_dialog.* constants
	* gtk-ui: Removed old widget ui.container
	* gtk-ui: Removed old widget ui.multiviewer
	* gtk-ui: Added new method TableView.set_drag_and_drop
	* hive: Changed to use ui.container
	* ice: Changed to use ui.message_dialog.* constants
	* ice: Changed to use ui.box instead of Gtk.VBox in ICEWindow
	* iped-frontend: Changed to use ui.message_dialog.* constants
	* iped-frontend: Changed to use ui.container
	* kff-manager: Changed to use ui.message_dialog.* constants
	* p2p-viewer: Changed to use ui.container
	* part-catalogue: Changed to use ui.message_dialog.* constants
	* report-viewer: Removed extension
	* report-wizard: Changed to use ui.message_dialog.* constants
	* skype-agent: Changed to use ui.message_dialog.* constants
	* turing: Changed to use ui.container
	* Libmobius: New function ui::init
	* Libmobius: New function ui::start
	* Libmobius: New function ui::stop
	* Libmobius: New function ui::flush
	* Libmobius: Removed class ui.ui
	* Libmobius: New class ui::widget_impl_base
	* Libmobius: New class ui::widget_impl_null
	* Libmobius: New class ui::widget
	* Libmobius: New class ui::label_impl_base
	* Libmobius: New class ui::label
	* Libmobius: New class ui::box_impl_base
	* Libmobius: New class ui::box
	* Libmobius: New class ui::container
	* Libmobius: New class ui::stacked_container
	* Libmobius: New method item::add_evidences
	* Libmobius: New method evidence::add_attributes
	* Libmobius: New method evidence::add_tags
	* Libmobius: New class core::mediator
	* Python API: New function ui.init
	* Python API: New function ui.start
	* Python API: New function ui.stop
	* Python API: New function ui.flush
	* Python API: Removed class ui.ui
	* Python API: Fixed bug in io.line_reader iterator. Reported by Clemente Paixão
	* Python API: Fixed bug catching std::runtime_error instead of std::exception
	* Python API: New method pyobject::get_attribute
	* Python API: New class ui.widget
	* Python API: New class ui.label
	* Python API: New class ui.box
	* Python API: New class ui.container
	* Python API: New class ui.stacked_container
	* Python API: New method item.add_evidences
	* Python API: New method evidence.set_attributes
	* Python API: New method evidence.set_tags
	* Python API: New module pydict.h
	* Python API: New module pyset.h
	* Python API: New template function pydict_to_cpp_container
	* Python API: New template function pyset_to_cpp_container
	* Python API: New template function get_arg_as_cpp_map
	* Python API: New template function get_arg_as_cpp_set

Mobius Forensic Toolkit 2.6
	* New evidence type: Wireless Connection
	* New evidence type: Wireless Network
	* Extensions source-code distributed outside .mobius extension files
	* cellphone-agent: Removed extension
	* extension-builder: Removed extension
	* hive-gigatribe-report: Moved into hive-report extension
	* gtk-report-dialog: Moved into gtk-ui extension
	* gtk-ui-hexview: Moved into gtk-ui extension
	* gtk-ui-view-selector: Moved into gtk-ui extension
	* iped-frontend: Fixed bug in get_paths function
	* datasource-viewer: Update parent view_selector when datasource is modified
	* datasource-viewer: Fixed bug to refresh view when item is selected
	* evidence-viewer: Fixed bug in report DND
	* ant.evidence.vfs: Fixed bug retrieving evidences
	* ant.evidence.ufdr: ufdr.parser using get_datetime_from_node() for TimeStamp values
	* New Ant: ant.evidence.vfs.wireless_connections
	* New Ant: ant.evidence.vfs.wireless_networks
	* Libmobius: turing::turing changed to have its own database connection
	* Libmobius: Changed case_schema to add revision column to datasource table
	* Libmobius: case_schema -> datasource revision column
	* Libmobius: item holding datasource_ (use revision)
	* Python API: pymobius.extension retrieves metadata from metadata.py
	* Python API: New function pymobius.registry.get_data_as_qword
	* Python API: New module pymobius.registry.network_list

Mobius Forensic Toolkit 2.5
	* datasource-viewer: New extension
	* datasource-vfs: New extension replaces vfs-viewer
	* datasource-ufdr: New extension adds support for Cellebrite's UFDR report files
	* ice: Removed deprecated code
	* floppy-imager: Changed to use item.datasource instead of item.vfs
	* imagefile-dnd: Changed to use item.datasource instead of item.vfs
	* file-explorer: Changed to use item.datasource instead of item.vfs
	* iped-frontend: Changed to use item.datasource instead of item.vfs
	* iped-frontend: Changed to accept Cellebrite's UFDR datasources
	* gtk-ui-view-selector: New widget dnd-toolitem
	* vfs-viewer: Removed extension
	* app.utorrent: Added support for BitTorrent AppData folder
	* app.chromium: Added support for 1stBrowser
	* ant.*: Changed to use item.datasource instead of item.vfs
	* Case schema: New table datasource
	* Case schema: New table evidence_tag
	* New ant ant.evidence.searched_texts_from_visited_urls
	* New ant ant.evidence.ip_addresses_from_cookies
	* Libmobius: Class datasource_impl_base renamed to disk_impl_base
	* Libmobius: Class datasource_impl_device renamed to disk_impl_device
	* Libmobius: Class datasource_impl_imagefile renamed to disk_impl_imagefile
	* Libmobius: Class datasource_impl_null renamed to disk_impl_null
	* Libmobius: Method vfs::add_datasource renamed to vfs::add_disk
	* Libmobius: Method vfs::get_datasources renamed to vfs::get_disks
	* Libmobius: Method vfs::remove_datasource renamed to vfs::remove_disk
	* Libmobius: Function vfs::new_datasource_by_device_uid renamed to vfs::new_disk_by_device_uid
	* Libmobius: Function vfs::new_datasource_by_path renamed to vfs::new_disk_by_path
	* Libmobius: Function vfs::new_datasource_by_url renamed to vfs::new_disk_by_url
	* Libmobius: New method model::evidence::has_tag
	* Libmobius: New method model::evidence::set_tag
	* Libmobius: New method model::evidence::reset_tag
	* Libmobius: New method model::evidence::get_tags
	* Libmobius: New module mobius::datasource
	* Libmobius: New class datasource::datasource_impl_base
	* Libmobius: New class datasource::datasource_impl_null
	* Libmobius: New class datasource::datasource
	* Libmobius: New class datasource::datasource_impl_vfs
	* Libmobius: New class datasource::datasource_vfs
	* Libmobius: New method model::item::has_datasource
	* Libmobius: New method model::item::get_datasource
	* Libmobius: New method model::item::set_datasource
	* Libmobius: New method model::item::remove_datasource
	* Libmobius: Removed method model::item::has_vfs
	* Libmobius: Removed method model::item::get_vfs
	* Libmobius: Removed method model::item::set_vfs
	* Libmobius: Removed method model::item::remove_vfs
	* Libmobius: New function datasource::new_datasource_from_vfs
	* Libmobius: New function datasource::new_datasource_by_imagefile_path
	* Libmobius: New function datasource::new_datasource_by_imagefile_url
	* Libmobius: New module mobius::datasource::ufdr
	* Libmobius: New class datasource::ufdr::datasource_impl
	* Libmobius: New class datasource::ufdr::datasource
	* Libmobius: New class datasource::ufdr::extraction
	* Python API: Method vfs.add_datasource renamed to vfs.add_disk
	* Python API: Method vfs.get_datasources renamed to vfs.get_disks
	* Python API: Method vfs.remove_datasource renamed to vfs.remove_disk
	* Python API: Function vfs.new_datasource_by_url renamed to vfs.new_disk_by_device_uid
	* Python API: Function vfs.new_datasource_by_url renamed to vfs.new_disk_by_path
	* Python API: Function vfs.new_datasource_by_url renamed to vfs.new_disk_by_url
	* Python API: New template function mobius::py::pyset_from_cpp_container
	* Python API: New method model.evidence.has_tag
	* Python API: New method model.evidence.set_tag
	* Python API: New method model.evidence.reset_tag
	* Python API: New method model.evidence.get_tags
	* Python API: New module mobius.datasource
	* Python API: New class datasource.datasource
	* Python API: New class datasource.datasource_vfs
	* Python API: New module mobius.datasource.ufdr
	* Python API: New class datasource.ufdr.datasource
	* Python API: New class datasource.ufdr.extraction
	* Python API: New method model.item.has_datasource
	* Python API: New method model.item.get_datasource
	* Python API: New method model.item.set_datasource
	* Python API: New method model.item.remove_datasource
	* Python API: Removed method model.item.has_vfs
	* Python API: Removed method model.item.get_vfs
	* Python API: Removed method model.item.set_vfs
	* Python API: Removed method model.item.remove_vfs
	* Python API: New function datasource.new_datasource_from_vfs
	* Python API: New function datasource.new_datasource_by_imagefile_path
	* Python API: New function datasource.new_datasource_by_imagefile_url
	* Python API: New function datasource.new_datasource_by_ufdr_path
	* Python API: New function datasource.new_datasource_by_ufdr_url
	* Python API: New module pymobius.datasource.ufdr
	* Python API: New module ant.evidence
	* Python API: New module ant.evidence.ufdr
	* Python API: New module ant.evidence.vfs

Mobius Forensic Toolkit 2.4
	* app.chromium.decoder_cookies: Changed to retrieve last_update_utc column
	* ant.accounts: Added support for Ares Galaxy user accounts
	* ant.text_autocomplete: Renamed to ant.autofill
	* ant.autofill: Added support for Ares Galaxy's search history
	* ant.ip_addresses: Added support for IP addresses stored in HTTP cookies
	* ant.bookmarked_urls: Changed to have better control of exceptions
	* ant.visited_urls: Changed to have better control of exceptions
	* ant.*: Changed to set evidence_source attribute
	* ant.evidence: New ANT to call all evidence ANTs in sequence
	* ant.installed_programs: New ANT to retrieve installed programs
	* gtk-ui: Changed to improve tableview columns creation
	* iped-frontend: Fixed error getting Xmx option
	* iped-frontend: Fixed java command line options
	* evidence-viewer: Changed to run ant.evidence
	* evidence-viewer: Changed to use evidence model to define evidences
	* file-explorer: Filelist report ID changed to filelist-{filter.name}
	* category-manager: Fixed bug setting category icon
	* Added new evidence type "Installed Programs"
	* Removed extension evidence-accounts
	* Removed extension evidence-bookmarked-urls
	* Removed extension evidence-calls
	* Removed extension evidence-chat-messages
	* Removed extension evidence-cookies
	* Removed extension evidence-encryption-keys
	* Removed extension evidence-ip-addresses
	* Removed extension evidence-opened-files
	* Removed extension evidence-passwords
	* Removed extension evidence-received-files
	* Removed extension evidence-sent-files
	* Removed extension evidence-text-autocomplete
	* Removed extension evidence-text-searches
	* Removed extension evidence-trash-can-entries
	* Removed extension evidence-visited-urls
	* Libmobius: Added new method model::item::new_connection
	* Libmobius: Added new method model::item::new_transaction
	* Libmobius: Added new method model::evidence::get_attributes
	* Libmobius: Renamed method model::item::count_all_evidences to count_evidences
	* Libmobius: Added new method model::evidence::remove_evidences()
	* Libmobius: Removed method model::item::new_cookie
	* Libmobius: Removed method model::item::get_cookies
	* Libmobius: Removed class model::cookie
	* Libmobius: Removed method model::item::new_bookmarked_url
	* Libmobius: Removed method model::item::get_bookmarked_urls
	* Libmobius: Removed class model::bookmarked_url
	* Libmobius: Removed method model::item::new_visited_url
	* Libmobius: Removed method model::item::get_visited_urls
	* Libmobius: Removed class model::visited_url
	* Libmobius: Removed method item::new_profile
	* Libmobius: Removed method item::get_profiles
	* Libmobius: Removed method item::remove_profile_by_app_id
	* Libmobius: Removed class model::profile
	* Libmobius: Removed method item::new_application
	* Libmobius: Removed class model::application
	* Python API: Added new method model.item.new_connection
	* Python API: Added new method model.item.new_transaction
	* Python API: Added new method model.evidence.get_attributes
	* Python API: Renamed method model.item.count_all_evidences to count_evidences
	* Python API: Added new method model.evidence.remove_evidences()
	* Python API: Removed method model.item.new_cookie
	* Python API: Removed method model.item.get_cookies
	* Python API: Removed class model.cookie
	* Python API: Removed method model.item.new_bookmarked_url
	* Python API: Removed method model.item.get_bookmarked_urls
	* Python API: Removed class model.bookmarked_url
	* Python API: Removed method model.item.new_visited_url
	* Python API: Removed method model.item.get_visited_urls
	* Python API: Removed class model.visited_url
	* Python API: Removed method item.new_profile
	* Python API: Removed method item.get_profiles
	* Python API: Removed method item.remove_profile_by_app_id
	* Python API: Removed class model.profile
	* Python API: Removed method case.new_application
	* Python API: Removed class model.application

Mobius Forensic Toolkit 2.3
	* Added new module app.itubego to retrieve iTubeGo artifacts
	* ant.text_autocomplete: Added support for iTubeGo's URL history
	* ant.received_files: Added new module to retrieve "received files" evidence
	* ant.received_files: Added support for iTubeGo download history
	* ant.sent_files: New module to retrieve "sent files" evidence
	* ant.cookies: Automatically decrypts v10 encrypted cookies
	* app.chromium: Retrieve cookies from Network/Cookies db file
	* evidence-received-files using ant.received_files
	* evidence-sent-files using ant.sent_files
	* kff-manager: Hashes IDs modified from sha2_xxx to sha2-xxx
	* iped-frontend: New settings option "Max memory size"
	* Libmobius: New module crypt::gcrypt
	* Libmobius: New function crypt::gcrypt::init_libgcrypt
	* Libmobius: New function crypt::gcrypt::get_error_message
	* Libmobius: Class crypt::cipher_impl_gcrypt renamed to crypt::gcrypt::cipher_impl
	* Libmobius: New constructor crypt::hash_functor (const std::string&)
	* Libmobius: New constructor bytearray (byte, size)
	* Libmobius: New class crypt::hmac_impl_base
	* Libmobius: New class crypt::hmac_impl_default
	* Libmobius: New class crypt::gcrypt::hash_impl
	* Libmobius: New class crypt::gcrypt::hmac_impl
	* Libmobius: New method crypt::hash::get_digest_size
	* Libmobius: New method crypt::hash::clone
	* Libmobius: New method model::item::count_all_evidences
	* Libmobius: Class crypt::hash_impl_block removed
	* Libmobius: Class crypt::hash_impl_stream removed
	* Libmobius: Class crypt::hash_adler32 reimplemented as hash_impl_adler32
	* Libmobius: Class crypt::hash_ed2k reimplemented as hash_impl_ed2k
	* Libmobius: Class crypt::hash_zip reimplemented as hash_impl_zip
	* Libmobius: Class crypt::hash using hash_impl_base
	* Libmobius: Class crypt::hash_block removed
	* Libmobius: Class crypt::hash_stream removed
	* Libmobius: Class crypt::hash_crc32 removed
	* Libmobius: Class crypt::hash_md4 removed
	* Libmobius: Class crypt::hash_md5 removed
	* Libmobius: Class crypt::hash_sha1 removed
	* Libmobius: Class crypt::hash_sha2_224 removed
	* Libmobius: Class crypt::hash_sha2_256 removed
	* Libmobius: Class crypt::hash_sha2_384 removed
	* Libmobius: Class crypt::hash_sha2_512 removed
	* Libmobius: Class crypt::hash_sha2_512_224 removed
	* Libmobius: Class crypt::hash_sha2_512_256 removed
	* Libmobius: Method model::item::new_ip_address removed
	* Libmobius: Method model::item::get_ip_addresses removed
	* Libmobius: Method model::item::remove_ip_addresses removed
	* Libmobius: Class model::item::ip_address removed
	* Libmobius: Method model::item::new_account removed
	* Libmobius: Method model::item::get_accounts removed
	* Libmobius: Method model::item::remove_accounts removed
	* Libmobius: Class model::item::account removed
	* Libmobius: Method model::item::remove_trash_can_entries removed
	* Libmobius: Method model::item::count_trash_can_entries removed
	* Libmobius: Method model::item::get_trash_can_entries removed
	* Libmobius: Method model::item::new_trash_can_entry removed
	* Libmobius: Class model::item::trash_can_entry removed
	* Libmobius: Method model::item::new_text_search removed
	* Libmobius: Method model::item::get_text_searches removed
	* Libmobius: Method model::item::remove_text_searches removed
	* Libmobius: Method model::item::count_text_searches removed
	* Libmobius: Class model::item::text_search removed
	* Libmobius: Method model::item::new_text_autocomplete removed
	* Libmobius: Method model::item::get_text_autocomplete removed
	* Libmobius: Method model::item::remove_text_autocomplete removed
	* Libmobius: Method model::item::count_text_autocomplete removed
	* Libmobius: Class model::item::text_autocomplete removed
	* Libmobius: Method model::item::new_call removed
	* Libmobius: Method model::item::get_calls removed
	* Libmobius: Method model::item::remove_calls removed
	* Libmobius: Method model::item::count_calls removed
	* Libmobius: Class model::item::call removed
	* Libmobius: Method model::item::new_chat_message removed
	* Libmobius: Method model::item::get_chat_messages removed
	* Libmobius: Method model::item::remove_chat_messages removed
	* Libmobius: Method model::item::count_chat_messages removed
	* Libmobius: Class model::item::chat_message removed
	* Libmobius: Method model::item::new_opened_file removed
	* Libmobius: Method model::item::get_opened_files removed
	* Libmobius: Method model::item::remove_opened_files removed
	* Libmobius: Method model::item::count_opened_files removed
	* Libmobius: Class model::item::opened_file removed
	* Libmobius: Method model::item::new_password removed
	* Libmobius: Method model::item::get_passwords removed
	* Libmobius: Method model::item::remove_passwords removed
	* Libmobius: Method model::item::count_passwords removed
	* Libmobius: Class model::item::password removed
	* Libmobius: Method model::item::new_encryption_key removed
	* Libmobius: Method model::item::get_encryption_keys removed
	* Libmobius: Method model::item::remove_encryption_keys removed
	* Libmobius: Method model::item::count_encryption_keys removed
	* Libmobius: Class model::item::encryption_key removed
	* Libmobius: Method model::item::new_password_hash removed
	* Libmobius: Method model::item::get_password_hashes removed
	* Libmobius: Method model::item::remove_password_hashes removed
	* Libmobius: Method model::item::count_password_hashes removed
	* Libmobius: Class model::item::password_hash removed
	* Libmobius: Method model::item::remove_cookies removed
	* Libmobius: Method model::item::remove_bookmarked_urls removed
	* Libmobius: Method model::item::remove_visited_urls removed
	* Libmobius: Method model::item::count_cookies removed
	* Libmobius: Method model::item::count_bookmarked_urls removed
	* Libmobius: Method model::item::count_visited_urls removed
	* Libmobius: New method decoder::qdatastream::get_qint8
	* Libmobius: New method decoder::qdatastream::get_quint8
	* Libmobius: New method decoder::qdatastream::get_qvariant
	* Python API: New method crypt.hash.get_type
	* Python API: New method crypt.hash.get_block_size
	* Python API: New method crypt.hash.get_digest_size
	* Python API: New method crypt.hash.clone
	* Python API: New method crypt.hmac.get_type
	* Python API: New method crypt.hmac.get_block_size
	* Python API: New method crypt.hmac.get_digest_size
	* Python API: New method crypt.hmac.clone
	* Python API: New method crypt.hmac.reset
	* Python API: New class model.evidence
	* Python API: New method model.item.new_evidence
	* Python API: New method model.item.get_evidences
	* Python API: New method model.item.remove_evidences
	* Python API: New method model.item.count_all_evidences
	* Python API: Method model.item.new_ip_address removed
	* Python API: Method model.item.remove_ip_addresses removed
	* Python API: Method model.item.get_ip_addresses removed
	* Python API: Class model.ip_address removed
	* Python API: Method model.item.new_account removed
	* Python API: Method model.item.remove_accounts removed
	* Python API: Method model.item.get_accounts removed
	* Python API: Class model.account removed
	* Python API: Method model.item.remove_trash_can_entries removed
	* Python API: Method model.item.count_trash_can_entries removed
	* Python API: Method model.item.get_trash_can_entries removed
	* Python API: Method model.item.new_trash_can_entry removed
	* Python API: Class model.trash_can_entry removed
	* Python API: Method model.item.new_text_search removed
	* Python API: Method model.item.get_text_searches removed
	* Python API: Method model.item.remove_text_searches removed
	* Python API: Method model.item.count_text_searches removed
	* Python API: Class model.text_search removed
	* Python API: Method model.item.new_text_autocomplete removed
	* Python API: Method model.item.get_text_autocomplete removed
	* Python API: Method model.item.remove_text_autocomplete removed
	* Python API: Method model.item.count_text_autocomplete removed
	* Python API: Class model.text_search removed
	* Python API: Method model.item.new_call removed
	* Python API: Method model.item.get_calls removed
	* Python API: Method model.item.remove_calls removed
	* Python API: Method model.item.count_calls removed
	* Python API: Class model.call removed
	* Python API: Method model.item.new_chat_message removed
	* Python API: Method model.item.get_chat_messages removed
	* Python API: Method model.item.remove_chat_messages removed
	* Python API: Method model.item.count_chat_messages removed
	* Python API: Class model.chat_message removed
	* Python API: Method model.item.new_opened_file removed
	* Python API: Method model.item.get_opened_files removed
	* Python API: Method model.item.remove_opened_files removed
	* Python API: Method model.item.count_opened_files removed
	* Python API: Class model.opened_file removed
	* Python API: Method model.item.new_password removed
	* Python API: Method model.item.get_passwords removed
	* Python API: Method model.item.remove_passwords removed
	* Python API: Method model.item.count_passwords removed
	* Python API: Class model.password removed
	* Python API: Method model.item.new_password_hash removed
	* Python API: Method model.item.get_password_hashes removed
	* Python API: Method model.item.remove_password_hashes removed
	* Python API: Method model.item.count_password_hashes removed
	* Python API: Class model.password_hash removed
	* Python API: Method model.item.new_encryption_key removed
	* Python API: Method model.item.get_encryption_keys removed
	* Python API: Method model.item.remove_encryption_keys removed
	* Python API: Method model.item.count_encryption_keys removed
	* Python API: Class model.encryption_key removed
	* Python API: Module pymobius.evidence.files_received removed
	* Python API: Module pymobius.evidence.files_sent removed
	* Python API: Module pymobius.evidence removed
	* Python API: Method model.item.count_cookies removed
	* Python API: Method model.item.count_bookmarked_urls removed
	* Python API: Method model.item.count_visted_urls removed
	* Python API: New method decoder.qdatastream.get_qint8
	* Python API: New method decoder.qdatastream.get_quint8
	* Python API: New method decoder.qdatastream.get_qvariant

Mobius Forensic Toolkit 2.2
	* ant.*: Source code reformatted to PEP 8 specs
	* ant.*: Use f-strings when possible
	* ant.turing.chromium_passwords: Automatically decrypts v10 passwords from chromium based browsers
	* ant.trash_can_entries: Handling of zeroed entries fixed
	* ant.trash_can_entries: Handle deleted $I entries
	* configure.ac: Check if libgcrypt is available
	* Libmobius: core::application initialize libgcrypt
	* Libmobius: New operator bytearray <<=
	* Libmobius: New operator bytearray >>=
	* Libmobius: New operator bytearray >>
	* Libmobius: New operator bytearray <<
	* Libmobius: Class crypt::cipher_base renamed to cipher_impl_base
	* Libmobius: Class crypt::cipher_stream renamed to cipher_impl_stream
	* Libmobius: Class crypt::cipher_zip renamed to cipher_impl_zip
	* Libmobius: New abstract method cipher_impl_base::get_type
	* Libmobius: New abstract method cipher_impl_base::is_stream
	* Libmobius: New abstract method cipher_impl_base::is_block
	* Libmobius: New abstract method cipher_impl_base::final
	* Libmobius: New abstract method cipher_impl_base::authenticate
	* Libmobius: New abstract method cipher_impl_base::get_tag
	* Libmobius: New abstract method cipher_impl_base::check_tag
	* Libmobius: New method cipher_impl_stream::is_stream
	* Libmobius: New method cipher_impl_stream::is_block
	* Libmobius: New method cipher_impl_zip::get_type
	* Libmobius: New method cipher_impl_zip::final
	* Libmobius: New class crypt::cipher_impl_null
	* Libmobius: New class crypt::cipher_impl_gcrypt using Libgcrypt
	* Libmobius: New method cipher::get_type
	* Libmobius: New method cipher::is_stream
	* Libmobius: New method cipher::is_block
	* Libmobius: New method cipher::final
	* Libmobius: New method cipher::authenticate
	* Libmobius: New method cipher::get_tag
	* Libmobius: New method cipher::check_tag
	* Libmobius: New class crypt::cipher_impl_ige
	* Libmobius: New function crypt::new_cipher_cbc
	* Libmobius: New function crypt::new_cipher_cbc_cts
	* Libmobius: New function crypt::new_cipher_ctr
	* Libmobius: New function crypt::new_cipher_ecb
	* Libmobius: New function crypt::new_cipher_gcm
	* Libmobius: New function crypt::new_cipher_ige
	* Libmobius: New function crypt::new_cipher_ofb
	* Libmobius: New function crypt::new_cipher_stream
	* Libmobius: New function crypt::rot13
	* Libmobius: os::win::dpapi::blob using new_cipher_cbc
	* Libmobius: os::win::dpapi::credhist_entry using new_cipher_cbc
	* Libmobius: os::win::dpapi::master_key.cc using new_cipher_cbc
	* Libmobius: os::win::registry::registry_data_impl_msdcc using new_cipher_cbc
	* Libmobius: os::win::registry::registry_data_impl_msdcc using new_cipher_ecb
	* Libmobius: os::win::registry::registry_data_impl_msdcc using new_cipher_stream
	* Libmobius: os::win::registry::registry_data_impl_lsa_poleklist using new_cipher_cbc
	* Libmobius: os::win::registry::registry_data_impl_pssp using new_cipher_cbc
	* Libmobius: os::win::registry::registry_set_pssp_keys using new_cipher_cbc
	* Libmobius: os::win::registry::registry_set_lsa_keys using new_cipher_stream
	* Libmobius: os::win::registry::registry_key_impl_user_assist using function crypt::rot13
	* Libmobius: os::win::registry::registry_data_impl_lsa_polseckey using new_cipher_ecb
	* Libmobius: os::win::hash_lm using new_cipher_ecb
	* Libmobius: Class crypt::cipher_block renamed to cipher_impl_block
	* Libmobius: New method cipher_impl_block::is_stream
	* Libmobius: New method cipher_impl_block::is_block
	* Libmobius: Method cipher_impl_block::reset removed
	* Libmobius: Class crypt::cipher_block_mode removed
	* Libmobius: Class crypt::cipher_block_mode_impl_base removed
	* Libmobius: Class crypt::cipher_block_mode_impl_cbc removed
	* Libmobius: Class crypt::cipher_block_mode_impl_ecb removed
	* Libmobius: Class crypt::cipher_block_mode_impl_ige removed
	* Libmobius: Class crypt::cipher_3des removed
	* Libmobius: Class crypt::cipher_aes removed
	* Libmobius: Class crypt::cipher_blowfish removed
	* Libmobius: Class crypt::cipher_des removed
	* Libmobius: Class crypt::cipher_rc2 removed
	* Libmobius: Class crypt::cipher_rc4 removed
	* Libmobius: Class crypt::cipher_rot13 removed
	* Libmobius: crypt::cipher constructor (id, key) removed
	* Python API: New method cipher.get_type
	* Python API: New method cipher.is_stream
	* Python API: New method cipher.is_block
	* Python API: New method cipher.final
	* Python API: New method cipher.authenticate
	* Python API: New method cipher.get_tag
	* Python API: New method cipher.check_tag
	* Python API: crypt.cipher constructor removed
	* Python API: New function crypt.new_cipher_cbc
	* Python API: New function crypt.new_cipher_cbc_cts
	* Python API: New function crypt.new_cipher_ctr
	* Python API: New function crypt.new_cipher_ecb
	* Python API: New function crypt.new_cipher_gcm
	* Python API: New function crypt.new_cipher_ige
	* Python API: New function crypt.new_cipher_ofb
	* Python API: New function crypt.new_cipher_stream
	* Python API: New function crypt.rot13
	* imagefile-msr: Using function new_cipher_cbc
	* registry.user_accounts: Using function crypt.new_cipher_cbc
	* registry.user_accounts: Using function crypt.new_cipher_ecb
	* registry.user_accounts: Using function crypt.new_cipher_stream
	* gtk-ui-view-selector: Bug fixed at set_current_view function

Mobius Forensic Toolkit 2.1
	* Added new C++ extension "vfs.block.bitlocker"
	* Added new extension "vfs-block-view-partition-system"
	* Added new extension "vfs-block-view-bitlocker"
	* Added new extension "gtk-ui-view-selector"
	* vfs-viewer: Changed to show block's parents and children
	* vfs-viewer: Fixed DND block attributes
	* vfs-viewer: Changed to move Partition table view to vfs-block-view-partition-system extension
	* vfs-viewer: Removed partition system panel
	* gtk-ui: Changed to move widget "view-selector" to gtk-ui-view-selector extension
	* iped-frontend: open/commit transaction when setting DNAME
	* app.chromium.decoder_web_data: Changed to handle db versions up to 117
	* app.chromium: Added new function get_datetime
	* app.chromium: Added new function add_column
	* app.chromium.decoder_login_data: Changed to use get_datetime function
	* app.chromium.decoder_login_data: Changed to use add_column function
	* app.chromium.decoder_login_data: Changed to retrieve date_created metadata
	* app.chromium.decoder_login_data: Changed to retrieve times_used metadata
	* app.chromium.decoder_login_data: Changed to retrieve date_last_used metadata
	* app.chromium.decoder_login_data: Changed to retrieve date_password_modified metadata
	* vfs.block.partition_system_dos: Fixed bug decoding DOS extended partitions
	* vfs.filesystem.vfat: Fixed detection of FAT16 filesystems
	* ant.accounts: Changed to retrieve Login Data from Chromium based browsers
	* tools: Added new tool "vfs_info"
	* Libmobius: Added new class hash_impl_base
	* Libmobius: Added new class hash_impl_block
	* Libmobius: Added new class hash_impl_stream
	* Libmobius: Fixed bug addressing invalid block in vfs::_load_blocks
	* Libmobius: Fixed bug when block decoder throws exception in vfs::_load_blocks
	* Libmobius: Added debug messages in vfs::_load_blocks
	* Libmobius: Added new function core::set_configfile_path
	* Libmobius: Changed file application.cc.in to use set_configfile_path
	* Libmobius: Added encoding arg to bytearray::to_string
	* Libmobius: Added operator bool to decoder::data_decoder class
	* Libmobius: Added optional arg "indent" to bytearray::dump function
	* Libmobius: Added new constructor pod::data (const std::vector <data>&)
	* Libmobius: Added new pod::data::operator= (const std::vector <data>&)
	* Libmobius: Added new pod::data::operator std::vector <data> ()
	* Libmobius: Changed pod::unserialize to use std::vector <pod::data>
	* Libmobius: Changed vfs.cc to use std::vector <pod::data>
	* Libmobius: Changed model::chat_message to use std::vector <pod::data>
	* Libmobius: Changed model::call to use std::vector <pod::data>
	* Libmobius: Removed class pod::list
	* Python API: Changed model.chat_message to use std::vector <pod::data>
	* Python API: Changed model.call to use std::vector <pod::data>
	* Python API: Added new module pylist.h
	* Python API: Added new template function pylist_to_cpp_container
	* Python API: Added new template function get_arg_as_cpp_vector
	* Python API: Moved function pylist_from_cpp_container to pylist.h
	* Python API: Moved function pylist_from_cpp_pair_container to pylist.h
	* Python API: Removed module pod.list

Mobius Forensic Toolkit 2.0
	* Extensions: Added new package vfs/block
	* Extensions: filesystem package moved to vfs
	* Extensions: imagefile package moved to vfs
	* ice: Changed to set VFS from item.datasource
	* iped-frontend: Changed to use VFS instead of item.datasource
	* iped-frontend: Added new option "sector_size" to the processing panel
	* floppy-imager: Changed to use VFS instead of item.datasource
	* extension-builder: Added accelerator (CTRL+S) to "save" option
	* gtk-ui: Added new function tableview.select_row
	* gtk-ui: Added new function tableview.unselect_row
	* gtk-ui: Added new function view_selector.reload
	* file-explorer: Changed to use VFS instead of item.datasource
	* evidence-viewer: Changed to use VFS instead of item.datasource
	* Added new extension "vfs.block.partition_system_apm"
	* Added new extension "vfs.block.partition_system_dos"
	* Added new extension "vfs.block.partition_system_gpt"
	* Added new extension "vfs.block.filesystems"
	* Added new extension "imagefile-dnd"
	* Added new extension "vfs-viewer"
	* Added new extension "vfs-item-attributes"
	* Removed extension "data-viewer"
	* Removed extension "partition-viewer"
	* Removed extension "filesystem-viewer"
	* Removed extension "datasource-viewer"
	* Removed extension "datasource-imagefile"
	* Removed extension "datasource-physical-device"
	* Removed extension "datasource-model"
	* Removed C++ extension "partition-system-apm"
	* Removed C++ extension "partition-system-dos"
	* Removed C++ extension "partition-system-gpt"
	* Libmobius: Added new class vfs::block
	* Libmobius: Added new class vfs::block_impl_base
	* Libmobius: Added new class vfs::block_impl_null
	* Libmobius: Added new class vfs::block_impl_datasource
	* Libmobius: Added new class vfs::block_impl_slice
	* Libmobius: Added new class vfs::datasource
	* Libmobius: Added new class vfs::datasource_impl_base
	* Libmobius: Added new class vfs::datasource_impl_null
	* Libmobius: Added new class vfs::datasource_impl_imagefile
	* Libmobius: Added new class vfs::datasource_impl_device
	* Libmobius: Added new class vfs::vfs
	* Libmobius: Added new function vfs::new_datasource_by_device_uid
	* Libmobius: Added new function vfs::new_datasource_by_url
	* Libmobius: Added new module vfs::util
	* Libmobius: Added new class thread_safe_flag
	* Libmobius: Changed to move function normalize_drive_info to vfs::util
	* Libmobius: Changed to check for VFS row in item::has_vfs
	* Libmobius: Added new method item::get_vfs
	* Libmobius: Added new method item::set_vfs
	* Libmobius: Added new method item::remove_vfs
	* Libmobius: Added new event "vfs-modified"
	* Libmobius: Added new event "vfs-removed"
	* Libmobius: Added new method folder::set_name
	* Libmobius: Removed package mobius::disk
	* Libmobius: Removed class mobius::vfs::partition_system
	* Libmobius: Removed class mobius::vfs::partition_system_entry
	* Libmobius: Removed class mobius::vfs::partition_system_impl_base
	* Libmobius: Removed class mobius::vfs::partition_system_impl_null
	* Python API: Added new class vfs.block
	* Python API: Added new class vfs.datasource
	* Python API: Added new class vfs.vfs
	* Python API: Added new function vfs.new_datasource_by_device_uid
	* Python API: Added new function vfs.new_datasource_by_url
	* Python API: Added new method item.get_vfs
	* Python API: Added new method item.set_vfs
	* Python API: Added new method item.remove_vfs
	* Python API: Added new event "vfs-modified"
	* Python API: Added new event "vfs-removed"
	* Python API: Fixed error in mobius::py::from_pyobject function
	* Python API: Removed function mobius.vfs.new_partition_system
	* Python API: Removed function mobius.vfs.get_partition_systems
	* Python API: Removed function mobius.vfs.get_filesystems
	* Python API: Removed class mobius.vfs.partition_system
	* Python API: Removed class mobius.vfs.partition_system_entry
	* Python API: Removed class mobius.vfs.partition
	* Python API: Added setter for folder.name
	* Python API: Changed pymobius.ant.trash_can_entries to use VFS
	* Python API: Changed pymobius.registry.main to use VFS
	* Python API: Changed pymobius.p2p.emule to use VFS
	* Python API: Changed pymobius.operating_system to use VFS
	* Python API: Removed module pymobius.vfs
	* Python API: Removed module pymobius.deprecated
	* Python API: Removed module mobius.disk
	* tools/dirfs: Changed to use VFS
	* tools/hashfs: Changed to use VFS
	* python/examples/kff.py: Changed to use VFS

Mobius Forensic Toolkit 1.37
	* category-manager: Fixed error importing .json files. Reported by Frederico Marchezini
	* iped-frontend: Removed support for IPED v3.x
	* iped-frontend: Changed to use sector_size when processing imagefiles
	* filesystem_vfat: Fixed precision error when calculating sectors, size, and clusters
	* datasource-imagefile: Added sector_size spinbutton
	* datasource-viewer: Changed to handle sector_size settings
	* Libmobius: Fixed error in disk::get_filesystem to detect filesystem only disks
	* Libmobius: Added new method pod::map::update
	* Libmobius: Added new method disk::set_sector_size
	* Python API: Added new method pod.map.update
	* Python API: Added setter for disk.sector_size
	* AppImage: Changed to use PYTHONPATH environment variable. Reported by Frederico Marchezini
	* Tools/partition_table: Changed to check if partition system is valid
	* Tools/partition_table: Added new command line option -s (sector_size)

Mobius Forensic Toolkit 1.36
	* Added new C++ extension: partition-system-apm
	* Added new C++ extension: partition-system-dos
	* Added new C++ extension: partition-system-gpt
	* Pymobius.registry: Changed to use set_ant instead of datasource.mtime
	* Pymobius.p2p: Changed to use set_ant instead of datasource.mtime
	* Hive: Changed to use has_ant
	* filesystem-viewer: Changed to use set_ant instead of datasource.mtime
	* filesystem-viewer: Changed to use mobius.core.add/remove_resource
	* partition-viewer: Changed to use set_ant instead of datasource.mtime
	* partition-viewer: Changed to use mobius.vfs.partition_system
	* datasource-imagefile: Changed to do not set datasource.mtime
	* datasource-physical-device: Changed to do not set datasource.mtime
	* data-viewer: Changed to use mobius.core.add/remove_resource
	* evidence-received-files: Changed to use mobius.core.add/remove_resource
	* evidence-sent-files: Changed to use mobius.core.add/remove_resource
	* kff-manager: Changed to use mobius.core.add/remove_resource
	* kff-manager: Changed to use mobius.core.get/set_config
	* evidence-bookmarked-urls: Changed to use mobius.core.set/get_config
	* evidence-cookies: Changed to use mobius.core.set/get_config
	* evidence-encryption-keys: Changed to use mobius.core.set/get_config
	* evidence-password-hashes: Changed to use mobius.core.set/get_config
	* evidence-password-hashes: Fixed a bug testing keywords (Reported by Clemente Paixão)
	* evidence-passwords: Changed to use mobius.core.set/get_config
	* evidence-trash-can-entries: Changed to use mobius.core.set/get_config
	* evidence-visited-urls: Changed to use mobius.core.set/get_config
	* extension-builder: Changed to use mobius.core.set/get_config
	* extension-manager: Changed to use mobius.core.set/get_config
	* gtk-report-dialog: Changed to use mobius.core.set/get_config
	* gtk-ui-hexview: Changed to use mobius.core.set/get_config
	* category-manager: Changed to use mobius.core.add/remove_resource
	* cellphone-agent: Changed to use mobius.core.add/remove_resource
	* evidence-calls: Changed to use mobius.core.add/remove_resource
	* evidence-chat-messages: Changed to use mobius.core.add/remove_resource
	* evidence-ip-addresses: Changed to use mobius.core.add/remove_resource
	* evidence-opened-files: Changed to use mobius.core.add/remove_resource
	* evidence-text-autocomplete: Changed to use mobius.core.add/remove_resource
	* evidence-text-searches: Changed to use mobius.core.add/remove_resource
	* gigatribe-agent: Changed to use mobius.core.add/remove_resource
	* hive-gigatribe-report: Changed to use mobius.core.add/remove_resource
	* lshw-agent: Changed to use mobius.core.add/remove_resource
	* report-viewer: Changed to use mobius.core.add/remove_resource
	* report-wizard: Changed to use mobius.core.add/remove_resource
	* turing: Changed to use mobius.core.add/remove_resource
	* ice: Changed to use mobius.model.new/open/close_case
	* filesystem_vfat: Improved detection of VFAT filesystem
	* filesystem_vfat: Improved detection of FAT entry size
	* filesystem_vfat: Added new attribute "is_dirty"
	* filesystem_vfat: Added new attribute "total_clusters"
	* filesystem_vfat: Added new attribute "fat_entry_size"
	* filesystem_vfat: Added new attribute "filesystem_type"
	* filesystem_vfat: Added new attribute "free_clusters"
	* filesystem_vfat: Added new attribute "next_available_cluster"
	* Libmobius: Changed to create data/attrs folder only when setting attribute
	* Libmobius: Removed method io::file::set_tag
	* Libmobius: Removed method io::file::reset_tag
	* Libmobius: Removed method io::file::has_tag
	* Libmobius: Removed method io::file::get_tags
	* Libmobius: Removed method io::file::has_metadata
	* Libmobius: Removed method io::file::set_metadata
	* Libmobius: Removed method io::file::get_metadata
	* Libmobius: Removed method io::file::remove_metadata
	* Libmobius: Removed method io::file_impl_base::set_tag
	* Libmobius: Removed method io::file_impl_base::reset_tag
	* Libmobius: Removed method io::file_impl_base::has_tag
	* Libmobius: Removed method io::file_impl_base::get_tags
	* Libmobius: Removed method io::file_impl_base::has_metadata
	* Libmobius: Removed method io::file_impl_base::set_metadata
	* Libmobius: Removed method io::file_impl_base::get_metadata
	* Libmobius: Removed method io::file_impl_base::remove_metadata
	* Libmobius: Removed method io::folder::set_tag
	* Libmobius: Removed method io::folder::reset_tag
	* Libmobius: Removed method io::folder::has_tag
	* Libmobius: Removed method io::folder::get_tags
	* Libmobius: Removed method io::folder::has_metadata
	* Libmobius: Removed method io::folder::set_metadata
	* Libmobius: Removed method io::folder::get_metadata
	* Libmobius: Removed method io::folder::remove_metadata
	* Libmobius: Removed method io::folder_impl_base::set_tag
	* Libmobius: Removed method io::folder_impl_base::reset_tag
	* Libmobius: Removed method io::folder_impl_base::has_tag
	* Libmobius: Removed method io::folder_impl_base::get_tags
	* Libmobius: Removed method io::folder_impl_base::has_metadata
	* Libmobius: Removed method io::folder_impl_base::set_metadata
	* Libmobius: Removed method io::folder_impl_base::get_metadata
	* Libmobius: Removed method io::folder_impl_base::remove_metadata
	* Libmobius: Added new method model::item::has_vfs
	* Libmobius: Removed class model::case_manager
	* Libmobius: Added new function model::new_case
	* Libmobius: Added new function model::open_case
	* Libmobius: Added new function model::close_case
	* Libmobius: Added new function model::get_cases
	* Libmobius: Added new function model::get_case_count
	* Libmobius: Moved class partition to mobius::vfs
	* Libmobius: Moved class partition_system to mobius::vfs
	* Libmobius: Moved class partition_system_impl_base to mobius::vfs
	* Libmobius: Moved class partition_system_impl_null to mobius::vfs
	* Libmobius: Removed class partition_system_impl_apm
	* Libmobius: Removed class partition_system_impl_dos
	* Libmobius: Removed class partition_system_impl_gpt
	* Libmobius: Removed module mobius::partition
	* Libmobius: Added new class io::reader_impl_slice
	* Libmobius: Added new function io::new_slice_reader
	* Libmobius: Added new arg "type" for vfs::partition_system constructor
	* Libmobius: Added new method vfs::partition_system::get_attribute
	* Libmobius: Added new method vfs::partition_system::get_attributes
	* Libmobius: Changed decoder::data_decoder::get_guid to return GUID in uppercase
	* Libmobius: Added new method vfs::partition::set_attribute
	* Libmobius: Added new method vfs::partition::get_attribute
	* Libmobius: Added new method vfs::partition::get_attributes
	* Libmobius: Added new class vfs::partition_system_entry
	* Libmobius: Fixed a bug in pod::list::operator==
	* Python API: Removed method io.file.set_tag
	* Python API: Removed method io.file.reset_tag
	* Python API: Removed method io.file.has_tag
	* Python API: Removed method io.file.get_tags
	* Python API: Removed method io.file.has_metadata
	* Python API: Removed method io.file.get_metadata
	* Python API: Removed method io.file.set_metadata
	* Python API: Removed method io.file.remove_metadata
	* Python API: Removed method io.folder.set_tag
	* Python API: Removed method io.folder.reset_tag
	* Python API: Removed method io.folder.has_tag
	* Python API: Removed method io.folder.get_tags
	* Python API: Removed method io.folder.has_metadata
	* Python API: Removed method io.folder.get_metadata
	* Python API: Removed method io.folder.set_metadata
	* Python API: Removed method io.folder.remove_metadata
	* Python API: Added new method model.item.has_vfs
	* Python API: Removed method application.get_config
	* Python API: Removed method application.set_config
	* Python API: Removed service app.add-resource
	* Python API: Removed service app.remove-resource
	* Python API: Removed class model.case_manager
	* Python API: Added new function model.new_case
	* Python API: Added new function model.open_case
	* Python API: Added new function model.close_case
	* Python API: Added new function model.get_cases
	* Python API: Added new function model.get_case_count
	* Python API: Moved class partition to mobius.vfs
	* Python API: Removed function vfs.get_partitions
	* Python API: Removed function vfs.get_partition_table
	* Python API: Removed module mobius.partition
	* Python API: Added new function io.new_slice_reader
	* Python API: Added new class vfs.partition_system
	* Python API: Added new class vfs.partition_system_entry
	* Python API: Added new method vfs.partition.get_attribute
	* Python API: Added new method vfs.partition.get_attributes
	* Python API: Added new function vfs.get_partition_systems
	* Python API: Added new function vfs.new_partition_system
	* Python API: Added new function vfs.get_filesystems
	* Python API: Added new function py::pylist_from_cpp_pair_container

Mobius Forensic Toolkit 1.35
	* New C++ extension: date-code
	* New extension "Evidence: Accounts"
	* report-model: Error fixed when closing mobius.io.file
	* date-code: Python extension removed
	* attribute-viewer: Subscribe to attribute-modified event
	* attribute-viewer: Subscribe to attribute-removed event
	* attribute-viewer: Using mobius.core.add/remove_resource
	* part-catalogue: Using mobius.core.set_config/get_config
	* part-catalogue: Subscribe to attribute-modified event
	* part-catalogue: Using mobius.core.add/remove_resource
	* datasource-model: Subscribe to attribute-modified event
	* datasource-model: Subscribe to attribute-removed event
	* ice: Subscribe to attribute-modified event
	* ice: Subscribe to attribute-removed event
	* ice: Subscribe to resource-added event
	* ice: Subscribe to resource-removed event
	* ice: Using mobius.core.get_resources
	* ice: Added Mobius homepage's URL to About Dialog
	* iped-frontend: Set laudo.reports as list (Reported by Clemente Paixão)
	* iped-frontend: Using mobius.core.add/remove_resource
	* datasource-imagefile: Using mobius.core.set_config/get_config
	* datasource-imagefile: Using pymobius.Data instead of deprecated.Object
	* datasource-imagefile: Using mobius.core.add/remove_resource
	* datasource-physical-device: Using pymobius.Data instead of deprecated.Object
	* datasource-physical-device: Using mobius.core.add/remove_resource
	* evidence-viewer: Subscribe to resource-added event
	* evidence-viewer: Subscribe to resource-removed event
	* evidence-viewer: Using mobius.core.get_resources
	* evidence-viewer: Using mobius.core.add/remove_resource
	* hive: Using mobius.core.set_config/get_config
	* hive: Subscribe to resource-added event
	* hive: Subscribe to resource-removed event
	* hive: Using mobius.core.add/remove_resource
	* engelbart: Using mobius.core.set_config/get_config
	* engelbart: Using mobius.core.get_resources
	* engelbart: Using mobius.core.get_resource
	* gtk-ui: Using mobius.core.get_resource
	* gtk-ui: Using mobius.core.add/remove_resource
	* datasource-viewer: Using mobius.core.set_config/get_config
	* datasource-viewer: Using mobius.core.add/remove_resource
	* datasource-viewer: Using mobius.core.get_resources
	* file-explorer: Using mobius.core.set_config/get_config
	* file-explorer: Using mobius.core.add/remove_resource
	* file-explorer: Using mobius.core.get_resources
	* skype-agent: Using mobius.core.set_config/get_config
	* skype-agent: Using mobius.core.add/remove_resource
	* skype-agent: Using mobius.core.get_resources
	* skype-agent: Accounts panel removed
	* skype-agent-sqlite: Using mobius.core.add/remove_resource
	* skype-agent-sqlite: retrieve_accounts function removed
	* skype-agent-l33l: Extension removed
	* partition-viewer: Using mobius.core.add/remove_resource
	* hive-report: Using mobius.core.add/remove_resource
	* hive-report: Added last used user name to OS general info report
	* p2p-viewer: Using mobius.core.add/remove_resource
	* p2p-viewer: Show unknown values as empty strings
	* Service app.get-resource removed
	* Service app.list-resources removed
	* p2p.emule: Error setting username from .part.met entries (Reported by Clemente Paixão)
	* p2p.emule: Try utf-8, then iso-8559-1 encodings when decoding Tags from known.met files (Reported by Clemente Paixão)
	* app.gecko: Retrieve cookies.host
	* app.gecko: Retrieve cookies.creationtime
	* app.utorrent: Set flag_downloaded as STATE_UNKNOWN when info is not available
	* app.utorrent: Set flag_uploaded as STATE_UNKNOWN when info is not available
	* app.utorrent: Set flag_shared as STATE_UNKNOWN when info is not available
	* Libmobius: Compatible with C++17
	* Libmobius: New class mobius::core::mediator
	* Libmobius: New method datetime::date::get_weekday
	* Libmobius: New method model::case::operator==
	* Libmobius: New method model::case::operator!=
	* Libmobius: model::item::operator== also compare items' case
	* Libmobius: model::item::operator!= also compare items' case
	* Libmobius: model::item::set_attribute emits 'attribute-modified'
	* Libmobius: model::item::remove_attribute emits 'attribute-removed'
	* Libmobius: core::add_resource emits 'resource-added'
	* Libmobius: core::remove_resource emits 'resource-removed'
	* Libmobius: New class model::account
	* Libmobius: New operator < for model::item
	* Libmobius: New operator <= for model::item
	* Libmobius: New operator > for model::item
	* Libmobius: New operator >= for model::item
	* Libmobius: New operator < for model::case
	* Libmobius: New operator <= for model::case
	* Libmobius: New operator > for model::case
	* Libmobius: New operator >= for model::case
	* Libmobius: Check sizes when comparing two pod::map objects
	* Libmobius: New operator != for pod::map
	* Libmobius: New method io::text_writer::flush implemented
	* Libmobius: model::item::has_attribute queries database
	* Libmobius: model::item::get_attribute queries database
	* Libmobius: model::item::get_attributes queries database
	* Libmobius: database::statement::bind handles SQLITE_TOOBIG return value
	* Python API: New method py::pyobject::clone
	* Python API: New method py::pyobject::call
	* Python API: New method py::pyobject::to_std_string
	* Python API: New method py::pyobject::dir
	* Python API: New method py::pyobject::get_attributes
	* Python API: New class py::pycallback
	* Python API: New function py::get_error_message
	* Python API: New function core.subscribe
	* Python API: New function core.unsubscribe
	* Python API: Callback for attribute-modified event implemented
	* Python API: Callback for attribute-removed event implemented
	* Python API: Callback for resource-added event implemented
	* Python API: Callback for resource-removed event implemented
	* Python API: model.item.tp_richcompare implemented
	* Python API: model.case.tp_richcompare implemented
	* Python API: New function mobius::py::py_true
	* Python API: New function mobius::py::py_false
	* Python API: New function mobius::py::py_not_implemented
	* Python API: New method io.text_writer.flush implemented
	* Class pymobius.deprecated.Object removed
	* Class pymobius.deprecated.item_wrapper removed
	* pymobius.Data: New method to_dict
	* pymobius.Data: New method from_dict

Mobius Forensic Toolkit 1.34
	* ui-gtk3: Using core::resource
	* filesystem-exfat: Using core::resource
	* filesystem-ext2: Using core::resource
	* filesystem-hfs: Using core::resource
	* filesystem-iso9660: Using core::resource
	* filesystem-ntfs: Using core::resource
	* filesystem-vfat: Using core::resource
	* imagefile-dossier: Using core::resource
	* imagefile-ewf: Using core::resource
	* imagefile-msr: Using core::resource
	* imagefile-raw: Using core::resource
	* imagefile-solo: Using core::resource
	* imagefile-split: Using core::resource
	* imagefile-talon: Using core::resource
	* imagefile-vhd: Using core::resource
	* imagefile-vhdx: Using core::resource
	* evidence-received-files: Added support for µTorrent
	* evidence-ip-addresses: New extension
	* filesystem-viewer: Bug fixed when showing saved data
	* ice: Using mobius.core.has_config/set_config/get_config
	* sdi-window-manager: Using mobius.core.has_config/set_config/get_config
	* evidence-calls: Using mobius.core.set_config/get_config
	* evidence-chat-messages: Using mobius.core.set_config/get_config
	* evidence-opened-files: Using mobius.core.set_config/get_config
	* evidence-sent-files: Using mobius.core.set_config/get_config
	* evidence-text-autocomplete: Using mobius.core.set_config/get_config
	* evidence-text-searches: Using mobius.core.set_config/get_config
	* evidence-viewer: Using mobius.core.set_config/get_config
	* p2p-viewer: Using mobius.core.set_config/get_config
	* p2p-viewer: Added support for µTorrent
	* report-model: Error trying to close text_writer fixed
	* gtk-ui: Using mobius.core.set_config/get_config
	* iped-frontend: Using mobius.core.set_config/get_config
	* iped-frontend: Using shutil.copyfile instead of copy (by Clemente Paixão)
	* app.chromium.decoder_bookmarks: Better error handling
	* app.chromium.decoder_cookies: Better error handling
	* app.chromium.decoder_history: Added support for schema version = 23
	* p2p.shareaza.decoder_sd: Better error handling
	* p2p.shareaza.CDownload: Error comparing string and bytes fixed
	* p2p.shareaza.__init__: Error sorting remote files fixed
	* New module app.utorrent adds support for µTorrent
	* Libmobius: core::extension::icon_data attribute removed
	* Libmobius: New class core::resource
	* Libmobius: New function core::add_resource
	* Libmobius: New function core::remove_resource
	* Libmobius: New function core::has_resource
	* Libmobius: New function core::get_resource
	* Libmobius: New function core::get_resources
	* Libmobius: New function core::get_resource_value
	* Libmobius: Function ui::add_implementation removed
	* Libmobius: Function ui::remove_implementation removed
	* Libmobius: Function ui::get_implementations removed
	* Libmobius: Function vfs::add_filesystem_implementation removed
	* Libmobius: Function vfs::remove_filesystem_implementation removed
	* Libmobius: Function vfs::get_filesystem_implementations removed
	* Libmobius: Function vfs::add_imagefile_implementation removed
	* Libmobius: Function vfs::remove_imagefile_implementation removed
	* Libmobius: New function decoder::data::decoder::get_ipv6
	* Libmobius: New function decoder::data::decoder::get_ipv4_mapped_ipv6
	* Libmobius: New class model::ip_address
	* Libmobius: New function core::set_config
	* Libmobius: New function core::get_config
	* Libmobius: New function core::has_config
	* Libmobius: New function core::remove_config
	* Libmobius: New function core::new_config_connection
	* Libmobius: New function core::new_config_transaction
	* Libmobius: Method core::application::get_config_double removed
	* Libmobius: Method core::application::get_config_int removed
	* Libmobius: Method core::application::get_config_string removed
	* Libmobius: Method core::application::set_config (double) removed
	* Libmobius: Method core::application::set_config (int) removed
	* Libmobius: Method core::application::set_config (string) removed
	* Libmobius: Method core::application::has_config removed
	* Libmobius: std::hash implementation for model::item class
	* Python API: core.extension.icon_data attribute removed
	* Python API: Function ui.get_implementations removed
	* Python API: Function vfs.get_filesystem_implementations removed
	* Python API: New class core.resource
	* Python API: New function core.add_resource
	* Python API: New function core.remove_resource
	* Python API: New function core.has_resource
	* Python API: New function core.get_resource
	* Python API: New function core.get_resources
	* Python API: New function core.get_resource_value
	* Python API: New function decoder.data.decoder.get_ipv6
	* Python API: New function decoder.data.decoder.get_ipv4_mapped_ipv6
	* Python API: New function pod.data.pymobius_pod_data_to_python
	* Python API: New function pod.data.pymobius_pod_list_to_python
	* Python API: New function pod.data.pymobius_pod_map_to_python
	* Python API: decoder.btencode function using pymobius_pod_map_to_python
	* Python API: New function core.set_config
	* Python API: New function core.get_config
	* Python API: New function core.has_config
	* Python API: New function core.remove_config
	* Python API: New function core.new_config_connection
	* Python API: New function core.new_config_transaction
	* Python API: Method core.application.has_config removed
	* Python API: Method core.application.new_transaction removed
	* Python API: New method item.count_evidences
	* Python API: tp_hash implementation for model.item
	* Tools: New tool list_resources

Mobius Forensic Toolkit 1.33
	* New extension KFF Manager
	* category-manager: Using mobius.io.text_writer
	* evidence-password-hashes: Using mobius.io.text_writer
	* evidence-password-hashes: Using mobius.io.line_reader
	* evidence-passwords: Using mobius.io.text_writer
	* extension-builder: Using mobius.io.text_writer
	* iped-frontend: Using mobius.io.text_writer
	* report-model: Using mobius.io.text_writer
	* turing: Using mobius.io.text_writer
	* turing: Using mobius.io.line_reader
	* gtk-ui: Using mobius.io.text_writer
	* gtk-ui: tableview.on_dnd_get_data event implemented
	* p2p-viewer: Show alert local/remote files, using KFF database
	* p2p.model: Save/load search.count
	* p2p.model: Using mobius.io.text_writer
	* p2p.emule: Decode tag 0x14
	* p2p.emule.decoder_part_met_txtsrc: Using mobius.io.line_reader
	* p2p.emule.decoder_preferences_ini: Using mobius.io.line_reader
	* p2p.emule.decoder_ac_searchstrings_dat: Using mobius.io.line_reader
	* p2p.emule.decoder_ip_to_country: Using mobius.io.line_reader
	* p2p.emuletorrent.decoder_emuletorrent_ini: Using mobius.io.line_reader
	* ant.turing.custom_dic: Using mobius.io.line_reader
	* app.internet_explorer.profile: Using mobius.io.line_reader
	* app.internet_explorer.decoder_cookies: Using mobius.io.line_reader
	* Libmobius: New class mobius::io::text_reader
	* Libmobius: New class mobius::io::text_writer
	* Libmobius: New class mobius::io::line_reader
	* Libmobius: kff::alert_lookup returns IDs instead of hashset objects
	* Libmobius: kff::lookup returns status (A,I,N) instead of hashset objs
	* Libmobius: New class database::connection_set
	* Libmobius: New method database::get_changes
	* Libmobius: New method statement::reset
	* Libmobius: New method io::path::get_filename_prefix
	* Libmobius: New function conv_charset_partial
	* Libmobius: New function conv_charset_to_utf8_partial
	* Libmobius: Error fixed in ordered_map::set when setting value twice
	* Libmobius: database::connection_set constructor implemented
	* Python API: New class mobius.io.text_reader
	* Python API: New class mobius.io.text_writer
	* Python API: New class mobius.io.line_reader
	* Python API: New class mobius.database.connection_set
	* Python API: kff.alert_lookup returns IDs instead of hashset objects
	* Python API: kff.lookup returns status (A,I,N) instead of hashset objs
	* Python API: New template function mobius::py::check_arg
	* Python API: New function mobius::py::set_stop_iteration

Mobius Forensic Toolkit 1.32
	* iped-frontend: Compatible with both IPED3 and IPED4
	* iped-frontend: Remove old hashes.txt
	* iped-frontend: New text entry to edit "dname" field 
	* iped-frontend: Test if iped_path dir exists before using it
	* extension-manager: Encoding error fixed. Reported by Clemente Paixão
	* data-sourcerer: Renamed to datasource-viewer
	* imagefile-dossier: Decoupled from imagefile-split implementation
	* imagefile-solo: Decoupled from imagefile-split implementation
	* imagefile-talon: Decoupled from imagefile-split implementation
	* extension-builder: Error setting extension icon fixed
	* extension-builder: Use mobius.decoder.base64 instead of b64decode
	* category-manager: Use mobius.encoder.base64 instead of b64encode
	* category-manager: Use mobius.decoder.base64 instead of b64decode
	* category-manager: Error exporting .json files fixed
	* part-catalogue: Encoding error fixed
	* lshw-agent: Encoding error fixed
	* attribute-viewer: Set UID and category on DND
	* gtk-ui: AttributeList.set_data converts values to string
	* gtk-ui: New method tableview.get_selected_rows
	* gtk-ui: New method tableview.remove_selected_rows
	* gtk-ui: Column type 'int' is now rendered as GObject.TYPE_LONG
	* evidence-password-hashes: Error exporting .john files fixed
	* evidence-password-hashes: Error exporting .hashcat files fixed
	* evidence-password-hashes: Error exporting .pot files fixed
	* evidence-password-hashes: Error exporting wordlist files fixed
	* evidence-passwords: Error exporting wordlist files fixed
	* app.skype_v14: Decoding error fixed. Reported by Clemente Paixão
	* app.chromium: Decoding error fixed in decoder_cookies
	* ant.turing: More meaningful warning messages
	* ant.turing.credentials: Better error handling
	* ant.trash_can_entries: Lookup for $R files improved
	* p2p.emule.decoder_preferences_ini: Added utf-8 decoding
	* p2p.emule.CTag: Decode utf-8 error fixed
	* p2p.emule: Call urllib.parse.quote instead of urllib.quote
	* p2p.emuletorrent: Compatible with Python3
	* p2p.emuletorrent: Use mobius.decoder.btencode
	* p2p.emuletorrent: Better error handling
	* p2p.ares: Compatible with Python3
	* p2p.ares: Better error handling
	* p2p.shareaza: Compatible with Python3
	* p2p.shareaza: Better error handling
	* New C++ extension: imagefile-split
	* New C++ extension: filesystem-exfat
	* New C++ extension: filesystem-ext2
	* New C++ extension: filesystem-hfs
	* New C++ extension: filesystem-iso
	* New C++ extension: filesystem-ntfs
	* New C++ extension: filesystem-vfat
	* Libmobius: Module mobius::imagefile::split removed
	* Libmobius: Function filesystem::register_filesystem_type removed
	* Libmobius: Function filesystem::unregister_filesystem_type removed
	* Libmobius: New function filesystem::add_filesystem_implementation
	* Libmobius: New function filesystem::remove_filesystem_implementation
	* Libmobius: New function filesystem::get_filesystem_implementations
	* Libmobius: Class vfs::filesystem::filesystem_impl_exfat removed
	* Libmobius: Class vfs::filesystem::filesystem_impl_ext2 removed
	* Libmobius: Class vfs::filesystem::filesystem_impl_hfs removed
	* Libmobius: Class vfs::filesystem::filesystem_impl_iso removed
	* Libmobius: Class vfs::filesystem::filesystem_impl_ntfs removed
	* Libmobius: Class vfs::filesystem::filesystem_impl_vfat removed
	* Libmobius: Class filesystem_impl_base moved to mobius::vfs
	* Libmobius: Class filesystem_impl_null moved to mobius::vfs
	* Libmobius: Module tsk moved to mobius::vfs
	* Libmobius: Class segment_array moved to mobius::vfs
	* Libmobius: New module mobius::kff
	* Libmobius: New class mobius::kff::kff
	* Libmobius: New class mobius::kff::hashset
	* Libmobius: mobius::decoder::base64 ignores '\n' and '\r' chars
	* Libmobius: New class mobius::database::meta_table
	* Libmobius: Function uri::get_query accepts encoding
	* Libmobius: Function uri::get_fragment accepts encoding
	* Python API: Module mobius.vfs.filesystem.filesystem moved to mobius.vfs
	* Python API: New function mobius.vfs.get_imagefile_implementations
	* Python API: New function mobius.vfs.get_filesystem_implementations
	* Python API: Class imagefile moved to mobius.vfs
	* Python API: Function mobius.imagefile.get_implementations removed
	* Python API: Function new_imagefile_by_url moved to mobius.vfs
	* Python API: Function new_imagefile_by_path moved to mobius.vfs
	* Python API: Function new_imagefile_from_file moved to mobius.vfs
	* Python API: Module mobius.imagefile removed
	* Python API: New module mobius.kff
	* Python API: New class mobius.kff.kff
	* Python API: New class mobius.kff.hashset
	* Python API: Module p2p.bittorrent removed
	* Python API: Function new_datetime_from_unix_timestamp caps datetime to 9999-12-31 23:59:59
	* Python API: Function new_datetime_from_nt_timestamp caps datetime to 9999-12-31 23:59:59
	* Python API: Function uri.get_query accepts encoding
	* Python API: Function uri.get_fragment accepts encoding
	* Tools: filesystem_scan tool lists filesystems supported

Mobius Forensic Toolkit 1.31
	* Python API: New class mobius::py::pymodule
	* Python API: Modules using mobius::py::pymodule
	* Python API: Code migrated to Python 3
	* Pymobius: Code migrated to Python 3
	* All extensions have been migrated to Python 3
	* Python API: mobius::py::GIL::operator () acquires GIL back
	* Libmobius: New function mobius::encoder::hexstring
	* Libmobius: Delete imagefile_impl_base copy/move constructors
	* Libmobius: Delete imagefile_impl_base copy/move operator=
	* Python API: New function mobius.encoder.hexstring
	* Python API: New function mobius::py::isinstance
	* Python API: New function mobius::py::from_pyobject
	* Python API: New function mobius::py::to_pyobject
	* Pymobius: Use mobius.encoder.hexstring instead of binascii.hexlify
	* Hive: Reload button implemented

Mobius Forensic Toolkit 1.30
	* configure.ac: .tar.bz2 distribution removed
	* attribute-viewer: Capitalize property names
	* data-viewer: Extension title changed
	* datasource-model: Convert set_attribute from Python2 str to unicode
	* evidence-cookies: Hexlify encrypted cookies
	* evidence-viewer: Better tooltips generation
	* evidence-encryption-keys: New extension
	* extension-manager: Handle 'app.starting' event to test new version
	* filesystem-viewer: Store data in item.attribute
	* gtk-ui: TableView column names capitalized by default
	* ice: Convert set_attribute from Python2 str to unicode
	* part-catalogue: Convert set_attribute from Python2 str to unicode
	* partition-viewer: Store data in item.attribute
	* app.skype: message_parser.py encoding error fixed
	* app.gecko: Retrieve cookie expiration_time
	* app.chromium: Do not hexlify encrypted cookie value
	* app.chromium: Retrieve cookie expiration_time
	* app.chromium: Automatically decrypt cookies (Chromium up to v79)
	* ant.registry: use item.attribute instead of json_serializer
	* ant.turing: Populate item.encryption_keys
	* ant.cookies: Better error handling
	* p2p.shareaza: Do not use pymobius.xml
	* pymobius.json_serializer: Module removed
	* Libmobius: item::attribute datatype changed to mobius::pod::data
	* Libmobius: Method item::set_metadata removed
	* Libmobius: New method item::new_evidence
	* Libmobius: New method item::remove_evidences
	* Libmobius: New method item::count_evidences
	* Libmobius: New method item::get_evidences
	* Libmobius: New method item::new_encryption_key
	* Libmobius: New method item::remove_encryption_keys
	* Libmobius: New method item::count_encryption_keys
	* Libmobius: New method item::get_encryption_keys
	* Libmobius: New class mobius::model::encryption_key
	* Python API: item.metadata attribute removed
	* Python API: item.attribute datatype changed to mobius.pod.data
	* Python API: New class mobius::py::pyobject
	* Python API: Class mobius.pod.list removed
	* Python API: Function pymobius_pod_data_from_pyobject accepts generic objects
	* Python API: Function pymobius_pod_map_from_pyobject accepts generic objects
	* Python API: mobius.pod.map.to_pyobject returns object when map entry '.object' exists
	* Python API: dataholder.__dir__ method implemented
	* Python API: New class mobius.model.encryption_key
	* Python API: New method item.new_encryption_key
	* Python API: New method item.remove_encryption_keys
	* Python API: New method item.count_encryption_keys
	* Python API: New method item.get_encryption_keys
	* Py3k: Function PyString2_from_std_string removed
	* Py3k: part-catalogue calls items instead of iteritems
	* Py3k: part-model calls items instead of iteritems
	* Py3k: Remove dict-iter-methods

Mobius Forensic Toolkit 1.29
	* New C++ extension: imagefile-dossier
	* New C++ extension: imagefile-ewf
	* New C++ extension: imagefile-msr
	* New C++ extension: imagefile-raw
	* New C++ extension: imagefile-solo
	* New C++ extension: imagefile-talon
	* New C++ extension: imagefile-vhd
	* New C++ extension: imagefile-vhdx
	* Evidence-text-searches: Added URL www.alphacoders.com
	* Evidence-text-searches: Added URL www.twitch.tv
	* Evidence-text-searches: Added URL mangaplus.shueisha.co.jp
	* app.skype: Added support for Skype v14 call logs
	* ant.trash_can_entries: Added support for $Recycle.bin version 1
	* ant.trash_can_entries: Added support for Win2k-WinXP Recycler folder
	* ant.trash_can_entries: Set control files handled
	* p2p.emule: Set Downloads/eMule/Incoming folder as default incoming_dir
	* p2p.emule: Set Downloads/eMule/Temp folder as default temp_dir
	* datasource-model: Use imagefile.get_attributes
	* report-model: Generate unicode strings
	* Libmobius: mobius::ui::add_ui_implementation renamed to add_implementation
	* Libmobius: mobius::ui::remove_ui_implementation renamed to remove_implementation
	* Libmobius: mobius::ui::set_ui_implementation renamed to set_implementation
	* Libmobius: mobius::ui::get_ui_implementations renamed to get_implementations
	* Libmobius: mobius::ui::get_ui_implementation renamed to get_implementation
	* Libmobius: New module mobius::os::win::trashbin
	* Libmobius: New class mobius::os::win::trashbin::ifile
	* Libmobius: New class mobius::os::win::trashbin::info2_file
	* Libmobius: New class mobius::os::win::trashbin::info2_entry
	* Libmobius: Class mobius::imagefile::imagefile_msr removed
	* Libmobius: Class mobius::imagefile::imagefile_vhdx removed
	* Libmobius: Class mobius::imagefile::imagefile_vhd removed
	* Libmobius: Class mobius::imagefile::imagefile_dossier removed
	* Libmobius: Class mobius::imagefile::imagefile_solo removed
	* Libmobius: Class mobius::imagefile::imagefile_talon removed
	* Libmobius: Class mobius::imagefile::imagefile_ewf removed
	* Libmobius: Class mobius::imagefile::imagefile_raw removed
	* Libmobius: New virtual method imagefile_impl_base::get_attribute
	* Libmobius: New virtual method imagefile_impl_base::set_attribute
	* Libmobius: New virtual method imagefile_impl_base::get_attributes
	* Libmobius: New method imagefile::get_attribute
	* Libmobius: New method imagefile::set_attribute
	* Libmobius: New method imagefile::get_attributes
	* Libmobius: New function new_imagefile_from_file
	* Libmobius: New module extensions::imagefile
	* Libmobius: New function mobius::imagefile::add_implementation
	* Libmobius: New function mobius::imagefile::remove_implementation
	* Libmobius: New function mobius::imagefile::get_implementations
	* Libmobius: Function mobius::imagefile::get_imagefile_types removed
	* Libmobius: New method mobius::pod::data::to_string
	* Libmobius: New method mobius::pod::list::to_string
	* Libmobius: New method mobius::pod::map::to_string
	* Libmobius: Method imagefile::set_sector_size removed
	* Libmobius: Bug fixed when resetting values in mobius::pod::map
	* Python API: New function mobius.datetime.new_datetime_from_iso_string
	* Python API: New function mobius.ui.get_implementations
	* Python API: New function mobius.ui.set_implementation
	* Python API: New module mobius.os.win.trashbin
	* Python API: New class mobius.os.win.trashbin.ifile
	* Python API: New class mobius.os.win.trashbin.info2_file
	* Python API: New class mobius.os.win.trashbin.info2_entry
	* Python API: Class mobius.imagefile.imagefile_msr removed
	* Python API: Class mobius.imagefile.imagefile_vhdx removed
	* Python API: Class mobius.imagefile.imagefile_vhd removed
	* Python API: Class mobius.imagefile.imagefile_dossier removed
	* Python API: Class mobius.imagefile.imagefile_solo removed
	* Python API: Class mobius.imagefile.imagefile_talon removed
	* Python API: Class mobius.imagefile.imagefile_ewf removed
	* Python API: Class mobius.imagefile.imagefile_raw removed
	* Python API: Class mobius.imagefile.imagefile_split removed
	* Python API: New function imagefile.add_implementation
	* Python API: New function imagefile.remove_implementation
	* Python API: New function imagefile.get_implementations
	* Python API: Function mobius.imagefile.get_imagefile_types removed
	* Python API: New method imagefile.get_attribute implemented
	* Python API: New method imagefile.set_attribute implemented
	* Python API: New method imagefile.get_attributes implemented
	* Python API: mobius.imagefile tp_getattro implemented
	* Python API: mobius.imagefile tp_setattro implemented
	* Python API: New function pymobius.to_bytes
	* Python API: Setter for imagefile.sector_size removed
	* Py3k: mobius.crypt: remove PyString2
	* Py3k: mobius.turing: remove PyString2
	* Py3k: mobius.os.win: remove PyString2
	* Py3k: mobius.model.evidence_xx: remove PyString2
	* Py3k: mobius.partition: remove PyString2

Mobius Forensic Toolkit 1.28
	* New C++ extension: ui-gtk3
	* C++ extension ui-gtk2 removed
	* Extensions migrated from Gtk2 to Gtk3
	* datasource-model: Fill SSD attributes
	* evidence-calls: Check if datasource is available
	* evidence-chat-messages: Check if datasource is available
	* evidence-opened-files: Check if datasource is available
	* evidence-trash-can-entries: Check if datasource is available
	* gtk-ui: Set label selectable in container widget
	* gtk-ui-treeview: Extension removed
	* report-model: Generate write_latex function
	* report-model: Generate write_verbatim function
	* Py3k: category-manager warnings removed

Mobius Forensic Toolkit 1.27
	* attribute-viewer: Debug messages removed
	* evidence-password-hashes: Keyword testing handles sha1.utf-16 hashes
	* evidence-password-hashes: Set all hash passwords when found
	* evidence-password-hashes: Keyword testing class optimized
	* gtk-ui: XML export removed
	* gtk-ui: Debug messages removed
	* ice: Bug fixed handling object.attribute-modified signal
	* pymobius.xml: Debug messages removed
	* registry.search_assistant: Bug fixed when retrieving info
	* ant.trash_can_entries: Handle exceptions at lowest level
	* ant.opened_files: Handle common_path_suffix value
	* ant.text_autocomplete: Continue after invalid value
	* app.skype: Bug fixed decoding v14 messages
	* app.skype: Handle "AddMember" messages
	* app.skype: Handle "Notice" messages
	* app.skype: Handle "TopicUpdate" messages
	* app.skype: Handle "HistoryDisclosedUpdate" messages
	* app.skype: Handle "RichText/Media_CallRecording" messages
	* app.skype: Generate different messages for call started and call ended
	* Libmobius: New class mobius::decoder::tdf (Telegram data file)
	* Libmobius: Class mobius::decoder::mfc_decoder renamed to mfc
	* Libmobius: application class uses std::call_once
	* Libmobius: category_manager class uses std::call_once
	* Libmobius: New class mobius::crypt::cipher_block_model_impl_ige
	* Libmobius: Application::data_folder using MOBIUS_DATA_DIR
	* Libmobius: Fix error reading EWF imagefiles with > 99 segments
	* Libmobius: Added support for EWF imagefiles with up to 14971 segments
	* Python API: New class mobius.decoder.tdf
	* Python API: Class mobius.decoder.mfc_decoder renamed to mfc
	* Python API: mobius.model.item tp_getattro implemented
	* Python API: mobius.model.item tp_setattro implemented
	* Python API: Using item.attribute instead of get_attribute
	* Python API: New function mobius::py::reset_error
	* Python API: New function mobius::py::set_attribute_error
	* Py3k: evidence-password-hashes warnings removed

Mobius Forensic Toolkit 1.26
	* Libmobius: imagefile_ewf header2 decoding error fixed. Reported by Frederico Marchezini
	* Libmobius: Charset functions use one descriptor per conversion
	* Libmobius: Class mobius::ref_counter removed
	* Libmobius: mobius::application data loader improved
	* Libmobius: New class mobius::ui::message_dialog_impl_base
	* Libmobius: New class mobius::ui::message_dialog
	* Libmobius: Template class mobius::ui::ui_registration removed
	* Python API: New function set_invalid_type_error
	* Python API: New function set_value_error
	* Python API: New function set_io_error
	* Python API: New function set_runtime_error
	* Python API: Use set_xx_error instead of PyErr_SetString
	* Python API: Function pymobius.LOG removed
	* Python API: Function pymobius.deprecated.copy_object removed
	* Python API: Class pymobius.case.item moved to deprecated.item_wrapper
	* Python API: Module pymobius.case removed
	* Python API: Release GIL when calling mobius::ui::start
	* Python API: Release GIL when calling mobius::ui::stop
	* Python API: New class mobius.ui.message_dialog
	* ui_gtk2: New class message_dialog_impl
	* category-manager: Use mobius.ui.message_dialog
	* cellphone-agent: Use mobius.ui.message_dialog
	* datasource-model: Set thumbdrive attributes. Reported by Frederico Marchezini
	* extension-builder: Use mobius.ui.message_dialog
	* extension-manager: Use mobius.ui.message_dialog
	* file-explorer: Use mobius.ui.message_dialog
	* floppy-imager: Log both FDGETPRM and FDGETDRVPRM
	* gigatribe-agent: Use mobius.ui.message_dialog
	* ice: Use mobius.ui.message_dialog
	* iped-frontend: Use mobius.ui.message_dialog
	* part-catalogue: Use mobius.ui.message_dialog
	* report-wizard: Use mobius.ui.message_dialog
	* skype-agent: Use mobius.ui.message_dialog
	* ant.registry: Persist data as JSON
	* New function pymobius.registry.mrulist
	* New function pymobius.registry.mrulistex
	* New module pymobius.registry.wordwheelquery
	* New module pymobius.registry.search_assistant
	* Hive-report: New report "Word Wheel Query terms"
	* Hive-report: Use pymobius.registry.search_assistant
	* ant.text_autocomplete: Retrieve data from WordWheelQuery registry keys
	* ant.text_autocomplete: Retrieve data from Search Assistant registry keys
	* Py3k: cellphone-agent warnings removed
	* Py3k: engelbart warnings removed
	* Py3k: evidence-cookies warnings removed
	* Py3k: evidence-viewer warnings removed
	* Py3k: extension-builder warnings removed
	* Py3k: extension-manager warnings removed
	* Py3k: file-explorer warnings removed
	* Py3k: gigatribe-agent print-statement warnings removed
	* Py3k: gtk-ui dict-iter-method warnings removed
	* Py3k: gtk-ui xrange-builtin removed
	* Py3k: hive warnings removed
	* Py3k: hive-report warnings removed
	* Py3k: hive-gigatribe-report warnings removed
	* Py3k: ice warnings removed
	* Py3k: iped-frontend print-statement warnings removed
	* Py3k: iped-frontend unicode-builtin warnings removed
	* Py3k: lshw warnings removed
	* Py3k: part-model warnings removed
	* Py3k: report-model warnings removed
	* Py3k: report-wizard warnings removed
	* Py3k: skype-agent warnings removed
	* Py3k: skype-agent-l33l warnings removed
	* Py3k: PyMobius dict-items-not-iterating warnings removed
	* Py3k: PyMobius old-division warnings removed
	* Py3k: PyMobius old-raise-syntax warnings removed
	* Py3k: PyMobius print-statement warnings removed
	* Py3k: PyMobius nonzero-method warnings removed

Mobius Forensic Toolkit 1.25
	* ant.opened_files: New ant
	* ant.opened_files: Retrieve info from Windows/Recent .lnk files
	* Evidence-opened-files: Use ant.opened_files
	* Libmobius: New class mobius::core::extension
	* Libmobius: New class mobius::core::extension_set
	* Libmobius: Added support for C++ extension
	* Libmobius: New class mobius::model::opened_file
	* Libmobius: New module mobius::ui
	* Libmobius: New class mobius::ui::ui_impl_base
	* Libmobius: New class mobius::ui::ui
	* Libmobius: New method mobius::core::application::start
	* Libmobius: New method mobius::core::application::stop
	* Libmobius: imagefile_ewf _load_chunk_offset_table bug fixed. Reported by Clemente Paixão
	* Libmobius: New template method mobius::ui::add_ui_implementation
	* Libmobius: New template method mobius::ui::remove_ui_implementation
	* Python API: New class mobius.model.opened_file
	* Python API: New function mobis::py::pylong_from_std_int8_t
	* Python API: New function mobis::py::pylong_as_std_int8_t
	* Python API: Use mobius::py::pylong_asxxx instead of PyLong_Asxxx
	* Python API: Use mobius::py::pylong_check instead of PyInt_Check
	* Python API: Use mobius::py::pylong_check instead of PyLong_Check
	* Python API: Use mobius::py::pylong_fromxxx instead of PyLong_Fromxxx
	* Python API: New class mobius.core.extension
	* Python API: New module mobius.ui
	* Python API: New class mobius.ui.ui
	* Python API: New method mobius.core.application.start
	* Python API: New method mobius.core.application.stop
	* Application.py: Install C++ extensions
	* New C++ extension: UI/gtk2
	* Service ui.start removed
	* Service ui.stop removed
	* Service ui.flush removed

Mobius Forensic Toolkit 1.24
	* New evidence type: Trash can entry
	* Iped-frontend: "Número Criminalistica" field data fixed. By Clemente Paixão
	* Iped-frontend: Remove hashes.txt when regenerating report. By Clemente Paixão
	* Iped-frontend: Report generation handles multiple case items. By Clemente Paixão
	* Iped-frontend: Option -profile implemented. Reported by Clemente Paixão
	* Iped-frontend: Call pf.midia.principal report template instead of pf.midia.iped
	* Iped-frontend: Using DataTables v1.11.3
	* Iped-frontend: Using FixedHeader
	* Iped-frontend: Using ColReorder
	* Iped-frontend: Set laudo.reports attribute
	* Hive-report: Last mounted devices report handles DMIO devices
	* Evidence-text-searches: Added URL www.buscape.com.br
	* Evidence-text-searches: Added URL www.carrefour.com.br
	* Evidence-text-searches: Added URL www.lojafocus.com.br
	* Ice: Removed option "import from .case file"
	* File-explorer: File Finder new panel
	* File-explorer: Created and Last Accessed columns added to Compact View
	* File-explorer: File Properties new panel
	* File-explorer: Hex Viewer new panel
	* File-explorer: Content Properties new panel
	* New extension Gtk-ui-hexview
	* Data-viewer: Using gtk-ui-hexview widget
	* Gtk-ui: Added support for icon columns in TableView widget
	* app.chromium: Added support for Microsoft Edge (Chromium based)
	* app.chromium: Added support for CCleaner Browser
	* app.edge: New module
	* app.internet_explorer: Set cookie.last_access_time
	* p2p.emule: Handle nameless remote_files
	* ant.cookies: Added support for Microsoft Edge
	* ant.trash_can_entries: New ant
	* Libmobius: Bug fixed in EWF decoder_header_section function
	* Libmobius: Check iconv function call error on Iconv::conv
	* Libmobius: New function mobius::pod::serialize (writer, data)
	* Libmobius: New function mobius::pod::unserialize (reader)
	* Libmobius: Remove 'data' folder when removing item
	* Libmobius: New class mobius::io::sequential_reader_adaptor
	* Libmobius: New function mobius::decoder::btencode
	* Libmobius: New template function evidence::get_attribute <T>
	* Libmobius: New class mobius::decoder::lnk
	* Libmobius: New function mobius::decoder::get_filetype
	* Libmobius: New class mobius::model::trash_can_entry
	* Python API: New function PyMobius_IO_Writer_Check
	* Python API: New function PyMobius_IO_Writer_as_cpp
	* Python API: New function mobius.pod.serialize (writer, data)
	* Python API: New function mobius.pod.unserialize (reader)
	* Python API: New function pynone_check
	* Python API: New function get_arg_as_int
	* Python API: New function get_arg_as_uint8_t
	* Python API: New function get_arg_as_uint16_t
	* Python API: New function pylong_from_std_uint8_t
	* Python API: New function pylong_from_std_uint16_t
	* Python API: New function pylong_as_std_uint8_t
	* Python API: New function pylong_as_std_uint16_t
	* Python API: New class mobius.io.sequential_reader_adaptor
	* Python API: New function mobius.decoder.btencode
	* Python API: credhist_entry.decrypt_with_password releases GIL
	* Python API: credhist_entry.decrypt_with_password_key releases GIL
	* Python API: credhist_entry.decrypt_with_password_hash releases GIL
	* Python API: blob.decrypt_with_password releases GIL
	* Python API: blob.decrypt_with_password_key releases GIL
	* Python API: blob.decrypt_with_password_hash releases GIL
	* Python API: partition.get_partition_table releases GIL
	* Python API: partition.get_partitions releases GIL
	* Python API: Use mobius::py::pynone
	* Python API: Use mobius::py::get_arg instead of PyArg_ParseTuple
	* Python API: Remove return NULL statements
	* Python API: New class mobius.decoder.lnk
	* Python API: New function mobius.decoder.get_filetype
	* Python API: New class mobius.model.trash_can_entry

Mobius Forensic Toolkit 1.23
	* New extension IPED Frontend
	* app.skype-v14: Error "cannot decode unicode" fixed. Reported by Frederico Marchezini.

Mobius Forensic Toolkit 1.22
	* Compatible with Sleuthkit-4.9.0
	* New evidence type: Call Log
	* New evidence type: Text Autocomplete
	* ant.calls: New ant
	* ant.text_autocomplete: New ant
	* Gtk-UI: New method AttributeListView.has_value
	* Skype-Agent: Panel 'Calls' removed
	* Skype-Agent: Panel 'SMS messages' removed
	* Evidence-password-hashes: Bug exporting .hashcat files fixed
	* Evidence-viewer: View description added
	* Spider extension removed
	* tools/dirfs: Using disk.get_filesystems ()
	* Libmobius: New module mobius::vfs
	* Libmobius: New module mobius::vfs::filesystem
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_base
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_null
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_exfat
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_ext2
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_hfs
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_iso
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_ntfs
	* Libmobius: New class mobius::vfs::filesystem::filesystem_impl_vfat
	* Libmobius: New method disk::get_filesystems
	* Libmobius: New method folder::get_size
	* Libmobius: New class mobius::core::log
	* Libmobius: New method file::set_tag
	* Libmobius: New method file::reset_tag
	* Libmobius: New method file::has_tag
	* Libmobius: New method file::get_tags
	* Libmobius: New method folder::set_tag
	* Libmobius: New method folder::reset_tag
	* Libmobius: New method folder::has_tag
	* Libmobius: New method folder::get_tags
	* Libmobius: New method file::has_metadata
	* Libmobius: New method file::get_metadata
	* Libmobius: New method file::get_metadata ()
	* Libmobius: New method file::set_metadata
	* Libmobius: New method file::remove_metadata
	* Libmobius: New method file::get_streams
	* Libmobius: New method folder::has_metadata
	* Libmobius: New method folder::get_metadata
	* Libmobius: New method folder::get_metadata ()
	* Libmobius: New method folder::set_metadata
	* Libmobius: New method folder::remove_metadata
	* Libmobius: New method folder::get_streams
	* Libmobius: New method folder::get_child_by_name
	* Libmobius: New method folder::get_child_by_path
	* Libmobius: New method folder::get_children_by_name
	* Libmobius: New class mobius::model::call
	* Libmobius: New class mobius::model::text_autocomplete
	* Libmobius: New class mobius::io::stream_impl_base
	* Libmobius: New class mobius::io::stream_impl_null
	* Libmobius: New class mobius::io::stream
	* Libmobius: New class mobius::vfs::filesystem::tsk::stream_impl
	* Libmobius: New class mobius::vfs::filesystem::tsk::reader_impl_file
	* Libmobius: New class mobius::vfs::filesystem::tsk::reader_impl_stream
	* Libmobius: Module mobius::filesystem removed
	* Libmobius: New class mobius::system::dynamic_lib
	* Libmobius: New function mobius::string::case_insensitive_match
	* Python API: New module mobius.vfs
	* Python API: New module mobius.vfs.filesystem
	* Python API: New class mobius.vfs.filesystem.filesystem
	* Python API: New method disk.get_filesystems
	* Python API: New method folder.get_size
	* Python API: New module mobius.core.event
	* Python API: Function mobius.core.log renamed to logf
	* Python API: New class mobius.core.log
	* Python API: New function mobius::py::get_line_number
	* Python API: New function mobius::py::get_filename
	* Python API: New function mobius::py::get_funcname
	* Python API: New method file.set_tag
	* Python API: New method file.reset_tag
	* Python API: New method file.has_tag
	* Python API: New method file.get_tags
	* Python API: New method file.has_metadata
	* Python API: New method file.get_metadata
	* Python API: New method file.set_metadata
	* Python API: New method file.remove_metadata
	* Python API: New method file.get_streams
	* Python API: New method folder.set_tag
	* Python API: New method folder.reset_tag
	* Python API: New method folder.has_tag
	* Python API: New method folder.get_tags
	* Python API: New method folder.has_metadata
	* Python API: New method folder.get_metadata
	* Python API: New method folder.set_metadata
	* Python API: New method folder.remove_metadata
	* Python API: New method folder.get_streams
	* Python API: New method folder.get_child_by_name
	* Python API: New method folder.get_child_by_path
	* Python API: New method folder.get_children_by_name
	* Python API: New function mobius.core.set_logfile_path
	* Python API: New function mobius.core.set_debug
	* Python API: New class mobius.model.call
	* Python API: New class mobius.model.text_autocomplete
	* Python API: Module pymobius.browser removed
	* Python API: New class mobius.io.stream
	* Python API: Module mobius.filesystem removed

Mobius Forensic Toolkit 1.21

	* New extension evidence-viewer
	* New extension evidence-bookmarked-urls
	* New extension evidence-chat-messages
	* New extension evidence-cookies
	* New extension evidence-text-searches
	* New extension evidence-opened-files
	* New extension evidence-password-hashes
	* New extension evidence-passwords
	* New extension evidence-received-files
	* New extension evidence-sent-files
	* New extension evidence-visited-urls
	* Extension chat-viewer removed
	* Extension search-viewer removed
	* Extension file-activity removed
	* ICE: Update window title when case.name is changed
	* report-model: Detects invalid report calls
	* app.chromium: Decodes Extension Cookies files
	* app.chromium: Decodes Preferences files
	* app.chromium: New method profile.get_bookmarks
	* app.skype: Handle chat messages with multiple recipients
	* app.skype: Better text segments representation
	* app.skype: Handle <flag> tag
	* app.gecko: New method profile.get_bookmarks
	* ant.chat_messages: New ant
	* ant.bookmarked_urls: New ant
	* ant.visited_urls: New ant
	* Libmobius: New method reader::get_block_size
	* Libmobius: New class imagefile::vhd::reader_impl_fixed
	* Libmobius: New class imagefile::vhd::reader_impl_dynamic
	* Libmobius: New class imagefile::vhdx::reader_impl
	* Libmobius: Class imagefile::vhd::sector_reader_impl_fixed removed
	* Libmobius: Class imagefile::vhd::sector_reader_impl_dynamic removed
	* Libmobius: Class imagefile::vhdx::sector_reader_impl removed
	* Libmobius: Method imagefile::new_sector_reader removed
	* Libmobius: Class sector_reader_impl_base removed
	* Libmobius: Class sector_reader_impl_null removed
	* Libmobius: Class sector_reader removed
	* Libmobius: New class mobius::model::evidence
	* Libmobius: New class mobius::model::bookmarked_url
	* Libmobius: New method item::new_bookmarked_url
	* Libmobius: New method item::get_bookmarked_urls
	* Libmobius: New method item::remove_bookmarked_urls
	* Libmobius: New method item::count_bookmarked_urls
	* Libmobius: New class mobius::filesystem::tsk::fs_file
	* Libmobius: New class mobius::filesystem::tsk::file_impl
	* Libmobius: New class mobius::filesystem::tsk::folder_impl
	* Libmobius: New module mobius::decoder::sgml
	* Libmobius: New class mobius::decoder::sgml::tokenizer
	* Libmobius: New class mobius::decoder::sgml::parser
	* Libmobius: New method item::count_cookies
	* Libmobius: New method item::count_passwords
	* Libmobius: New method item::count_password_hashes
	* Libmobius: New method item::count_text_searches
	* Libmobius: New method item::count_visited_urls
	* Libmobius: New class mobius::model::chat_message
	* Libmobius: New method item::new_chat_message
	* Libmobius: New method item::get_chat_messages
	* Libmobius: New method item::remove_chat_messages
	* Libmobius: New method item::count_chat_messages
	* Libmobius: New function filesystem::get_root_folder
	* Python API: New function mobius::py::get_arg_as_int32_t
	* Python API: New function mobius::py::get_arg_as_int64_t
	* Python API: New method reader.get_block_size
	* Python API: Method imagefile.new_sector_reader removed
	* Python API: New template function check_setter_value
	* Python API: New class mobius.model.bookmarked_url
	* Python API: New method item.new_bookmarked_url
	* Python API: New method item.get_bookmarked_urls
	* Python API: New method item.remove_bookmarked_urls
	* Python API: New module mobius.decoder.sgml
	* Python API: New class mobius.decoder.sgml.tokenizer
	* Python API: New class mobius.decoder.sgml.parser
	* Python API: Catch exceptions in os.win.dpapi.master_key_file constructor (reported by Frederico Marchezini)
	* Python API: New method item.count_cookies
	* Python API: New method item.count_passwords
	* Python API: New method item.count_password_hashes
	* Python API: New method item.count_text_searches
	* Python API: New method item.count_visited_urls
	* Python API: New class mobius.model.chat_message
	* Python API: New method item.new_chat_message
	* Python API: New method item.get_chat_messages
	* Python API: New method item.remove_chat_messages
	* Python API: New method item.count_chat_messages
	* Python API: New function filesystem.get_root_folder

Mobius Forensic Toolkit 1.20

	* Search-Viewer: New extension
	* Spider: Added support for AppWiki
	* Spider: Added support for CKaach Browser
	* Spider: Added support for Kodi Browser Launcher
	* Spider: Added support for Kodi Chrome Launcher
	* Spider: Added support for Bradesco Net Express
	* Libmobius: New module mobius::imagefile::raw
	* Libmobius: New class mobius::imagefile::raw::sector_reader_impl
	* Libmobius: New method mobius::imagefile::raw::new_sector_reader
	* Libmobius: New class mobius::decoder::sourcecode
	* Libmobius: New class mobius::decoder::qdatastream
	* Libmobius: New function data_decoder::get_int16_be
	* Libmobius: New function data_decoder::get_int32_be
	* Libmobius: New function data_decoder::get_int64_le
	* Libmobius: New function data_decoder::get_int64_be
	* Libmobius: New template class mobius::ordered_map <K,V>
	* Libmobius: New module mobius::pod
	* Libmobius: New class mobius::pod::data_impl_base
	* Libmobius: New class mobius::pod::data_impl_null
	* Libmobius: New class mobius::pod::data_impl_bool
	* Libmobius: New class mobius::pod::data_impl_integer
	* Libmobius: New class mobius::pod::data_impl_real
	* Libmobius: New class mobius::pod::data_impl_datetime
	* Libmobius: New class mobius::pod::data_impl_string
	* Libmobius: New class mobius::pod::data_impl_bytearray
	* Libmobius: New class mobius::pod::data_impl_list
	* Libmobius: New class mobius::pod::data
	* Libmobius: New class mobius::pod::list
	* Libmobius: New class mobius::pod::map
	* Libmobius: New function mobius::encoder::base16
	* Libmobius: New function mobius::encoder::base32
	* Libmobius: New function mobius::encoder::base32hex
	* Libmobius: New function mobius::encoder::base64
	* Libmobius: New function mobius::encoder::base64url
	* Libmobius: New function mobius::decoder::base16
	* Libmobius: New function mobius::decoder::base32
	* Libmobius: New function mobius::decoder::base32hex
	* Libmobius: New function mobius::decoder::base64
	* Libmobius: New function mobius::decoder::base64url
	* Libmobius: New function mobius::bytearray::find
	* Libmobius: New function mobius::bytearray::rfind
	* Libmobius: New class mobius::io::writer_impl_bytearray
	* Libmobius: New function mobius::io::new_bytearray_writer
	* Libmobius: New class mobius::model::text_search
	* Libmobius: New method database::statement::bind (int, pod::data)
	* Libmobius: New method database::statement::get_column_pod
	* Libmobius: New method item::set_metadata
	* Libmobius: New method item::get_metadata
	* Libmobius: New method item::new_text_search
	* Libmobius: New method item::get_text_searches
	* Libmobius: New method item::remove_text_searches
	* ant.text_search: New ant
	* Python API: New function mobius::py::pystring_from_char
	* Python API: New function mobius::py::pylong_from_std_int16_t
	* Python API: New function mobius::py::pylong_from_std_int32_t
	* Python API: New function mobius::py::pylong_from_std_int64_t
	* Python API: New function mobius::py::pylong_as_std_int16_t
	* Python API: New function mobius::py::pylong_as_std_int32_t
	* Python API: New function mobius::py::pylong_as_std_int64_t
	* Python API: New function mobius::py::get_arg_as_cpp
	* Python API: New function mobius::py::pyfloat_check
	* Python API: New function mobius::py::pyfloat_as_cpp
	* Python API: New function mobius::py::pyfloat_from_cpp
	* Python API: New class mobius.decoder.sourcecode
	* Python API: New class mobius.decoder.qdatastream
	* Python API: PyMobius_IO_Reader_as_cpp accepts either reader or bytes
	* Python API: mobius::py::GIL moved to pygil.h
	* Python API: New module mobius.pod
	* Python API: New class mobius.pod.data
	* Python API: New class mobius.pod.list
	* Python API: New class mobius.pod.map
	* Python API: New function mobius.decoder.base16
	* Python API: New function mobius.decoder.base32
	* Python API: New function mobius.decoder.base32hex
	* Python API: New function mobius.decoder.base64
	* Python API: New function mobius.decoder.base64url
	* Python API: New module mobius.encoder
	* Python API: New function mobius.encoder.base16
	* Python API: New function mobius.encoder.base32
	* Python API: New function mobius.encoder.base32hex
	* Python API: New function mobius.encoder.base64
	* Python API: New function mobius.encoder.base64url
	* Python API: New class mobius.model.text_search
	* Python API: New method item.set_metadata
	* Python API: New method item.get_metadata
	* Python API: New method item.new_text_search
	* Python API: New method item.get_text_searches
	* Python API: New method item.remove_text_searches

Mobius Forensic Toolkit 1.19

	* Libmobius: Added native support for VHDX image files
	* Spider: Added support for CryptoTab Browser
	* Spider: Added support for NavegadorPJe
	* Spider: Added support for Firefox Portable
	* Spider: Added support for Firefox folder from Avast Browser Cleanup
	* Spider: Added support for Chrome folder from Avast Browser Cleanup
	* File Activity: Added support for Chromium based browsers
	* ant.turing: Test keywords from CUSTOM.DIC files
	* app.gecko: Handle Gecko based browsers
	* p2p: Better error handling
	* Libmobius: New method bytearray::startswith
	* Libmobius: New method bytearray::endswith
	* Libmobius: New method bytearray::compare
	* Libmobius: New constructor imagefile (file)
	* Libmobius: Function new_imagefile_from_url renamed to
	* Libmobius: New function new_imagefile_by_path
	* Libmobius: New class mobius::imagefile::segment_array
	* Libmobius: New method file::get_extension
	* Libmobius: New method folder::get_extension
	* Libmobius: New method folder::reload
	* Libmobius: New method folder::copy
	* Libmobius: New method folder::move
	* Libmobius: Method file::get_url removed
	* Libmobius: New module mobius::io::smb
	* Libmobius: New class mobius::io::smb::file_impl
	* Libmobius: New class mobius::io::smb::reader_impl
	* Libmobius: New class mobius::io::smb::writer_impl
	* Libmobius: Added support for SMB in mobius::io::new_file_by_url 
	* Libmobius: New method mobius::io::uri::get_sibling_by_name
	* Libmobius: New method mobius::io::uri::get_sibling_by_extension
	* Libmobius: New method mobius::io::uri::get_child_by_name
	* Libmobius: New module mobius::imagefile::vhdx
	* Libmobius: New class mobius::imagefile::vhdx::imagefile_impl
	* Libmobius: New class mobius::imagefile::vhdx::sector_reader_impl
	* Libmobius: New class mobius::imagefile::imagefile_vhdx
	* Libmobius: reader_impl_xxx::seek function behaviour standardized
	* Python API: Using mobius::py::thread instead of PyEval_SaveThread
	* Python API: Attribute file.url removed
	* Python API: Attribute imagefile.url removed
	* Python API: New method file.get_extension
	* Python API: New method folder.get_extension
	* Python API: New method folder.reload
	* Python API: New method folder.copy
	* Python API: New method folder.move
	* Python API: New method mobius.io.uri.get_sibling_by_name
	* Python API: New method mobius.io.uri.get_sibling_by_extension
	* Python API: New method mobius.io.uri.get_child_by_name
	* Python API: New class mobius.imagefile.imagefile_vhdx
	* Python API: New function mobius.imagefile.new_imagefile_from_file

Mobius Forensic Toolkit 1.18

	* File-Explorer: New extension
	* Libmobius: New function mobius::io::new_file_by_path
	* Libmobius: New function mobius::io::new_file_by_url
	* Libmobius: New function mobius::io::new_folder_by_path
	* Libmobius: New function mobius::io::new_folder_by_url
	* Libmobius: New class mobius::io::entry
	* Libmobius: mobius::io::file (url) constructor removed
	* Libmobius: mobius::io::folder (url) constructor removed
	* Libmobius: Class mobius::io::resource removed
	* Libmobius: Class mobius::io::resource_impl_base removed
	* Libmobius: Class mobius::io::resource_impl_null removed
	* Libmobius: Class mobius::io::resource_impl_local removed
	* Libmobius: Method file::get_last_access_time renamed to get_access_time
	* Libmobius: Method file::get_last_modification_time renamed to get_modification_time
	* Libmobius: Method file::get_last_metadata_time renamed to get_metadata_time
	* Libmobius: Method folder::get_last_access_time renamed to get_access_time
	* Libmobius: Method folder::get_last_modification_time renamed to get_modification_time
	* Libmobius: Method folder::get_last_metadata_time renamed to get_metadata_time
	* Libmobius: New method file::get_name
	* Libmobius: New method file::get_short_name
	* Libmobius: New method file::get_inode
	* Libmobius: New method file::get_type
	* Libmobius: New method file::is_deleted
	* Libmobius: New method file::is_reallocated
	* Libmobius: New method file::is_hidden
	* Libmobius: New method file::get_creation_time
	* Libmobius: New method file::get_deletion_time
	* Libmobius: New method file::get_backup_time
	* Libmobius: New method file::get_parent
	* Libmobius: New method file::new_sibling_by_name
	* Libmobius: New method file::new_sibling_by_extension
	* Libmobius: New method file::reload
	* Libmobius: New method file::copy (file)
	* Libmobius: New method file::copy (folder)
	* Libmobius: New method file::move (file)
	* Libmobius: New method file::move (folder)
	* Libmobius: New method file::remove
	* Libmobius: New method file::rename
	* Libmobius: New method file::is_block_device
	* Libmobius: New method file::is_char_device
	* Libmobius: New method file::is_fifo
	* Libmobius: New method file::is_symlink
	* Libmobius: New method file::is_regular_file
	* Libmobius: New method file::is_socket
	* Libmobius: New module mobius::io::local
	* Libmobius: New method folder::get_name
	* Libmobius: New method folder::get_short_name
	* Libmobius: New method folder::get_inode
	* Libmobius: New method folder::is_deleted
	* Libmobius: New method folder::is_reallocated
	* Libmobius: New method folder::is_hidden
	* Libmobius: New method folder::get_creation_time
	* Libmobius: New method folder::get_deletion_time
	* Libmobius: New method folder::get_backup_time
	* Libmobius: New method folder::get_parent
	* Libmobius: New method folder::new_file
	* Libmobius: New method folder::new_folder
	* Libmobius: New method folder::rename
	* Libmobius: New method folder::clear
	* Libmobius: New method folder::remove
	* Libmobius: Class file_impl_local moved to mobius::io::local
	* Libmobius: Class folder_impl_local moved to mobius::io::local
	* Libmobius: Class reader_impl_local moved to mobius::io::local
	* Libmobius: Class writer_impl_local moved to mobius::io::local
	* Libmobius: New function mobius::io::get_current_folder
	* Libmobius: New function mobius::io::to_win_path
	* Libmobius: New function mobius::io::join_segment
	* Libmobius: Method mobius::io::path::get_win_path removed
	* Libmobius: New class mobius::collection
	* Libmobius: New class mobius::collection_impl_base
	* Libmobius: New method path::get_parent
	* Libmobius: New method path::get_sibling_by_name
	* Libmobius: New method path::get_sibling_by_extension
	* Libmobius: New method path::get_child_by_name
	* Libmobius: New method path::get_child_by_path
	* Libmobius: Function mobius::io::join_segment removed
	* Libmobius: Function mobius::io::abs_join removed
	* Libmobius: Module dpapi moved to mobius::os::win
	* Libmobius: Module registry moved to mobius::os::win
	* Python API: New function mobius.io.new_file_by_path
	* Python API: New function mobius.io.new_file_by_url
	* Python API: New function mobius.io.new_folder_by_path
	* Python API: New function mobius.io.new_folder_by_url
	* Python API: mobius.io.file (url) constructor removed
	* Python API: mobius.io.folder (url) constructor removed
	* Python API: Class mobius.io.resource removed
	* Python API: New attribute file.name
	* Python API: New attribute file.short_name
	* Python API: New attribute file.inode
	* Python API: New attribute file.creation_time
	* Python API: New attribute file.deletion_time
	* Python API: New attribute file.backup_time
	* Python API: New method file.is_deleted
	* Python API: New method file.is_reallocated
	* Python API: New method file.is_hidden
	* Python API: New method file.get_parent
	* Python API: New method file.new_sibling_by_name
	* Python API: New method file.new_sibling_by_extension
	* Python API: New method file.reload
	* Python API: New method file.copy (file/folder)
	* Python API: New method file.move (file/folder)
	* Python API: New method file.remove
	* Python API: New method file.rename
	* Python API: New method file.is_block_device
	* Python API: New method file.is_char_device
	* Python API: New method file.is_fifo
	* Python API: New method file.is_symlink
	* Python API: New method file.is_regular_file
	* Python API: New method file.is_socket
	* Python API: New attribute folder.name
	* Python API: New attribute folder.short_name
	* Python API: New attribute folder.inode
	* Python API: New attribute folder.creation_time
	* Python API: New attribute folder.deletion_time
	* Python API: New attribute folder.backup_time
	* Python API: New method folder.is_deleted
	* Python API: New method folder.is_reallocated
	* Python API: New method folder.is_hidden
	* Python API: New method folder.get_parent
	* Python API: New method folder.new_file
	* Python API: New method folder.new_folder
	* Python API: New method folder.rename
	* Python API: Attribute file.last_access_time renamed to access_time
	* Python API: Attribute file.last_modification_time renamed to modification_time
	* Python API: Attribute file.last_metadata_time renamed to metadata_time
	* Python API: Attribute folder.last_access_time renamed to access_time
	* Python API: Attribute folder.last_modification_time renamed to modification_time
	* Python API: Attribute folder.last_metadata_time renamed to metadata_time
	* Python API: New function mobius.io.get_current_folder
	* Python API: New function mobius.io.to_win_path
	* Python API: New function mobius.io.join_segment
	* Python API: Module pymobius.util removed
	* Python API: Method path.get_win_path removed
	* Python API: New function mobius::py::pylong_from_std_uint64_t
	* Python API: New function mobius::py::pylong_as_std_uint64_t
	* Python API: New method path.get_parent
	* Python API: New method path.get_sibling_by_name
	* Python API: New method path.get_sibling_by_extension
	* Python API: New method path.get_child_by_name
	* Python API: New method path.get_child_by_path
	* Python API: Function mobius.io.join_segment removed
	* Python API: Function mobius.io.abs_join removed
	* Python API: Module dpapi moved to mobius.os.win
	* Python API: Module registry moved to mobius.os.win
	* category-manager: Using mobius.io.new_file_by_path
	* category-manager: Using mobius.io.new_file_by_url
	* category-manager: Deprecated code removed
	* gigatribe-agent: Using mobius.io.new_file_by_url
	* datasource-imagefile: Using mobius.io.new_file_by_url
	* gtk-ui: Using mobius.io.new_file_by_url
	* gtk-ui: New event TableView.on_row_activated
	* ice: Details View removed
	* ice: Icon View removed
	* lshw-agent: Using mobius.io.new_file_by_url
	* skype-agent: Using mobius.io.new_file_by_url
	* turing: Using mobius.io.new_file_by_url

Mobius Forensic Toolkit 1.17

	* Chat-Viewer: Added support for Skype App v14 (s4l-*.db files)
	* Turing: Automatically decrypts System Credentials
	* Turing: Event-driven password/hash test against all hashes/keys
	* Turing: Check if Chromium password is valid
	* Turing: Add passwords found with "test keywords option" to database
	* Turing: Export hashes/passwords found to Turing database
	* Spider: Try to convert cookie.value to text using default encodings
	* Libmobius: New module mobius::os
	* Libmobius: New module mobius::os::win
	* Libmobius: New class mobius::os::win::credential
	* Libmobius: New class mobius::io::path
	* Libmobius: New function to_string (uri)
	* Libmobius: Class uri moved to mobius::io
	* Libmobius: Using join (path, path) in application.cc.in
	* Libmobius: Using join (path, path) in case.cc
	* Libmobius: New constructor uri (scheme, username, ...)
	* Libmobius: New function mobius::io::new_uri_from_path
	* Libmobius: New method uri::get_parent
	* Libmobius: New method uri::get_child_by_path
	* Libmobius: Method uri::set_scheme removed
	* Libmobius: Method uri::set_authority removed
	* Libmobius: Method uri::set_username removed
	* Libmobius: Method uri::set_password removed
	* Libmobius: Method uri::set_host removed
	* Libmobius: Method uri::set_port removed
	* Libmobius: Method uri::set_query removed
	* Libmobius: Method uri::set_fragment removed
	* Libmobius: Function mobius::get_path_from_url removed
	* Libmobius: Function mobius::get_url_from_path removed
	* Libmobius: Function hash_lm moved to mobius::os::win
	* Libmobius: Function hash_nt moved to mobius::os::win
	* Libmobius: Function hash_msdcc1 moved to mobius::os::win
	* Libmobius: Function hash_msdcc2 moved to mobius::os::win
	* Libmobius: Function hash_ie_entropy moved to mobius::os::win
	* Libmobius: Function pbkdf2_hmac_ms moved to mobius::os::win
	* Libmobius: Cookie::value as bytearray instead of std::string
	* Libmobius: Case database schema version = 4
	* Python API: New module mobius.os
	* Python API: New module mobius.os.win
	* Python API: New class mobius.io.path
	* Python API: New class mobius.io.uri
	* Python API: New template function PyTuple_from_cpp_pair
	* Python API: Set default folders at pymobius.operating_system
	* Python API: Function hash_lm moved to mobius.os.win
	* Python API: Function hash_nt moved to mobius.os.win
	* Python API: Function hash_msdcc1 moved to mobius.os.win
	* Python API: Function hash_msdcc2 moved to mobius.os.win
	* Python API: Function hash_ie_entropy moved to mobius.os.win
	* Python API: New function mobius::py::pystring_check
	* Python API: New function mobius::py::pystring_from_std_string
	* Python API: New function mobius::py::pystring_as_std_string
	* Python API: New function mobius::py::pybytes_check
	* Python API: New function mobius::py::pybytes_from_bytearray
	* Python API: New function mobius::py::pybytes_as_bytearray
	* Python API: New function mobius::py::pydatetime_check
	* Python API: New function mobius::py::pydatetime_from_datetime
	* Python API: New function mobius::py::pydatetime_as_datetime
	* Python API: New function mobius::py::pybool_check
	* Python API: New function mobius::py::pybool_from_bool
	* Python API: New function mobius::py::pybool_as_bool
	* Python API: New function mobius::py::get_arg_size
	* Python API: New function mobius::py::get_arg
	* Python API: New function mobius::py::get_arg_as_string
	* Python API: New function mobius::py::get_arg_as_bytearray
	* Python API: New function mobius::py::get_arg_as_datetime
	* Python API: New function mobius::py::get_arg_as_bool
	* Python API: Cookie.value as bytes instead of string

Mobius Forensic Toolkit 1.16

	* Turing: Retrieves old password hashes from CREDHIST files
	* Turing: Retrieves passwords from Chromium based browsers (Chrome,...)
	* Turing: Retrieves passwords from Windows Credentials
	* Turing: Retrieves passwords from IE Intelliforms
	* Spider: Added support for 7 Star
	* Spider: Added support for AliExpress Browser
	* Spider: Added support for Amigo
	* Spider: Added support for Avast Browser
	* Spider: Added support for BoBrowser
	* Spider: Added support for Brave
	* Spider: Added support for CentBrowser
	* Spider: Added support for Chedot
	* Spider: Added support for Chrome Canary
	* Spider: Added support for Chromium
	* Spider: Added support for Coccoc
	* Spider: Added support for Comodo Dragon
	* Spider: Added support for Elements Browser
	* Spider: Added support for Epic Privacy Browser
	* Spider: Added support for Kometa
	* Spider: Added support for Orbitum
	* Spider: Added support for PlutoTV
	* Spider: Added support for Spotify Browser
	* Spider: Added support for Sputnik
	* Spider: Added support for Torch
	* Spider: Added support for Uran
	* Spider: Added support for Vivaldi
	* Report-model: Fix backslash escape for LaTeX
	* app.chrome and app.opera unified under app.chromium
	* app.chromium: Handles Web Data.version = 60
	* Libmobius: Upgraded to C++14
	* Libmobius: New class mobius::crypt::cipher_rc2
	* Libmobius: Using std::make_unique on unique_ptr
	* Libmobius: imagefile_impl_talon using C++ <regex>
	* Libmobius: imagefile_impl_dossier using C++ <regex>
	* Libmobius: imagefile_impl_solo using C++ <regex>
	* Libmobius: uri using C++ <regex>
	* Libmobius: Class mobius::regex_impl removed
	* Libmobius: New method credhist_entry::get_cipher_text
	* Libmobius: New method credhist_entry::is_decrypted
	* Libmobius: New method master_key::decrypt_with_password
	* Libmobius: New function turing::hash_ie_entropy
	* Python API: New method credhist_entry.get_cipher_text
	* Python API: New method credhist_entry.is_decrypted
	* Python API: Added support for cipher RC2
	* Python API: Releasing GIL when calling C++ intensive tasks
	* Python API: New method master_key.decrypt_with_password
	* Python API: New template function PyList_from_cpp_container
	* Python API: New template function PyDict_from_cpp_container
	* Python API: Using PyLong_FromLong instead of PyInt_FromLong
	* Python API: Using PyString_from_std_string instead of
	PyString_FromString
	* Python API: New function turing.hash_ie_entropy
	* Python API: Better error handling for pymobius.p2p

Mobius Forensic Toolkit 1.15

	* ant.turing: Automatically decrypts DPAPI system master keys
	* ant.turing: Automatically decrypts wifi passwords
	* Data-sourcerer: Fix bug in imagefile "save as" option
	* Data-sourcerer: Removes icon when extension stops (reported by Clemente
	Paixão)
	* Turing: Panels order changed (passwords, then hashes)
	* Turing: Shows Wifi passwords
	* Libmobius: New handle class mobius::crypt::cipher
	* Libmobius: New method data_decoder::get_sid
	* Libmobius: New function mobius::turing::pbkdf2_hmac_ms
	* Libmobius: New module mobius::turing::dpapi
	* Libmobius: New class mobius::turing::dpapi::master_key_file
	* Libmobius: New class mobius::turing::dpapi::master_key
	* Libmobius: New class mobius::turing::dpapi::blob
	* Libmobius: New class mobius::turing::dpapi::credhist_entry
	* Libmobius: New class mobius::turing::dpapi::credhist_file
	* Libmobius: New function mobius::crypt::pkcs5_unpad
	* Libmobius: Fix bug in cipher_3des in CBC mode
	* Libmobius: New function mobius::crypt::hash_digest
	* Python API: New method data_decoder.get_sid
	* Python API: New module mobius.turing.dpapi
	* Python API: New class mobius.turing.dpapi.master_key_file
	* Python API: New class mobius.turing.dpapi.master_key
	* Python API: New class mobius.turing.dpapi.blob
	* Python API: New function mobius.turing.dpapi.decode_blob
	* Python API: New class mobius.turing.cipher
	* Python API: mobius.turing.cipher replaces all cipher_xx classes
	* Python API: New constructor data_decoder (string)
	* Python API: New function mobius.crypt.hash_digest

Mobius Forensic Toolkit 1.14

	* app.chromium: New module
	* app.opera: New module
	* app.gecko: New module
	* app.chrome: Using app.chromium
	* app.firefox: Using app.gecko
	* app.chrome: Handle non-default profile folders
	* pymobius.browser: Added support for Opera
	* pymobius.browser: Added support for GeckoFX
	* evidence.cookies: Added support for Opera
	* evidence.cookies: Added support for GeckoFX
	* evidence.opened_files: Added support for Opera
	* evidence.opened_files: Added support for GeckoFX
	* evidence.received_files: Added support for Opera
	* evidence.received_files: Added support for GeckoFX
	* Turing: Reload option bug fixed
	* Libmobius: New class mobius::model::application
	* Libmobius: New class mobius::model::profile
	* Libmobius: New class mobius::model::cookie
	* Libmobius: New method item::new_profile
	* Libmobius: New method item::get_profiles
	* Libmobius: New method item::remove_profile_by_app_id
	* Libmobius: New method item::new_cookie
	* Libmobius: New method item::get_cookies
	* Libmobius: New method item::remove_cookies
	* Libmobius: New module mobius::imagefile::vhd
	* Libmobius: New class vhd::imagefile_impl
	* Libmobius: New class vhd::sector_reader_impl_dynamic
	* Libmobius: New class vhd::sector_reader_impl_fixed
	* Libmobius: Added support for .vhd image files
	* Libmobius: New class mobius::io::sector_reader
	* Libmobius: New class mobius::io::sector_reader_impl_base
	* Libmobius: New class mobius::io::sector_reader_impl_null
	* Libmobius: New class mobius::io::reader_impl_sector
	* Libmobius: New function mobius::io::new_reader_from_sector_reader
	* Libmobius: New method imagefile::new_sector_reader
	* Libmobius: get_filesystems function resilient against invalid FS's
	* Libmobius: New method statement::bind (bool)
	* Libmobius: New method statement::get_column_bool
	* Libmobius: New method statement::bind (string&&)
	* Libmobius: New method statement::bind (bytearray&&)
	* Python API: New class mobius.model.application
	* Python API: New class mobius.model.cookie
	* Python API: New method item.new_cookie
	* Python API: New method item.get_cookies
	* Python API: New method item.remove_cookies
	* Python API: New class mobius.io.sector_reader
	* Python API: New function mobius.io.new_reader_from_sector_reader
	* Python API: New class mobius.imagefile.imagefile_vhd
	* Python API: New method mobius.imagefile.new_sector_reader

Mobius Forensic Toolkit 1.13

	* Datasource-model: Fill item's attributes from imagefile metadata
	* Turing: Hash view exports .hashcat hash files
	* Turing: Hash view exports .john with RID, GID and GECOS fields
	* Turing: Added option "Reload data" to the Hash View
	* Turing: Added option "Test keywords from file" to the Hash View
	* Turing: Removed Turing window
	* Chat-viewer: New column "Application" added to view
	* Data-sourcerer: Calls item.remove_ants when datasource is set
	* Floppy-imager: Calls item.remove_ants when datasource is set
	* Gtk-ui: New method tableview.get_toolbar
	* Spider: URL history shows app name instead of app ID
	* app.skype: Fix '/tmp/skype' bug when retrieving database
	* Libmobius: New class mobius::model::ant
	* Libmobius: New class mobius::model::password
	* Libmobius: New class mobius::model::password_hash
	* Libmobius: New method database::table_has_column
	* Libmobius: New method statement::bind_datetime
	* Libmobius: New method statement::get_column_datetime
	* Libmobius: New method item::has_ant
	* Libmobius: New method item::set_ant
	* Libmobius: New method item::reset_ant
	* Libmobius: New method item::remove_ants
	* Libmobius: New method item::get_ants
	* Libmobius: New method item::new_password
	* Libmobius: New method item::get_passwords
	* Libmobius: New method item::remove_passwords
	* Libmobius: New method item::new_password_hash
	* Libmobius: New method item::get_passwords_hashes
	* Libmobius: New method item::remove_password_hashes
	* Libmobius: mobius::turing connect to database on demand
	* Libmobius: New method turing::set_hash
	* Libmobius: New method turing::get_hash_password
	* Libmobius: New method turing::remove_hashes
	* Libmobius: mobius::turing opens database on demand
	* Libmobius: Method turing::new_hash removed
	* Libmobius: Method turing::get_hash removed
	* Libmobius: Method turing::remove_hash removed
	* Libmobius: Method turing::test_keyword removed
	* Libmobius: Class mobius::turing::hash removed
	* Libmobius: New function mobius::turing::hash_lm
	* Libmobius: New function mobius::turing::hash_nt
	* Libmobius: New function mobius::turing::hash_msdcc1
	* Libmobius: New function mobius::turing::hash_msdcc2
	* Libmobius: Function mobius::crypt::generate_hash_lm removed
	* Libmobius: Function mobius::crypt::generate_hash_nt removed
	* Libmobius: Function mobius::crypt::generate_hash_msdcc1 removed
	* Libmobius: Function mobius::crypt::generate_hash_msdcc2 removed
	* Python API: New module pymobius.ant
	* Python API: New module pymobius.ant.turing
	* Python API: New class mobius.model.ant
	* Python API: New class mobius.model.password
	* Python API: New class mobius.model.password_hash
	* Python API: New method item.has_ant
	* Python API: New method item.set_ant
	* Python API: New method item.reset_ant
	* Python API: New method item.remove_ants
	* Python API: New method item.get_ants
	* Python API: New method item.new_password
	* Python API: New method item.get_passwords
	* Python API: New method item.remove_passwords
	* Python API: New method item.new_password_hash
	* Python API: New method item.get_password_hashes
	* Python API: New method item.remove_password_hashes
	* Python API: pymobius.vfs ignores cached VFS when it is unavailable
	* Python API: pymobius.deprecated ignores cached disk when it is unavailable
	* Python API: Module pymobius::turing removed
	* Python API: New method turing.set_hash
	* Python API: New method turing.get_hash_password
	* Python API: New method turing.remove_hashes
	* Python API: Method turing.new_hash removed
	* Python API: Method turing.get_hash removed
	* Python API: Method turing.remove_hash removed
	* Python API: Method turing.test_keyword removed
	* Python API: Class turing.hash removed
	* Python API: New function mobius.turing.hash_lm
	* Python API: New function mobius.turing.hash_nt
	* Python API: New function mobius.turing.hash_msdcc1
	* Python API: New function mobius.turing.hash_msdcc2
	* Python API: Function mobius.crypt.generate_hash_lm removed
	* Python API: Function mobius.crypt.generate_hash_nt removed
	* Python API: Function mobius.crypt.generate_hash_msdcc1 removed
	* Python API: Function mobius.crypt.generate_hash_msdcc2 removed

Mobius Forensic Toolkit 1.12

	* New extension Chat Viewer
	* Chat-viewer: Added support for Skype chat messages
	* Skype-agent: Chat view removed
	* app.skype: Added support for Skype v8 and newer ones
	* app.chrome: Handles Web Data.version = 52
	* Libmobius: New function mobius::crypt::pbkdf1
	* Libmobius: New function mobius::crypt::pbkdf2_hmac
	* Libmobius: New method mobius::crypt::hmac::reset
	* Libmobius: Copy constructor/assignment for mobius::crypt::hash
	* Libmobius: Fix gcc 8 warnings on unittest.h
	* Python API: New module mobius.evidence.chats
	* Python API: New function mobius.crypt.pbkdf1
	* Python API: New function mobius.crypt.pbkdf2_hmac

Mobius Forensic Toolkit 1.11

	* New extension File Activity
	* File Activity: List files opened with Internet Explorer
	* File Activity: List files received with Google Chrome
	* File Activity: List files received with Mozilla Firefox
	* File Activity: List files received with skype
	* File Activity: List files sent with skype
	* Spider: Added support for Internet Explorer
	* Spider: URL history ordered by timestamp
	* Spider: Cookies ordered by creation time
	* Spider: Added user field to cookies table
	* Spider: Reload cookies option
	* Spider: Use evidence.cookies
	* Spider: Application view removed
	* ICE: Check if case.sqlite exists when opening case folder
	* Skype-agent: File Transfer view removed
	* gtk-report-dialog: Catch os.getcwd exceptions
	* Libmobius: New method data_decoder::get_fat_datetime
	* Libmobius: New method data_decoder::get_c_string
	* Libmobius: New function datetime::new_datetime_from_fat_time
	* Libmobius: New function datetime::new_datetime_from_nt_timestamp 
	* Libmobius: New function datetime::new_datetime_from_unix_timestamp 
	* Libmobius: constexpr constructor for mobius::datetime::date
	* Libmobius: constexpr constructor for mobius::datetime::time
	* Libmobius: constexpr constructor for mobius::datetime::datetime
	* Libmobius: constexpr constructor for mobius::datetime::timedelta
	* Libmobius: New function mobius::datetime::date::to_string
	* Libmobius: New function mobius::datetime::time::to_string
	* Libmobius: mobius::forensics::registry moved to mobius::registry
	* Libmobius: Treat 0xfff as null at new_datetime_from_fat_datetime
	* app.internet_explorer: New module
	* app.chrome: Handles History.version = 28
	* app.chrome: Handles Web Data.version = 58
	* Python API: Chrome profile.get_form_history bug fixed
	* Python API: New module mobius.evidence
	* Python API: New module mobius.datetime
	* Python API: New function datetime.new_datetime_from_fat_time
	* Python API: New function datetime.new_datetime_from_nt_timestamp
	* Python API: New function datetime.new_datetime_from_unix_timestamp
	* Python API: New function pymobius.util.file_set_handled
	* Python API: New function pymobius.util.file_clear_handled
	* Python API: New function filesystem.new_filesystem_from_disk
	* Python API: Function pymobius.remove_kff_ignored removed
	* Python API: New method data_decoder.get_fat_datetime
	* Python API: New method data_decoder.get_c_string
	* Python API: Function pymobius.util.get_nt_datetime removed
	* Python API: Function pymobius.util.get_unix_datetime removed
	* Python API: Modules IDs prefixed with 'mobius.' string
	* Python API: mobius.forensics.registry moved to mobius.registry
	* Python API: pymobius.forensics moved to pymobius
	* Python API: PyString_from_bytearray renamed as PyBytes_from_bytearray
	* Python API: PyString_as_bytearray renamed as PyBytes_as_bytearray
	* p2p.shareaza.CQueryHit: URL not found bug fixed

Mobius Forensic Toolkit 1.10

	* New extension Spider (Browser Forensics)
	* Spider: Added support for Google Chrome
	* Spider: Added support for Mozilla Firefox
	* Gtk-ui: Add object itself when col.id = 'obj' on add_row_from_object
	* Skype-agent-l33l: Handle chatmsg without chatname tag
	* p2p.emule: Count = -1 for AC_SearchStrings searches
	* ICE: Using pymobius.ItemBrowser
	* Libmobius: New method data_decoder::get_hex_string_by_size
	* Python API: New function pymobius.util.get_nt_datetime
	* Python API: New function pymobius.util.get_unix_datetime
	* Python API: New module pymobius.app
	* Python API: New module pymobius.app.chrome
	* Python API: New module pymobius.app.emule
	* Python API: New module pymobius.app.firefox
	* Python API: New module pymobius.browser
	* Python API: New module pymobius.operating_system
	* Python API: New function pymobius.file_set_handled
	* Python API: New function pymobius.remove_kff_ignore
	* Python API: New function get_system_folder (registry, name)
	* Python API: New method data_decoder.get_hex_string_by_size
	* Python API: New class pymobius.ItemBrowser

Mobius Forensic Toolkit 1.9

	* Case model stored into .sqlite database
	* Case model classes in C++ with Python wrapper
	* Libmobius: mobius::model::item::id moved to attributes
	* Libmobius: mobius::model::item::name moved to attributes
	* Libmobius: New method case_manager::get_case_count
	* Libmobius: New method item::get_child_count
	* Libmobius: connection_pool::connection destruction fixed
	* Libmobius: New class database::connection
	* Libmobius: New method item::get_data_path
	* Libmobius: New method item::get_create_path
	* Libmobius: New method item::expand_masks
	* Python API: mobius.model.item.id moved to attributes
	* Python API: mobius.model.item.name moved to attributes
	* Python API: New method case_manager.get_case_count
	* Python API: New module pymobius.json_serializer
	* Python API: New function pymobius.json_serializer.serialize
	* Python API: New function pymobius.json_serializer.unserialize
	* Python API: New method item.get_data_path
	* Python API: New method item.get_create_path
	* Python API: New method item.expand_masks
	* Python API: Function pymobius.deprecated.get_data_path removed
	* Python API: Function pymobius.deprecated.create_data_path removed
	* Extension case-model removed
	* Extension object-model removed
	* Hive: Using item.get_data_path
	* Filesystem-viewer: Using item.get_data_path
	* Filesystem-viewer: Using item.create_data_path
	* Partition-viewer: Using item.get_data_path
	* Partition-viewer: Using item.create_data_path
	* Gtk-ui: Service ui.new-icon-from-data removed
	* Tools: New tool casetree
	* Tools: New tool hashfs
	* Python.examples: New example program list_categories.py
	* Python.examples: New example program casetree.py

Mobius Forensic Toolkit 1.8

	* p2p.emule: New P2P module
	* p2p.emuletorrent: New P2P module
	* p2p.ares: Gets program version correctly
	* p2p.ares: Handles bad encoded strings
	* p2p.ares: Decodes TorrentH.dat evidence file
	* p2p.ares: Decodes PHashIdx.dat evidence file
	* p2p.ares: Decodes PHashIdxTemp.dat evidence file
	* p2p.ares: Decodes TempPHash.dat evidence file
	* p2p.ares: Decodes PHash_*.dat evidence files
	* p2p.ares: Decodes PBTHash_*.dat evidence files
	* p2p.ares: Decodes ___ARESTRA___ downloading files
	* Hive-report: UserAccountReport bug fixed (reported by Clemente Paixão)
	* Hive-report: CachedCredentialsReport bug fixed
	* Libmobius: New function data_decoder.get_ipv4_be
	* Libmobius: New function data_decoder.get_ipv4_le
	* Libmobius: Module mobius::forensics::turing renamed to mobius::turing
	* Libmobius: hive_key more resilient against corrupted hive files
	* Python API: Module mobius.forensics.turing renamed to mobius.turing
	* Python API: Module pymobius.forensics.turing renamed to pymobius.turing
	* Extension emule-agent removed

Mobius Forensic Toolkit 1.7

	* Case-model: New function case.get_path
	* Case-model: New function case.create_path
	* Case-model: Service 'case.get-path' removed
	* Floppy-imager: Using case.create_path
	* Hive-report: Report "Ares Search" removed
	* ICE: Option "Properties" removed
	* ICE: New dialog for new case option
	* P2P-Viewer: Added support for Ares Galaxy
	* Part-catalogue: Import option bug fixed
	* Report-wizard: New graphical command "while"
	* Report-wizard: New graphical command "exec"
	* Libmobius: New class mobius::crypt::hash_ed2k
	* Libmobius: New module mobius::model
	* Libmobius: New class mobius::model::case_manager
	* Libmobius: New class mobius::model::Case
	* Libmobius: New class mobius::model::item
	* Libmobius: New function data_decoder::get_size
	* Libmobius: New function hash_base::get_hex_digest
	* Libmobius: New function hash::get_hex_digest
	* Libmobius: exception.cc using std::to_string
	* Libmobius: mobius::io::writer operator bool fixed
	* Libmobius: mobius::crypt::hash_xxx.get_digest preserves state
	* Python API: New module pymobius.p2p.ares
	* Python API: New class mobius.decoder.data_decoder
	* Python API: Function pymobius.deprecated.get_case_path removed
	* Python API: Function pymobius.deprecated.create_case_path removed
	* Python API: Catch exceptions on mobius.io.file methods
	* Python API: Catch exceptions on mobius.io.folder methods
	* Python API: Catch exceptions on mobius.io.writer methods
	* Python API: mobius.io.file inherits from mobius.io.resource
	* Python API: mobius.io.folder inherits from mobius.io.resource
	* Python API: pymobius.forensics.p2p moved to pymobius.p2p
	* Python API: New function data_decoder.get_size
	* Python API: New function mobius.crypt.hash.reset
	* Python API: New function mobius.crypt.hash.get_digest
	* Python API: New function mobius.crypt.hash.get_hex_digest
	* Python API: New function mobius.crypt.hmac.get_digest
	* Python API: New function mobius.crypt.hmac.get_hex_digest
	* Python API: Attribute mobius.crypt.hash.digest removed
	* Python API: Attribute mobius.crypt.hmac.digest removed
	* Python API: New module mobius.model
	* Python API: New class mobius.model.case_manager
	* Python API: New class mobius.model.case
	* Python API: New class mobius.model.item
	* Extension hive-shareaza-report removed

Mobius Forensic Toolkit 1.6

	* New extension P2P viewer
	* P2P-viewer: Added support for Shareaza activity data
	* Hive-Report: Four new fields added to Installed Programs report
	* Hive-Report: Using registry.installed_programs
	* Libmobius: New method mfc_decoder::get_unix_time
	* Libmobius: Handle EWF corrupted files (Reported by Clemente Paixão)
	* Libmobius: New function mobius::core::log
	* Python API: New module mobius.decoder
	* Python API: New class mobius.decoder.mfc_decoder
	* Python API: New module registry.installed_programs
	* Python API: New function pymobius.xml.get_attributes (xml)
	* Python API: New function mobius.core.log

Mobius Forensic Toolkit 1.5

	* Libmobius: New imagefile format: Samsung's Secret Zone .msr files
	* Libmobius: New class mobius::crypt::cipher_3des
	* Libmobius: New class mobius::crypt::cipher_blowfish
	* Libmobius: New class mobius::core::category_manager
	* Libmobius: New class mobius::core::category
	* Libmobius: New class mobius::core::attribute
	* Libmobius: connection_pool default constructor implemented
	* Libmobius: New method connection_pool.set_path
	* Libmobius: New method statement.bind (int, const bytearray&)
	* Libmobius: New method statement.get_column_bytearray
	* Libmobius: core::application using connection_pool
	* Libmobius: Method application.get_config_database removed
	* Libmobius: New method application.new_connection
	* Libmobius: New method application.new_transaction
	* Libmobius: New module: mobius::imagefile::split
	* Libmobius: New class mobius::imagefile::imagefile_dossier
	* Libmobius: New class mobius::imagefile::imagefile_ewf
	* Libmobius: New class mobius::imagefile::imagefile_msr
	* Libmobius: New class mobius::imagefile::imagefile_raw
	* Libmobius: New class mobius::imagefile::imagefile_solo
	* Libmobius: New class mobius::imagefile::imagefile_split
	* Libmobius: New class mobius::imagefile::imagefile_talon
	* Libmobius: New function mobius::imagefile::new_imagefile_from_url
	* Libmobius: New function mobius::imagefile::get_imagefile_types
	* Libmobius: Constructor mobius::imagefile::imagefile (url) removed
	* Libmobius: New method imagefile.get_metadata
	* Libmobius: Lazy evaluation for imagefile_impl_xxx constructors
	* Python API: New class mobius.crypt.cipher_3des
	* Python API: New class mobius.crypt.cipher_blowfish
	* Python API: New method application.new_transaction
	* Python API: New class mobius.core.category_manager
	* Python API: New class mobius.core.category
	* Python API: New class mobius.core.attribute
	* Python API: New method imagefile.get_metadata
	* Python API: New method imagefile.is_available
	* Python API: New class imagefile_dossier
	* Python API: New class imagefile_ewf
	* Python API: New class imagefile_msr
	* Python API: New class imagefile_raw
	* Python API: New class imagefile_solo
	* Python API: New class imagefile_talon
	* Python API: New function mobius.imagefile.new_imagefile_from_url
	* Python API: New function mobius.imagefile.get_imagefile_types
	* Python API: Module variable mobius.imagefile.typelist removed
	* Python API: Catch exceptions on mobius.filesystem.entry methods
	* Attribute-viewer: Use mobius.core.category_manager
	* Category-manager: Use mobius.core.category_manager
	* Ice: Use mobius.core.category_manager
	* Object-model: Use mobius.core.category_manager
	* Part-catalogue: Use mobius.core.category_manager
	* Datasource-imagefile: Handle .msr image files
	* Datasource-imagefile: Using mobius.imagefile.new_imagefile_from_url
	* Datasource-imagefile: Using mobius.imagefile.get_imagefile_types
	* Data-sourcerer: Using mobius.imagefile.new_imagefile_from_url
	* Data-sourcerer: Using mobius.imagefile.get_imagefile_types
	* Gtk-UI: Event widetableview.on_selection_changed created
	* Gtk-UI: New method widetableview.get_master_report_id
	* Gtk-UI: New method widetableview.get_master_report_name
	* Gtk-UI: New method widetableview.get_master_report_app
	* Gtk-UI: New method widetableview.set_master_report_id
	* Gtk-UI: New method widetableview.set_master_report_name
	* Gtk-UI: New method widetableview.set_master_report_app
	* Gtk-UI: New method widetableview.get_detail_report_id
	* Gtk-UI: New method widetableview.get_detail_report_name
	* Gtk-UI: New method widetableview.get_detail_report_app
	* Gtk-UI: New method widetableview.set_detail_report_id
	* Gtk-UI: New method widetableview.set_detail_report_name
	* Gtk-UI: New method widetableview.set_detail_report_app
	* Hive-report: Handle 'no hashes' on UserAccounts report
	* Hive-report: Set detail report metadata on UserAccounts report
	* Extension category-model removed
	* Tools: new tool imagefile_cat

Mobius Forensic Toolkit 1.4

	* New case view: Turing view
	* Hive-report: Missing import statement added
	* Hive-report: UserAccount report using widetableview widget
	* Hive-report: New fields for UserAccount report
	* Hive-report: Report UserLogons merged into UserAccount report
	* Gtk-ui: New function tableview.add_row_by_object
	* Gtk-ui: New function widetableview.add_row_by_object
	* Turing: Exports .json files
	* Turing: Imports .json files
	* Libmobius: New class mobius::crypt::hash_md4
	* Libmobius: New function mobius::crypt::generate_hash_nt
	* Libmobius: New function mobius::crypt::generate_hash_lm
	* Libmobius: New function mobius::crypt::generate_hash_msdcc1
	* Libmobius: New function mobius::crypt::generate_hash_msdcc2
	* Libmobius: Class mobius::crypt::hash supports MD4
	* Libmobius: cipher_aes constructor args changed to (key, mode, iv)
	* Libmobius: cipher_des constructor args changed to (key, mode, iv)
	* Libmobius: New function registry.get_syskey
	* Libmobius: connection_pool has dedicated db object for main thread
	* Libmobius: New module mobius::forensics::turing
	* Libmobius: New class mobius::forensics::turing::turing
	* Libmobius: New class mobius::forensics::turing::hash
	* Python API: New class mobius.crypt.hash
	* Python API: New module mobius.forensics.turing
	* Python API: New class mobius.forensics.turing.turing
	* Python API: New class mobius.forensics.turing.hash
	* Python API: mobius.crypt.hash_adler32 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_crc32 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_md5 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha1 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_224 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_256 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_384 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_512 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_512_224 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_sha2_512_256 removed (use crypt.hash)
	* Python API: mobius.crypt.hash_zip removed (use crypt.hash)
	* Python API: Call PyDECREF after appending an item to list
	* Python API: reader.read size arg defaults to remaining data size
	* Extension hive-turing removed
	* Extension turing-model removed

Mobius Forensic Toolkit 1.3

	* Libmobius: Automatically decrypts domain cached credentials' values
	* Libmobius: Added support for MSDCC2
	* Libmobius: Select LSA key by GUID for PolRevision > 0x10009
	* Libmobius: New class mobius::crypt::hmac
	* Libmobius: New handle class mobius::crypt::hash
	* Libmobius: 5x improvement for hash block functions
	* Libmobius: 2x extra improvement for hash_md5 on little endian machines
	* Libmobius: 3x improvement for hash_adler32
	* Libmobius: New function hash_adler32::update_byte (20x faster)
	* Libmobius: 2x improvement on data_decoder::get_uint functions
	* Libmobius: New class mobius::benchmark
	* Libmobius: Bytearray using vector<uint8_t> as container type
	* Libmobius: New operator^ (bytearray, bytearray)
	* Libmobius: New function bytearray.dump
	* Libmobius: New function bytearray.lpad
	* Libmobius: New function bytearray.rpad
	* Libmobius: New class mobius::database::connection_pool
	* Hive-report: LSA Secrets report shows each value on distinct row
	* Hive-report: New fields added to Cached Credentials report
	* Gtk-UI: New widget 'widetableview'
	* Python API: Do not install *.h files from Python API
	* Python API: New module pymobius.forensics.registry.cached_credentials
	* Unittest: New benchmark tool

Mobius Forensic Toolkit 1.2

	* Libmobius: Automatically decrypts LSA Secrets registry values
	* Libmobius: New class mobius::crypt::cipher_aes
	* Libmobius: New class mobius::crypt::hash_sha2_224
	* Libmobius: New class mobius::crypt::hash_sha2_256
	* Libmobius: New class mobius::crypt::hash_sha2_384
	* Libmobius: New class mobius::crypt::hash_sha2_512
	* Libmobius: New class mobius::crypt::hash_sha2_512_224
	* Libmobius: New class mobius::crypt::hash_sha2_512_256
	* Libmobius: New class registry_value_impl_container
	* Libmobius: New constructor registry_value (name, data)
	* Libmobius: New constructor data_decoder (const mobius::bytearray&)
	* Libmobius: Catch exceptions on tsk::adaptor methods
	* Libmobius: Clearerr called after ferror
	* Libmobius: hash_base, hash_stream and hash_block interfaces improved
	* Python API: New class mobius.crypt.cipher_aes
	* Python API: New class mobius.crypt.hash_adler32
	* Python API: New class mobius.crypt.hash_crc32
	* Python API: New class mobius.crypt.hash_md5
	* Python API: New class mobius.crypt.hash_sha1
	* Python API: New class mobius.crypt.hash_sha2_224
	* Python API: New class mobius.crypt.hash_sha2_256
	* Python API: New class mobius.crypt.hash_sha2_384
	* Python API: New class mobius.crypt.hash_sha2_512
	* Python API: New class mobius.crypt.hash_sha2_512_224
	* Python API: New class mobius.crypt.hash_sha2_512_256
	* Hive-report: Using LSA decrypted values
	* Hive-turing: Using LSA decrypted values

Mobius Forensic Toolkit 1.1

	* Libmobius: New class mobius::crypt::cipher_rot13
	* Libmobius: New class mobius::crypt::hash_sha1
	* Libmobius: Automatically decodes UserAssist registry keys
	* Libmobius: Automatically decrypts PSSP registry keys
	* Libmobius: New class registry_key_list
	* Libmobius: New function registry_key.get_key_by_mask
	* Libmobius: New function registry_key.get_value_by_mask
	* Libmobius: New function registry_key.get_data_by_mask
	* Libmobius: New function registry.get_key_by_mask
	* Libmobius: New function registry.get_value_by_mask
	* Libmobius: New function registry.get_data_by_mask
	* Libmobius: New function mobius::string::fnmatch
	* Libmobius: Function registry_key.get_parent eliminated
	* Libmobius: New method bytearray::to_string
	* Libmobius: Added multithread support to mobius::database
	* Libmobius: Mobius::crypt::cipher_block_mode recoded as handle class
	* Libmobius: New function mobius::crypt::new_cipher_block_mode_ecb
	* Libmobius: New function mobius::crypt::new_cipher_block_mode_cbc
	* Libmobius: Update (bytearray) function implemented for hashes
	* Libmobius: Encrypt (bytearray) function implemented for ciphers
	* Libmobius: Decrypt (bytearray) function implemented for ciphers
	* Libmobius: Module mobius::ant renamed to mobius::forensics
	* Libmobius: Registry_data implementation changed from pimpl to handler
	* Python API: Mobius.api module renamed to mobius
	* Python API: Package crypt merged into mobius
	* Python API: Package core merged into mobius
	* Python API: New submodule mobius.imagefile
	* Python API: New submodule mobius.io
	* Python API: New submodule mobius.partition
	* Python API: New submodule mobius.system
	* Python API: New class mobius.crypt.cipher_rot13
	* Python API: New master main module pymobius
	* Python API: Mobius.application moved to pymobius
	* Python API: Mobius.deprecated moved to pymobius
	* Python API: Mobius.extension moved to pymobius
	* Python API: Mobius.mediator moved to pymobius
	* Python API: Module mobius.ant renamed to mobius.forensics
	* Python API: Mobius.pyant renamed to pymobius.forensics
	* Python API: Mobius.xml moved to pymobius
	* forensics: New module registry.user_assist
	* case-model: Using pymobius.xml
	* category-model: Using pymobius.xml
	* category-model: Using mobius.core.application
	* datasource-imagefile: Using mobius.core.application
	* datasource-imagefile: Using mobius.imagefile.imagefile
	* datasource-physical-device: Using mobius.system.get_devices
	* data-sourcerer: Using mobius.core.application
	* data-sourcerer: Using mobius.imagefile.imagefile
	* data-sourcerer: Using pymobius.deprecated
	* data-viewer: Using pymobius.deprecated
	* emule-agent: Import mobius
	* engelbart: Import mobius
	* extension-builder: Import mobius
	* extension-manager: Import mobius
	* filesystem-viewer: Using pymobius.deprecated
	* filesystem-viewer: Using pymobius.xml
	* gigatribe-agent: Using mobius.io
	* gtk-ui: Using pymobius.xml
	* gtk-ui: Using mobius.core.application
	* gtk-ui: Using mobius.io
	* gtk-report-dialog: Import mobius
	* hive: Using mobius.core.application
	* hive: Using pymobius.deprecated
	* hive: Using pymobius.forensics
	* hive-report: Using mobius.crypt
	* hive-report: IEAutoComplete report moved from hive-protected-storage
	* hive-turing: Using mobius.crypt
	* hive-turing: Using new PSSP key direct access
	* hive-shareaza: Using new PSSP key direct access
	* hive-gigatribe: Using new PSSP key direct access
	* ice: Import mobius
	* lshw-agent: Using mobius.io
	* part-catalogue: Using pymobius.xml
	* part-model: Import mobius
	* partition-viewer: Using pymobius.xml
	* partition-viewer: Using pymobius.deprecated
	* partition-viewer: Using mobius.partition
	* report-model: Import mobius
	* sdi-window-manager: Import mobius
	* skype-agent: Using mobius.io
	* report-model: Using pymobius.xml
	* turing: Using mobius.io
	* turing-model: Using mobius.crypt
	* unittest: string::fnmatch tests added
	* Extension xml-pickle removed
	* Extension hive-protected-storage removed

Mobius Forensic Toolkit 1.0

	* hive: uses mobius.pyant.registry to retrieve registry files from disk
	* hive: interface reimplemented as a case view
	* hive: new option to export registry files
	* hive: new option to select registry
	* hive: added support to big data (db) cells
	* hive: shows value size
	* hive: stores local copies of the registry files for fast access
	* Libmobius: new module mobius::ant
	* Libmobius: new module mobius::ant::registry
	* Libmobius: new class mobius::ant::registry::hive_file
	* Libmobius: new class mobius::ant::registry::hive_key
	* Libmobius: new class mobius::ant::registry::hive_value
	* Libmobius: new class mobius::ant::registry::hive_data
	* Libmobius: new class mobius::ant::registry::hive_decoder
	* Libmobius: new class mobius::ant::registry::registry
	* Libmobius: new class mobius::ant::registry::registry_file
	* Libmobius: new class mobius::ant::registry::registry_key
	* Libmobius: new class mobius::ant::registry::registry_value
	* Libmobius: new class mobius::ant::registry::registry_data
	* Libmobius: new class mobius::ant::registry::registry_key_impl_base
	* Libmobius: new class mobius::ant::registry::registry_key_impl_null
	* Libmobius: new class mobius::ant::registry::registry_key_impl_hkey
	* Libmobius: new class mobius::ant::registry::registry_key_impl_container
	* Libmobius: new class mobius::ant::registry::registry_key_impl_link
	* Libmobius: new class mobius::ant::registry::registry_value_impl_base
	* Libmobius: new class mobius::ant::registry::registry_value_impl_null
	* Libmobius: new class mobius::ant::registry::registry_value_impl_hvalue
	* Libmobius: new function mobius::filesystem::entry.get_child_by_name
	* Libmobius: new function mobius::filesystem::entry.get_child_by_path
	* Libmobius: new function mobius::filesystem::entry.new_reader
	* Libmobius: better definition of deleted entries on filesystem::tsk
	* Libmobius: better definition of reallocated entries on filesystem::tsk
	* Libmobius: load on demand implemented for filesystem::tsk::entry_impl
	* Libmobius: new function mobius::string::to_string
	* Libmobius: hash_md5 calculations fully inlined
	* Libmobius: tsk::entry handles VIRT_DIR type
	* Python API: new module mobius.xml
	* Python API: new class mobius.xml.Pickle
	* Python API: new package mobius.ant
	* Python API: new package mobius.ant.registry
	* Python API: new class mobius.ant.registry.registry
	* Python API: new class mobius.ant.registry.registry_file
	* Python API: new class mobius.ant.registry.registry_key
	* Python API: new class mobius.ant.registry.registry_value
	* Python API: new class mobius.ant.registry.registry_data
	* Python API: new package mobius.pyant
	* Python API: new module mobius.pyant.vfs
	* Python API: new module mobius.pyant.registry
	* Python API: new function mobius.filesystem.entry.get_child_by_name
	* Python API: new function mobius.filesystem.entry.get_child_by_path
	* Python API: new function mobius.filesystem.entry.new_reader
	* Python API: new function PyString_from_bytearray
	* Python API: handles exceptions at mobius.filesystem.entry (reported by Clemente Paixão).
	* hive-gigatribe-report: compatible with the new C++ registry classes
	* hive-shareaza-report: compatible with the new C++ registry classes
	* hive-report: compatible with the new C++ registry classes
	* hive-protected-storage: compatible with the new C++ registry classes
	* hive-turing: compatible with the new C++ registry classes
	* gtk-ui: uses mobius.xml.Pickle
	* gtk-ui: larger icons on viewselector toolbar
	* gtk-ui: new function viewselector.remove
	* gtk-ui: new function viewselector.get_toolbar
	* xml-pickle: uses mobius.xml.Pickle
	* datasource-imagefile: shows metadata even if current URL is selected
	* ice: status bar eliminated
	* ice: update item toolbar when views are added or removed
	* ice: update views when datasource is changed
	* tools: new tool "hive-info"
	* tools: new tool "hive-scan"

Mobius Forensic Toolkit 0.5.31

	* Libmobius: speed improvement for module imagefile::ewf
	* Libmobius: new module mobius::disk
	* Libmobius: new class mobius::disk::disk
	* Libmobius: new class mobius::disk::disk_device
	* Libmobius: new class mobius::disk::disk_imagefile
	* Libmobius: new class mobius::disk::disk_reader
	* Libmobius: new function mobius::disk::new_disk_from_device_uid
	* Libmobius: new function mobius::disk::new_disk_from_reader
	* Libmobius: new function mobius::disk::new_disk_from_url
	* Libmobius: new class mobius::metadata
	* Libmobius: new class mobius::filesystem::entry
	* Libmobius: new class mobius::filesystem::stream
	* Libmobius: new class mobius::filesystem::entry_impl_base
	* Libmobius: new class mobius::filesystem::stream_impl_base
	* Libmobius: new class mobius::filesystem::tsk::entry_impl
	* Libmobius: new class mobius::filesystem::tsk::stream_impl
	* Libmobius: new class mobius::filesystem::tsk::reader_impl
	* Libmobius: new class mobius::filesystem::tsk::adaptor
	* Libmobius: filesystem_XXX common attributes moved to filesystem class
	* Libmobius: new function mobius::filesystem::filesystem.get_metadata
	* Libmobius: new function mobius::filesystem::filesystem.get_root_entry
	* Libmobius: function filesystem_get_metadata removed
	* Libmobius: function get_filesystems receives disk as arg
	* Libmobius: module mobius::tsk removed
	* Libmobius: module mobius::codec renamed as mobius::encoder
	* Python API: module mobius.tsk removed
	* Python API: new submodule mobius.disk
	* Python API: new class mobius.disk.disk
	* Python API: new class mobius.disk.disk_device
	* Python API: new class mobius.disk.disk_imagefile
	* Python API: new class mobius.disk.disk_reader
	* Python API: new function mobius.disk.new_disk_from_device_uid
	* Python API: new function mobius.disk.new_disk_from_reader
	* Python API: new function mobius.disk.new_disk_from_url
	* Python API: new submodule mobius.filesystem
	* Python API: new base class mobius.filesystem.filesystem
	* Python API: new class mobius.filesystem.entry
	* Python API: new class mobius.filesystem.stream
	* Python API: new function mobius.filesystem.filesystem.get_metadata
	* Python API: new function mobius.filesystem.filesystem.get_root_entry
	* Python API: class filesystem_ext2 moved to mobius.filesystem
	* Python API: class filesystem_hfs moved to mobius.filesystem
	* Python API: class filesystem_iso moved to mobius.filesystem
	* Python API: class filesystem_ntfs moved to mobius.filesystem
	* Python API: class filesystem_vfat moved to mobius.filesystem
	* Python API: function get_filesystems moved to mobius.filesystem
	* Python API: function mobius.api.get_filesystems receives disk as arg
	* Python API: function mobius.api.get_filesystem_metadata removed
	* Python API: function mobius.api.get_partitions receives disk as arg
	* Python API: function mobius.api.get_partition_table receives disk as arg
	* Python API: new function PyList_FromMetadata
	* configure.ac: libtsk mandatory
	* gtk-ui: lazy update implemented for viewselector
	* filesystem-viewer: new icon
	* filesystem-viewer: uses mobius.disk
	* filesystem-viewer: stores data into item's data folder
	* partition-viewer: uses mobius.disk
	* partition-viewer: stores data into item's data folder
	* data-viewer: new icon
	* data-viewer: uses mobius.disk
	* data-sourcerer: uses mobius.disk
	* datasource-model: service datasource.is-available removed
	* datasource-model: service datasource.get-reader removed
	* datasource-model: service datasource.get-metadata removed
	* datasource-model: service datasource.get-path removed
	* tools: new tool dirfs
	* tools: dirtsk removed
	* tools: registry_get removed

Mobius Forensic Toolkit 0.5.30

	* Libmobius: new module mobius::filesystem
	* Libmobius: new class mobius::filesystem::filesystem
	* Libmobius: new class mobius::filesystem::filesystem_ext2
	* Libmobius: new class mobius::filesystem::filesystem_iso
	* Libmobius: new class mobius::filesystem::filesystem_ntfs
	* Libmobius: new class mobius::filesystem::filesystem_vfat
	* Libmobius: new class mobius::filesystem::filesystem_impl_base
	* Libmobius: new class mobius::filesystem::filesystem_impl_null
	* Libmobius: new class mobius::filesystem::filesystem_impl_ext2
	* Libmobius: new class mobius::filesystem::filesystem_impl_iso
	* Libmobius: new class mobius::filesystem::filesystem_impl_ntfs
	* Libmobius: new class mobius::filesystem::filesystem_impl_vfat
	* Libmobius: new function mobius::filesystem::get_filesystems
	* Libmobius: new function mobius::filesystem::get_filesystem_metadata
	* Libmobius: new function to_string (const datetime&)
	* Libmobius: new function mobius::datetime::datetime_from_iso_string
	* Libmobius: new function data_decoder.get_iso9660_datetime
	* Libmobius: new function data_decoder.get_unix_datetime
	* Libmobius: new function data_decoder.get_uuid
	* Libmobius: new function string::to_hex
	* Python API: new generic dataholder class "api_dataholder"
	* Python API: new class mobius.api.filesystem_ext2
	* Python API: new class mobius.api.filesystem_hfs
	* Python API: new class mobius.api.filesystem_iso
	* Python API: new class mobius.api.filesystem_ntfs
	* Python API: new class mobius.api.filesystem_vfat
	* Python API: new function mobius.api.get_filesystems
	* Python API: new function mobius.api.get_filesystem_metadata
	* filesystem-viewer: new extension
	* case-model: deprecated code eliminated
	* datasource-model: service datasource.new-slice eliminated
	* xml-pickle: save and load null datetimes
	* xml-pickle: uses inspect to retrieve class members
	* tools: new filesystem_scan tool implemented

Mobius Forensic Toolkit 0.5.29

	* Libmobius: new module mobius::partition
	* Libmobius: new class mobius::partition::partition_table
	* Libmobius: new class mobius::partition::partition_system_apm
	* Libmobius: new class mobius::partition::partition_system_dos
	* Libmobius: added support to DOS partition system
	* Libmobius: added support to GPT partition system
	* Libmobius: added support to APM partition system
	* Libmobius: new operator != (bytearray, bytearray)
	* Libmobius: new class mobius::io::reader_impl_bytearray
	* Libmobius: new class mobius::io::sector_reader_adaptor
	* Libmobius: new function mobius::string::lpad
	* Libmobius: new function mobius::string::rpad
	* tools: new partition_table tool
	* Python API: new package mobius.api
	* Python API: packaged core merged into mobius.api
	* Python API: packaged io merged into mobius.api
	* Python API: packaged imagefile merged into mobius.api
	* Python API: new class mobius.api.device
	* Python API: new class mobius.api.partition
	* Python API: new function mobius.api.get_partition_table
	* Python API: new function mobius.api.get_devices
	* Python API: new function mobius.api.get_partitions
	* partition-viewer: uses mobius.api.get_partition_table
	* category-model: uses mobius.api instead of mobius.core
	* datasource-imagefile: uses mobius.api instead of mobius.imagefile
	* datasource-imagefile: uses mobius.api instead of mobius.io
	* datasource-imagefile: uses mobius.api instead of mobius.core
	* datasource-physical-device: uses mobius.api.device and get_devices
	* datasource-physical-device: does not need package python_gudev anymore
	* datasource-model: only uses ReaderSlice when necessary
	* data-sourcerer: uses mobius.api instead of mobius.imagefile
	* data-sourcerer: uses mobius.api instead of mobius.core
	* data-viewer: accept mobius.api.reader objects as stream
	* gigatribe-agent: uses mobius.api instead of mobius.io
	* gtk-ui: uses mobius.api instead of mobius.io
	* gtk-ui: uses mobius.api instead of mobius.core
	* hive: uses mobius.api instead of mobius.io
	* hive: uses mobius.api instead of mobius.core
	* lshw-agent: uses mobius.api instead of mobius.io
	* skype-agent: uses mobius.api instead of mobius.io
	* turing: uses mobius.api instead of mobius.io
	* partition-agent: extension removed
	* partition-agent-dos: extension removed

Mobius Forensic Toolkit 0.5.28

	* new extension gtk-report-dialog
	* attribute-viewer: DND exports attribute list and value dictionary
	* lshw-agent: bug returning items fixed
	* lshw-agent: ignores disks without size information
	* report-model: workaround for gtk.Dialog bug
	* report-model: service report.run-dialog moved to gtk-report-dialog ext.
	* datasource-model: does not set empty attributes
	* tools: new ewf_decoder tool
	* Libmobius: new module mobius::imagefile::ewf
	* Libmobius: EWF implementation moved to mobius::imagefile::ewf
	* Libmobius: EWF write support implemented
	* Libmobius: fixed imagefile_impl_dossier bug when parsing some log files
	* Libmobius: new attribute imagefile.compression_level
	* Libmobius: new module mobius::codec
	* Libmobius: new class mobius::codec::data_encoder
	* Libmobius: new abstract class crypt::hash_stream
	* Libmobius: new hash function crypt::hash_adler32
	* Libmobius: new hash function crypt::hash_md5
	* Libmobius: new template class crypt::hash_functor
	* Libmobius: new template class io::reader_impl_evaluator
	* Libmobius: new template class io::writer_impl_evaluator
	* Libmobius: new method application.get_os_name 
	* Libmobius: new namespace mobius::string
	* Libmobius: new function mobius::string::replace
	* Libmobius: function string_tolower renamed to string::tolower
	* Libmobius: function string_toupper renamed to string::tolower
	* Libmobius: function string_startswith renamed to string::startswith
	* Libmobius: function string_endswith renamed to string::endswith
	* Libmobius: function string_strip renamed to string::strip
	* Libmobius: function string_lstrip renamed to string::lstrip
	* Libmobius: function string_rstrip renamed to string::rstrip
	* Libmobius: function string_split renamed to string::split
	* Libmobius: function string_remove_all renamed to string::remove_char
	* Libmobius: new method date.set_year
	* Libmobius: new method date.set_month
	* Libmobius: new method date.set_day
	* Libmobius: datetime::date methods turned noexcept when possible
	* Libmobius: datetime::time methods turned noexcept when possible
	* Libmobius: datetime::datetime methods turned noexcept when possible
	* Libmobius: datetime::timedelta methods turned noexcept
	* Libmobius: datetime::conv_julian functions turned noexcept
	* Libmobius: datetime::date operator- returns timedelta
	* Libmobius: datetime::date operator+ using timedelta
	* Libmobius: datetime::date new operator- (date, timedelta)
	* Libmobius: datetime::datetime new operator- (datetime, timedelta)
	* Libmobius: datetime::timedelta new constructor (years, days, secs, nsecs)
	* Libmobius: new function datetime::now ()
	* Libmobius: new datetime::operator != (date, date)
	* Libmobius: new datetime::operator < (date, date)
	* Libmobius: new datetime::operator <= (date, date)
	* Libmobius: new datetime::operator > (date, date)
	* Libmobius: new datetime::operator >= (date, date)
	* Libmobius: new ostream<< operator (date)
	* Libmobius: new ostream<< operator (time)
	* Libmobius: new ostream<< operator (datetime)
	* Libmobius: new method bytearray.from_hexstring
	* Libmobius: new method bytearray.random

Mobius Forensic Toolkit 0.5.27

	* new extension lshw-agent
	* Libmobius: new module mobius::core
	* Libmobius: new module mobius::decoder
	* Libmobius: new module mobius::database
	* Libmobius: new class mobius::database::database
	* Libmobius: new class mobius::database::transaction
	* Libmobius: new class mobius::database::statement
	* Libmobius: new class mobius::system::device_list
	* Libmobius: new class mobius::system::device
	* Libmobius: class application moved to mobius::core
	* Libmobius: application class is singleton now
	* Libmobius: application class compatible with XDG Base Directory Spec.
	* Libmobius: new method application.get_id
	* Libmobius: new method application.get_name
	* Libmobius: new method application.get_version
	* Libmobius: new method application.get_title
	* Libmobius: new method application.get_copyright
	* Libmobius: new method application.get_config_path
	* Libmobius: new method application.get_cache_path
	* Libmobius: new method application.get_data_path
	* Libmobius: new method application.has_config
	* Libmobius: new method application.get_config
	* Libmobius: new method application.set_config
	* Libmobius: new method data_decoder.get_int8
	* Libmobius: new method data_decoder.get_uint8
	* Libmobius: new method data_decoder.get_int16_le
	* Libmobius: new method data_decoder.get_ipv4
	* Libmobius: new class mobius::decoder::mfc_decoder
	* Libmobius: class data_decoder moved to mobius::decoder
	* Libmobius: imagefile_ewf handles 64-bit number of sectors
	* Libmobius: new function get_path_from_url
	* Libmobius: new function get_url_from_path
	* Python API: new class mobius.core.application
	* Python API: service 'app.get-version' deleted
	* Python API: service 'app.get-name' deleted
	* Python API: service 'app.get-user-path' deleted
	* Python API: service 'app.get-path' deleted
	* Python API: service 'app.get-data-path' deleted
	* Python API: package mobius.config deleted
	* category-manager: uses base64.b64decode
	* category-model: uses application.get_config_path
	* category-model: category.xml compatible with lshw-agent extension
	* category-model: uses base64.b64decode
	* datasource-imagefile: uses application.get/set_config
	* data-sourcerer: uses application.get/set_config
	* data-sourcerer: better error handling
	* data-viewer: users application.get/set_config
	* emule-agent: uses application.get/set_config
	* engelbart: uses application.get/set_config
	* engelbart: uses application.get_cache_path
	* extension-builder: uses application.get/set_config
	* extension-builder: uses base64.b64decode
	* extension-manager: uses application.get/set_config
	* gtk-ui: uses application.get/set_config
	* hive: uses application.get/set_config
	* hive: detects NTUSER.DAT on Win10
	* ice: uses application.get/set_config
	* ice: uses mobius.core.application
	* ice: uses base64.b64decode
	* part-catalogue: uses application.get/set_config
	* part-catalogue: uses base64.b64decode
	* part-model: uses application.get_config_path
	* report-model: uses application.get/set_config
	* report-model: uses application.get_config_path
	* report-model: uses application.get_cache_path
	* sdi-window-manager: uses mobius.core.application
	* sdi-window-manager: uses application.get/set_config
	* skype-agent: uses application.get/set_config
	* turing-model: uses application.get_config_path
	* tools: new tool device_list
	* tools: new tool disk_list
	* extension config removed

Mobius Forensic Toolkit 0.5.26

	* Libmobius: new class mobius::imagefile::imagefile
	* Libmobius: new class mobius::imagefile::imagefile_impl_raw
	* Libmobius: new class mobius::imagefile::imagefile_impl_split
	* Libmobius: new class mobius::imagefile::imagefile_impl_dossier
	* Libmobius: new class mobius::imagefile::imagefile_impl_solo
	* Libmobius: new class mobius::imagefile::imagefile_impl_talon
	* Libmobius: new class mobius::imagefile::imagefile_impl_ewf
	* Libmobius: new class mobius::data_decoder
	* Libmobius: virtual destructor for file_impl_base implemented
	* Libmobius: mobius/io/resource_impl_null.h created
	* Libmobius: mobius/io/file_impl_null.h created
	* Libmobius: mobius/io/folder_impl_null.h created
	* Libmobius: mobius/io/reader_impl_null.h created
	* Libmobius: new bytearray operator+=
	* Libmobius: new bytearray operator+
	* Libmobius: bytearray.clear () implemented
	* Libmobius: mobius::io::file::new_writer flag named changed to "overwrite"
	* Libmobius: new string function string_strip
	* Libmobius: new string function string_lstrip
	* Libmobius: new string function string_rstrip
	* Libmobius: new string function string_remove_all
	* Libmobius: datetime::date operator bool implemented
	* Libmobius: datetime::time operator bool implemented
	* Libmobius: datetime::datetime operator bool implemented
	* Libmobius: new function zlib_compress
	* Libmobius: new function zlib_decompress
	* Python API: new class mobius.imagefile.imagefile
	* new extension hive-shareaza-report
	* new extension hive-gigatribe-report
	* hive-shareaza-report: new report "Shareaza general info"
	* hive-shareaza-report: new report "Shareaza user folders"
	* hive-shareaza-report: new report "Shareaza protocols"
	* hive-shareaza-report: new report "Shareaza search history"
	* attribute-viewer: retrieve item's children on DND
	* gtk-ui: new event attribute-list.on_dnd_get_data
	* datasource-imagefile: use mobius.imagefile.imagefile
	* datasource-model: compatible with mobius.io.reader
	* datasource-physical-device: compatible with mobius.io.reader
	* partition-viewer: compatible with mobius.io.reader
	* data-sourcerer: use mobius.imagefile.imagefile
	* extension imagefile-raw removed
	* extension imagefile-split removed
	* extension imagefile-dossier removed
	* extension imagefile-solo removed
	* extension imagefile-talon removed
	* extension imagefile-ewf removed
	* tools: new directory
	* tools: new tool imagefile_info
	* tools: new tool imagefile_convert

Mobius Forensic Toolkit 0.5.25

	* Libmobius: charset conversion functions implemented (mobius/charset.h)
	* Libmobius: new class mobius::io::resource
	* Libmobius: new class mobius::io::file
	* Libmobius: new class mobius::io::folder
	* Libmobius: new class mobius::io::reader
	* Libmobius: new class mobius::io::writer
	* Libmobius: new class mobius::system::group
	* Libmobius: new class mobius::system::user
	* Libmobius: class mobius::io::file_descriptor_reader removed
	* Libmobius: class mobius::io::file_reader removed
	* Libmobius: class mobius::io::local_file_reader removed
	* Libmobius: class mobius::io::seekable_reader removed
	* Libmobius: class mobius::io::uri_reader removed
	* Python API: new class mobius.io.file
	* Python API: new class mobius.io.folder
	* Python API: new class mobius.io.reader
	* Python API: new class mobius.io.writer
	* Python API: class mobius.io.uri_reader removed
	* part-catalogue: show confirmation dialog before inserting new part
	* imagefile-ewf: handle 'disk' section
	* imagefile-ewf: handle 'done' section
	* imagefile-ewf: use mobius.io.file
	* imagefile-dossier: use mobius.io.file
	* imagefile-raw: use mobius.io.file
	* imagefile-solo: use mobius.io.file
	* imagefile-split: use mobius.io.file
	* imagefile-talon: use mobius.io.file
	* datasource-imagefile: use mobius.io.file
	* gigatribe-agent: use mobius.io.file
	* hive: use mobius.io.file
	* skype-agent: use mobius.io.file
	* turing: use mobius.io.file
	* uri extension removed 
	* uri-file extension removed 
	* configure.ac: fixed bug when libtsk is not available. Reported by Hortensio Luis Garcia Real.
	* configure.ac: do not generate .a files into python wrapper dir

Mobius Forensic Toolkit 0.5.24

	* Libmobius: new class mobius::io::uri
	* Libmobius: new class mobius::io::reader (abstract class)
	* Libmobius: new class mobius::io::seekable_reader (abstract class)
	* Libmobius: new class mobius::io::file_descriptor_reader
	* Libmobius: new class mobius::io::file_reader
	* Libmobius: new class mobius::io::uri_reader
	* Libmobius: new class mobius::datetime::date
	* Libmobius: new class mobius::datetime::time
	* Libmobius: new class mobius::datetime::datetime
	* Libmobius: new class mobius::datetime::timedelta
	* Libmobius: new functions at mobius::datetime::conv_iso_string.h
	* Libmobius: new functions at mobius::datetime::conv_julian.h
	* Libmobius: new functions at mobius::datetime::conv_nt_timestamp.h
	* Libmobius: new functions at mobius::datetime::conv_unix_timestamp.h
	* Libmobius: mobius::bytearray using unique_ptr
	* Libmobius: new method bytearray.resize
	* Libmobius: mobius::crypt using noexcept, constexpr, default and override
	* Libmobius: mobius::hash_crc32 using precalculated CRC table
	* Libmobius: new class mobius::crypt::cipher_base (abstract class)
	* Libmobius: new class mobius::regex
	* Libmobius: mobius/exception_posix.h for errno based exceptions
	* Python API: new package mobius.io
	* Python API: new class mobius.io.uri_reader
	* part-catalogue: using combobox + listview instead of a treeview
	* part-model: use sqlite3 database
	* part-model: service part.catalogue.iter removed
	* part-model: service part.catalogue.load removed
	* part-model: service part.catalogue.save removed
	* part-model: service part.catalogue.import removed
	* part-model: service part.catalogue.export removed
	* part-model: new service part.set_all
	* part-model: new service part.get_all
	* part-model: new service part.get_by_category
	* cellphone-agent: datetime parsing bug fixed. Reported by Vladimir Santos
	* uri-file: method File.get_uri_scheme removed
	* uri-file: method File.get_dirname removed
	* uri-file: method File.is_directory removed
	* emule-agent: does not use uri.new-file
	* hive: use mobius.io.uri_reader
	* gigatribe-agent: use mobius.io.uri_reader
	* imagefile-dossier: use mobius.io.uri_reader
	* imagefile-solo: use mobius.io.uri_reader
	* imagefile-talon: use mobius.io.uri_reader
	* skype-agent: use mobius.io.uri_reader
	* skype-agent-l33l: use mobius.io.uri_reader
	* skype-agent-sqlite: use mobius.io.uri_reader
	* skype-agent-sqlite: use temporary .sqlite file
	* data-sourcerer: check if datasource is available on populate_metadata

Mobius Forensic Toolkit 0.5.23

	* Libmobius: new class mobius::unittest
	* Libmobius: new class mobius::bytearray
	* Libmobius: new class mobius::crypt::hash_base (abstract class)
	* Libmobius: new class mobius::crypt::hash_crc32
	* Libmobius: new class mobius::crypt::hash_zip
	* Libmobius: new class mobius::crypt::cipher_block (abstract class)
	* Libmobius: new class mobius::crypt::cipher_block_mode (abstract class)
	* Libmobius: new class mobius::crypt::cipher_block_mode_ecb
	* Libmobius: new class mobius::crypt::cipher_block_mode_cbc
	* Libmobius: new class mobius::crypt::cipher_des
	* Libmobius: new class mobius::crypt::cipher_stream (abstract class)
	* Libmobius: new class mobius::crypt::cipher_rc4
	* Libmobius: new class mobius::crypt::cipher_zip
	* Libmobius: new class mobius::global_instance
	* Libmobius: new class mobius::application
	* Libmobius: code compatible with C++11
	* Libmobius: mobius/exception.inc defines macro MOBIUS_EXCEPTION_MSG
	* Libmobius: class mobius::exception removed
	* Libmobius: mobius::tsk::exception derived from std::runtime_error
	* Libmobius: mobius::tsk::stream.operator bool removed
	* Libmobius: mobius::tsk::entry retrieves all data streams
	* Libmobius: mobius/config.h header file removed
	* Python API: new wrapper class mobius.crypt.hash_zip
	* Python API: new wrapper class mobius.crypt.cipher_des
	* Python API: new wrapper class mobius.crypt.cipher_rc4
	* Python API: new wrapper class mobius.crypt.cipher_zip
	* Python API: method Application.get_directory removed
	* hive-report: use mobius.crypt.cipher_rc4
	* hive-report: use mobius.crypt.cipher_des
	* hive-report: new report "encrypted volumes" lists Folder Locker 6 vols
	* hive-pstore: use mobius.crypt.cipher_des
	* hive-turing: use mobius.crypt.cipher_rc4
	* hive-turing: use mobius.crypt.cipher_des
	* turing-model: use mobius.crypt.cipher_des
	* examples: registry_get uses mobius::application
	* examples: tsk uses mobius::application
	* tutorial: chapter "cracking Windows password" moved to homepage

Mobius Forensic Toolkit 0.5.22

	* Libmobius: new mobius::tsk classes to access libtsk
	* python API: wrapper for mobius::tsk
	* new installation method using configure, make and make install
	* mediator.py: moved to mobius package
	* emule-agent: new report "shared folders"
	* emule-agent: handle tags 0x34 and 0x35
	* emule-agent: fix BLOB decoding. Reported by Clemente Paixão
	* emule-agent: specific policies for dreamule and emule config
	* emule-agent: check if AC_SearchStrings.dat exists before opening. Reported by Clemente Paixão
	* hive-report: catch exceptions at get_computer_name function
	* hive-report: add Wow6432Node subkeys to the Installed Program report. Implemented by Vladimir Santos
	* datasource-physical-device: fix retrieve_metadata for disks that have empty serial numbers
	* imagefile-ewf: fix amount of bytes read in decode_hash_section
	* engelbart: class UIManager implemented

Mobius Forensic Toolkit 0.5.21

	* new extension emule-agent
	* new extension engelbart
	* hive-report: new report "Ares accounts"
	* hive-report: new report "last mounted devices"
	* hive-report: installed program handles UNIX install datetime
	* hive-report: installed program also retrieves from NTUSER.dat uninstall subkeys. Suggested by Clemente Paixão
	* gigatribe-agent: datetime decoder fixed
	* gtk-ui: service ui.start moved to engelbart extension
	* gtk-ui: service ui.stop moved to engelbart extension
	* gtk-ui: service ui.flush moved to engelbart extension
	* gtk-ui: deprecated service ui.render-icon removed
	* gtk-ui: service ui.new-icon-from-data set deprecated
	* gtk-ui: service ui.new-icon-from-file set deprecated
	* skype-agent: REPORT_ICON_DATA replaced by report.run icon
	* emule-agent: REPORT_ICON_DATA replaced by report.run icon
	* ice: REPORT_ICON_DATA replaced by report.run icon
	* report-wizard: TRASH_BIN_ICON replaced by dnd.delete icon
	* ice: use image_buffer instead of ui.render-icon
	* category-manager: use image_buffer instead of ui.render-icon
	* engelbart: new service ui.new-factory
	* extension-manager: use image_buffer instead of ui.new-icon-from-data
	* date-code: copyright (c) 2014

Mobius Forensic Toolkit 0.5.20

	* new extension cellphone-agent
	* report-model: new service report.run-dialog
	* report-model: generate '%' instead of '%%' in verbatim environment
        report-model: do not generate duplicated methods in .py
	* gtk-ui: forbid treeitem DND onto itself
	* gtk-ui: case treeview icon cache implemented
	* gtk-ui: do not expand selected item when item.children is modified
	* skype-agent: "generate report" option
	* skype-agent: disable DND on account view when not selected
	* skype-agent: account tile image repositioned
	* ice: use service report.run-dialog
	* sdi-window-manager: call to on_widget_started eliminated
	* partition-viewer: scan only partition-system components
	* partition-agent: update item.children only whether it detects partitions
	* partition-agent-dos: keep item.children when building components
	* turing: test dictionary option fixed

Mobius Forensic Toolkit 0.5.19

	* new extension partition-agent
	* new extension partition-agent-dos
	* datasource-model: new service datasource.new-slice
	* datasource-imagefile: set datasource.start and datasource.end
	* gtk-ui: reorder treeview only when necessary
	* gtk-ui: tableview column's new attribute is_exportable
	* hive: better link between HKEY_USERS and NTUSER.DAT
	* hive-report: new report Shared Folders
	* ice: reload items only when item.children is modified
	* ice: remove items by item.uid
	* ice: do not reuse children var in treeview_on_file_dropped
	* partition-viewer: show partition-system.dos components
	* object-model: new method object._copy ()
	* object-model: set class_id attribute
	* category-model: merge in categories from extension's category.xml
	* turing: test keywords while reading dictionary file
	* turing: importer for John The ripper .john (hashes) file
	* xml-pickle: use class_id to identify mobius objects
	* xml-pickle: delete deprecated code

Mobius Forensic Toolkit 0.5.18

	* hive-report: new report WiFi Network List
	* hive-report: new report Gigatribe accounts for Gigatribe v3.0
	* hive-report: new report Gigatribe download folders for Gigatribe v3.0
	* hive-report: new report Gigatribe requested passwords for Gigatribe v3.0
	* hive-report: new report Ares Search History
	* new extension gigatribe-agent to browse Gigatribe chat files
	* developers-guide:  new chapter Mobius' Software Architecture
	* gtk-ui: new method container.set_content
	* gtk-ui: new method container.get_content
	* gtk-ui: new method container.remove_content
	* gtk-ui: tableview columns accept new attribute is_markup
	* report-viewer: use ui.widget.container
	* datasource-model: fix datasource.get-path bug
	* imagefile-solo: fix Handler.retrieve_metadata bug
	* imagefile-dossier: implement Handler.build_reader
	* datasource-imagefile: better support for solo, dossier and talon in datasource.get-path service
	* copyright (c) 2013 notice

Mobius Forensic Toolkit 0.5.17

	* new extension datasource-imagefile
	* new extension datasource-physical-device
	* new extension imagefile-dossier
	* new extension imagefile-talon
	* new extension imagefile-solo
	* data-sourcerer: improved version, accepting datasource types
	* datasource-model: new service datasource.get-metadata
	* datasource-model: new service datasource.is-available
	* datasource-model: service 'set-default-type' eliminated
	* datasource-model: service 'datasource.new-from-uri' moved to datasource-imagefile
	* datasource-imagefile: handles imagefiles DND
	* datasource-scsi extension eliminated 
	* datasource-raw extension eliminated 
	* datasource-ewf extension eliminated 
	* datasource-talon extension eliminated 
	* datasource-solo extension eliminated 
	* datasource-dossier extension eliminated 
	* gtk-ui: new widget 'container' implemented
	* gtk-ui: method 'hide' implemented for all widgets
	* gtk-ui: tableview.get_data ignore invisible columns 
	* data-viewer: better control of selected item
	* data-viewer: handles 'item.datasource-modified' event
	* partition-viewer: better control of selected item
	* partition-viewer: handles 'item.datasource-modified' event
	* uri-file: file.get_metadata uses datatime.datetime
	* ice: DND before case item bug fixed
	* report-model: global dataholder class Data available
	* turing: import dialog title corrected
	* category-model: category.xml updated
	* xml-pickle: added support to 'long' type

Mobius Forensic Toolkit 0.5.16

	* new extension turing-model deploys a cryptographic API
	* new extension turing is a frontend to the turing-model extension
	* new extension hive-turing integrates the hive and the turing extensions
	* gtk-ui: new widget ui.widget.multiviewer
	* gtk-ui: tableview.__iter__ implemented
	* hive: clear registry option implemented
	* hive: emits 'registry.updated' event
	* hive-report: user accounts and user passwords reports unified
	* hive-report: user accounts report uses crypt.unhash_win
	* hive-report: new "logon info" report
	* imagefile-split: method is_available implemented
	* imagefile-raw: method is_available implemented
	* imagefile-ewf: method is_available implemented
	* partition-viewer: check if stream is available
	* data-viewer: check if stream is available
	* gtk-ui-treeview: bug fixed in clear method
	* tutorial: new chapter "cracking Windows password"

Mobius Forensic Toolkit 0.5.15

	* new extension gtk-ui-treeview implements ui.widget.treeview with GtkGenericTreeModel
	* new extension partition-viewer
	* hive: uses ui.widget.treeview in reportview
	* part-catalogue: uses ui.widget.treeview
	* part-catalogue: uses ui.widget.attribute-list
	* imagefile-split: better implementation of write method
	* datasource-model: workaround for datasource-scsi size bug
	* datasource-scsi: strips '\0' from metadata

Mobius Forensic Toolkit 0.5.14

	* new extension imagefile-raw
	* new extension imagefile-split
	* new extension imagefile-ewf
	* data-sourcerer: export imagefiles as 4GB split
	* data-viewer: horiz. scrollbar added
	* data-viewer: bytes per line menu option implemented
	* datasource-talon: handles file DND directly
	* datasource-ewf: handles file DND directly
	* datasource-ewf: support to multiple segment files
	* datasource-dossier: handles file DND directly
	* datasource-solo: handles file DND directly
	* datasource-scsi: handles file DND directly
	* datasource-raw: handles file DND directly
	* datasource-model: service datasource.get-writer eliminated
	* datasource-model: service datasource.new-from-type eliminated
	* resources datasource.handler renamed to agent.datasource
	* resource dnd-file.handler renamed to ui.dnd-file
	* uri: seek/tell bug fixed
	* uri/uri-file: re-designed for better separation between handler and streams
	* uri-file: method ReadStream.get_size implemented
	* skype-sqlite: handles NULL chatnames
	* application.py: app.add-resource priority level eliminated

Mobius Forensic Toolkit 0.5.13

	* new extension Skype Agent l33l to handle old Skype log files
	* new extension Skype Agent SQLite to handle Skype 5.x log files
	* new extension Hive Protected Storage
	* hive: shows Protected Storage subtree
	* hive: better handling of subkeys
	* hive-report: e-mail account report shows POP3, SMTP and HTTP passwords when available
	* hive-report: Protected Storage report eliminated
	* hive-protected-storage: new report "Internet Explorer auto complete"
	* extension-builder: save-as bug fixed
	* extension-builder: generate \' instead of ' at EXTENSION_* vars
	* uri: new method ReadStream.get_file
	* uri: new method WriteStream.get_file
	* uri: new method File.get_local_reference
	* gtk-ui: ui.new-icon-from-data resizes image using INTERP_BILINEAR
	* gtk-ui: get_text do not export invisible columns

Mobius Forensic Toolkit 0.5.12

	* new extension Skype Agent
	* hive-report: "on the internet" search added to Search Assistant Report
	* hive-report: "computer and people" search added to Search Assistant Report
	* report-model: escapes '^'

Mobius Forensic Toolkit 0.5.11

	* mobius_case_update.py eliminated
	* application.py: emits 'app.resource-added'
	* application.py: emits 'app.resource-removed'
	* ice: updates the tools menu dynamically
	* gtk-ui: widget 'data-table' renamed to 'tableview'
	* gtk-ui: attribute-list and tableview export data as LaTeX table
	* hive: function get_key_by_path created
	* hive: function get_key_by_name created
	* hive: function get_value_by_path created
	* hive: function get_value_by_name created
	* hive: function get_data_by_path created
	* hive: function get_data_by_name created
	* hive: calls to Registry.__update_root_keys fixed
	* hive: uses '\' as key separator instead of '/'
	* hive: handles HKU\.DEFAULT
	* hive: uses app.resources instead of services
	* hive: service registry.register-report eliminated
	* hive: service registry.unregister-report eliminated
	* hive: can export values as report
	* hive-report: last access date added to the recent-docs report
	* hive-report: new "autorun" report
	* hive-report: new "services" report
	* hive-report: new "Internet Explorer download folder" report
	* hive-report: new "Internet Explorer typed URLs" report
	* hive-report: new "My Recent Documents by Filetype" report
	* hive-report: new "MRU files opened/saved" report
	* hive-report: new "MRU files executed" report
	* hive-report: new "search assistant"' report
	* hive-report: new "printer ports" report
	* hive-report: new "processors" report
	* hive-report: new "all devices" report
	* hive-report: new "HID devices" report
	* hive-report: new "network devices" report
	* hive-report: new "stream devices" report
	* hive-report: user logon info added to user accounts report
	* hive-report: installed programs report shows all entries of the Uninstall key and key mtime
	* hive-report: last modification and last load times added to user profiles report
	* report-model: escapes '\' as "\textbackslash" instead of "\backslash"

Mobius Forensic Toolkit 0.5.10

	* new extension: Integrated Case Environment (ICE)
	* attribute-viewer: reimplemented as view
	* report-viewer: reimplemented as view
	* data-sourcerer: reimplemented as view
	* data-viewer: reimplemented as view
	* uri: method File.get_uri implemented
	* uri: method File.get_uri_scheme implemented
	* uri: method File.exists implemented
	* uri: method File.is_regular_file implemented
	* uri: method file.get_basename implemented
	* uri: method file.get_dirname implemented
	* uri: method file.get_extension implemented
	* uri: method file.new_write_stream implemented
	* uri: method file.get_metadata implemented
	* uri: write stream implemented
	* uri: service uri.register-scheme-handler eliminated
	* uri: service uri.unregister-scheme-handler eliminated
	* uri-file: added support to write stream
	* gtk-ui: uses URI extension to write files
	* gtk-ui: new widget "treeview"
	* gtk-ui: new widget "view-selector"
	* hive: better identification of SYSTEM hivefiles
	* hive-report: uses URI extension to write JTR files
	* hive-report: exports only unknown user passwords hashes to the .john file
	* date-code: handles object.attribute-modified
	* part-model: handles object.attribute-modified
	* part-catalogue: solved keyerror bug
	* category-model: service category.get-icon-data returns raw data instead of base64
	* object-model: Object attributes are now python attributes
	* object-model: service object.get-attribute eliminated
	* object-model: service object.set-attribute eliminated
	* object-model: service object.expand-value-masks created
	* object-model: service model.new eliminated
	* object-model: service model.new-object eliminated
	* object-model: service model.add-object eliminated
	* object-model: service model.get-object eliminated
	* object-model: service model.remove-object eliminated
	* object-model: service model.add-relation eliminated
	* object-model: service model.remove-relation eliminated
	* object-model: service model.has-relation-from eliminated
	* case-model: service case.get-attribute eliminated
	* case-model: service case.set-attribute eliminated
	* case-model: service case.get-icon-data eliminated
	* case-model: service case.save-all eliminated
	* case-model: service case.any-modified eliminated
	* case-model: service item.expand-value-masks eliminated
	* case-model: service item.expand-expression eliminated
	* case-model: service item.get-attribute eliminated
	* case-model: service item.set-attribute eliminated
	* case-model: service item.get-parent eliminated
	* case-model: service item.get-case eliminated
	* case-model: service object.add-child eliminated
	* case-model: service object.has-children eliminated
	* case-model: service object.remove-child eliminated
	* case-model: service object.iter-children eliminated
	* datasource-model: service item.set-datasource eliminated
	* datasource-model: service item.remove-datasource eliminated
	* datasource-model: service item.get-datasource eliminated
	* datasource-model: service datasource.add-handler eliminated
	* datasource-model: service datasource.remove-handler eliminated
	* datasource-model: service datasource.list-exportables eliminated
	* extension Mobius Forensic Toolkit App eliminated
	* extension Case Viewer eliminated

Mobius Forensic Toolkit 0.5.9

	* datasource-dossier: new extension to handle Logicube Dossier imagefiles
	* datasource-scsi: minor improvements
	* hive-report: new LSA secrets report
	* hive-report: new protected storage report
	* hive-report: new cached credentials report
	* hive-report: user passwords report shows passwords stored into LSA secrets
	* hive-report: user passwords report export found passwords to a JTR .pot file
	* hive-report: email accounts report shows passwords stored into protected storage
	* hive-report: O.S. general info shows max activation date
	* extension-builder: code of service extension.new implemented
	* extension-builder: code of service extension.open implemented
	* extension-builder: code of service extension.save implemented
	* extension-builder: code of service extension.new-service implemented
	* extension-builder: code of service extension.new-callback implemented
	* extension-builder: code of service extension.new-arg implemented
	* extension-builder: code of module mobius.extension.pickle implemented
	* extension-builder: code of module mobius.extension.model implemented
	* extension-builder: code of module mobius.extension.main implemented
	* gtk-ui: service ui.new-data-viewer eliminated
	* gtk-ui: service ui.register-data-viewer eliminated
	* gtk-ui: service ui.unregister-data-viewer eliminated
	* gtk-ui: data-table -> column.is_visible added
	* gtk-ui: data-table -> column.type = 'object' implemented
	* gtk-ui: data-table -> new event 'on_selection_changed'
	* category-model: attr.is_editable added to category.iter-attributes service
	* category-model: new category.xml
	* part-catalogue: copy and paste works only for filled attributes
	* part-catalogue: shows only editable attributes when editing
	* case-viewer: shows only editable attributes when adding new item
	* attribute-viewer: uses attr.is_editable from category.iter-attributes
	* mobius-forensic-toolkit: sort icons by title
	* mobius-forensic-toolkit: select icons when single clicking
	* service config.add-resource replaced by app.add-resource
	* service config.remove-resource replaced by app.remove-resource
	* service config.get-resource replace by app.get-resource
	* service config.list-resources replaced by app.list-resources
	* service extension.new eliminated
	* service extension.open eliminated
	* service extension.save eliminated
	* service extension.new-service eliminated
	* service extension.new-callback eliminated
	* service extension.new-arg eliminated
	* module mobius.extension.pickle eliminated
	* module mobius.extension.model eliminated
	* module mobius.extension.main eliminated

Mobius Forensic Toolkit 0.5.8

	* gtk-ui: service ui.new-widget created
	* gtk-ui: widget attribute-list implemented
	* gtk-ui: widget data-table implemented
	* gtk-ui: service ui.new-data-viewer set as deprecated
	* attribute-viewer: uses ui.widget.attribute-list
	* attribute-viewer: item attributes report implemented
	* attribute-viewer: reload attributes option
	* hive: disables report reeview until registry files are added
	* hive-report: e-mail accounts report
	* hive-report: tcp/ip interfaces report
	* hive-report: computer descriptions report
	* hive-report: exports user passwords in a format suitable for John the Ripper
	* hive-report: uses ui.widget.attribute-list
	* part-catalogue: copy and paste of parts
	* xml-pickle: added support to datetime.datetime
	* xml-pickle: deprecated code eliminated
	* data-viewer: supressed jump expression limit
	* case-model: sets ctime and mtime attributes
	* object-model: service object.has-attribute recoded as object method
	* object-model: service object.remove-attribute recoded as object method
	* category-model: fixed bug in SIMCard icon
	* config: service config.add-resource created
	* config: service config.get-resource created
	* config: service config.list-resources created
	* config: service config.remove-resource created
	* report-viewer: added support to ui.widget.*
	* better handling of Windows directories

Mobius Forensic Toolkit 0.5.7

	* hive: reports were grouped
	* hive: shows REG_NONE values
	* hive: handles null values
	* hive: better copy (CTRL+C) mechanism
	* hive-report: recent docs report
	* hive-report: user assist report
	* hive-report: product keys report
	* hive-report: O.S. folders report
	* hive-report: user logon report
	* hive-report: computer info report

Mobius Forensic Toolkit 0.5.6

	* Extension "URI" created
	* Extension "URI-file" created
	* hive: better detection of SAM files
	* hive: key classname fixed (reported by Vladimir Santos)
	* hive: uses extension URI instead of path
	* hive: populates HKEY_USERS
	* hive-report: user passwords report (developed by Vladimir Santos)
	* hive-report: installed programs report
	* hive-report: disk devices report
	* hive-report: optical devices report
	* hive-report: network adapters report
	* hive-report: imaging devices report
	* hive-report: display adapters report
	* hive-report: monitor devices report
	* xml-pickle: uses libxml2 URI's instead of path
	* gtk-ui: service ui.new-data-viewer created
	* gtk-ui: service ui.register-data-viewer created
	* gtk-ui: service ui.unregister-data-viewer created
	* gtk-ui: service ui.new-listview eliminated
	* gtk-ui: service ui.new-attributeview eliminated
	* extension-builder: Compiler incorporated
	* module mobius.extension.compiler eliminated
	* object-model: service model.load eliminated
	* all extensions were converted to .mobius

Mobius Forensic Toolkit 0.5.5

	* Extension "Hive Report" created
	* Extension "Report Viewer" created
	* hive: registry logical view
	* hive: registry reports
	* hive-report: O.S. information report
	* hive-report: user accounts report
	* hive-report: user profiles report 
	* gtk-ui: widget ListView created
	* gtk-ui: widget AttributeView created
	* case-viewer: report-data DND
	* category-manager: import and export database
	* datasource-scsi: better use of ioctl
	* extension-manager: read version from config
	* data-viewer: set vscrollbar when jumping to address
	* part-catalogue: scroll to new part
	* service case.get-icon-data created
	* attribute case.icon_data eliminated

Mobius Forensic Toolkit 0.5.4

	* Extensions are now deployed in .mobius files
	* Extension "Extension Manager" created
	* Extension "Datasource SCSI" created
	* Extension "Data viewer" created
	* floppy-imager: uses direct I/O
	* floppy-imager: setup.py created
	* mobius.extension: new function 'install'
	* mobius.extension: new function 'uninstall'
	* service ui.new-icon-from-data created
	* service extension.is-running created
	* case-viewer: better DND handling

Mobius Forensic Toolkit 0.5.3

	* xml-pickle: serialize dict items as tuples
	* xml-pickle: do not save 'value' for NoneType's
	* xml-pickle: do not save 'value' for bools = False
	* xml-pickle: handle python objects circular references
	* xml-pickle: handle python objects cross references
	* case-model: save case using xml.pickle
	* object-model: service model.save eliminated
	* mobius_case_update: script to update case files
	* Extension Hive created

Mobius Forensic Toolkit 0.5.2

	* Extension config created
	* service config.set created
	* service config.get created
	* extensions use 'config.get/set' instead of 'app.get/set-config'
	* service app.get-config eliminated
	* service app.set-config eliminated
	* mediator: method new_client_mediator eliminated
	* mediator: events are called right after 'emit'
	* mediator: handlers can stop emission sequence by returning True
	* mediator: added chain_end option to connect method
	* case-viewer: emit one 'item.dnd-file' per DND file
	* case-viewer: 'report run' toolbutton added
	* report-wizard: component 'assign' added
	* report-wizard: use widget snapshot during DND
	* report-wizard: cache refresh bug fixed
	* Extension datasource-solo created
	* datasource-talon: support to software v2.40

Mobius Forensic Toolkit 0.5.1

	* datasource-raw: random access reader
	* datasource-talon: random access reader
	* Extension Datasource EWF with read support
	* extensions use URI instead of path

Mobius Forensic Toolkit 0.5

	* module mobius.model.extension renamed to mobius.extension
	* mobius.extension.Compiler compiles .xml extensions to .py
	* extensions now have callbacks
	* part-model: uses callbacks
	* date-code: uses callbacks
	* case-viewer: uses callbacks
	* created package mobius.extension
	* created module mobius.extension.model
	* created module mobius.extension.pickle
	* created module mobius.extension.compiler
	* created module mobius.extension.main
	* Extension Data Sourcerer created
	* Extension Datasource Model created
	* Extension Datasource Raw created
	* Extension Datasource Talon created

Mobius Forensic Toolkit 0.4.8

	* extension-builder: find forward and back bug fixed
	* extension.py: support services and args
	* service extension.start-api created
	* service extension.stop-api created

Mobius Forensic Toolkit 0.4.7

	* extension-builder: undo/redo
	* extension-builder: cut/copy/paste
	* extension-builder: select all
	* extension-builder: jump to line
	* extension-builder: delete
	* extension-builder: find
	* extension-builder: find and replace
	* Extension Object Model created
	* Service item.get-attribute created
	* Service case.set-attribute created
	* Service case.get-attribute created
	* Service object.get-attribute created
	* Service object.set-attribute created
	* Service object.has-attribute created
	* Service object.remove-attribute created
	* report-model: bug generating verbatim was fixed
	* part-model: deprecated code has been deleted
	* category-model: deprecated code has been deleted
	* xml-pickle: deprecated code has been deleted
	* xml-pickle: save long string in <string> tag instead of property
	* xml-pickle: save long unicode in <unicode> tag instead of property
	* attribute-viewer: show UID as read-only attribute
	* mobius-forensic-toolkit: handle delete-event correctly
	* Extensions are now coded only in XML

Mobius Forensic Toolkit 0.4.6

	* Service item.expand-initvalues renamed to item.expand-value-masks
	* Service category.attribute.set-init-value renamed to category.attribute.set-value-mask
	* attribute-viewer: attributes with value_mask are not editable
	* report-wizard: text and verbatim use multiline text
	* report-wizard: ${} option in verbatim
	* Extension Mobius Forensic Toolkit App created
	* Module mobius.ui.main_window removed
	* Module mobius.ui.extension_manager_dialog removed
	* Program mobius_icq.py eliminated
	* Service calls are now isolated by try...except
	* Service app.start created
	* Service app.get-data-path created
	* Service toolbox.add moved to Mobius Forensic Toolkit App extension
	* Service toolbox.remove created
	* Module mobius.model.extension created
	* Extensions are coded in XML
	* Service extension.new created
	* Service extension.open created
	* Service extension.save created

Mobius Forensic Toolkit 0.4.5

	* category-manager: scrolling in attribute up/down
	* Service category.new created
	* Service category.set created
	* Service category.remove created
	* Service category.iter-attributes created
	* Service category.list.iter created
	* Service category.list.save created
	* Service category.attribute.remove created
	* Service category.get-list eliminated
	* Service category.set-list eliminated
	* Service category.get-attribute-list eliminated
	* Service item.expand-attributes created
	* Service item.expand-initvalues created
	* category-model extension created
	* category_manager extension renamed to category-manager
	* Service item.expand-attributes created
	* case-viewer: add item now sets attributes

Mobius Forensic Toolkit 0.4.4

	* case-model: create-item adds object to case
	* report-model: python string escaping fixed
	* report-model: eliminated report.name usage
	* part-model extension created
	* part-catalogue: export catalogue
	* part-catalogue: import catalogue
	* Service part.new created
	* Service part.set created
	* Service part.get created
	* Service part.remove created
	* Service part.catalogue.load created
	* Service part.catalogue.save created
	* Service part.catalogue.iter created
	* Service part.catalogue.export created
	* Service part.catalogue.import created
	* part_catalogue extension renamed to part-catalogue

Mobius Forensic Toolkit 0.4.3.1

	* Workaround for SVG/GTK SIGFPE bug while renderind Report Wizard icon. Reported by Adriano Brasil
	* setup.py c code execution bug fixed

Mobius Forensic Toolkit 0.4.3

	* Package mobius.pickle eliminated
	* Module mobius.ui.manager eliminated
	* Service app.get-config created
	* Service app.set-config created
	* Service ui.start created
	* Service case.get-path created
	* Floppy Imager extension created
	* SDI: Working area's position and size are saved
	* Mobius Tutorial written

Mobius Forensic Toolkit 0.4.2

	* Report model extension created
	* Service report.load created
	* Service report.save created
	* Service report.iter created
	* Service report.run created
	* Report Wizard extension created

Mobius Forensic Toolkit 0.4.1

	* Case Viewer extension substitutes case manager module
	* Module mobius.ui.case_treeview eliminated
	* Module mobius.ui.case_window eliminated
	* Module mobius.ui.add_item_dialog eliminated
	* Category icon rendering fixed in Part Catalogue
	* XML Pickle extension created
	* Service xml.pickle created
	* Service xml.unpickle created
	* Service case.get-model created
	* Service case.set-model created
	* Spider extension eliminated
	* Case objects now have capabilities
	* Dialog close fixed in Extension Manager. Reported by Vladimir Santos

Mobius Forensic Toolkit 0.4

	* Case Model extension handles case and item objects
	* Service app.get-window-title eliminated
	* Service item.set-attribute moved to Case Model extension
	* Service case.new created
	* Service case.open created
	* Service case.save created
	* Service case.close created
	* Service case.any-modified created
	* Service case.save-all created
	* Module mobius.model.case eliminated
	* Module mobius.model.item eliminated
	* Module mobius.pickle.case eliminated
	* Part Catalogue save on close fixed
	* Part Catalogue part removal fixed
	* Category Manager icon selection fixed
	* Service category.get-icon-data created

Mobius Forensic Toolkit 0.3.5

	* Default value corrected in AttributeViewer
	* Mediator emits events in chronological order
	* Mediator.new_client_mediator implemented
	* Extensions use mediator.new_client_mediator for better clean up
	* Extensions use ui.working-area.new
	* SDI extension implements Single Document Interface
	* Better clean-up code when de-registering from mediator

Mobius Forensic Toolkit 0.3.4

	* Created mediator.unadvertise
	* Extensions use icon_data instead of icon
	* GtkUI extension implemented
	* DateCode extension created
	* AttributeViewer uses category.get
	* Service ui.icon-render created
	* Service ui.flush created
	* Service ui.stop created
	* Service icon.create eliminated
	* Service app.get-name created
	* Service app.get-version created
	* Service ui.new-window created
	* Mediator.call now accepts keyword arguments

Mobius Forensic Toolkit 0.3.3

	* CasePropertiesDialog emits 'case.attribute-modified'
	* CaseTreeview changes case name on modification
	* CaseTreeview changes item names on modification
	* Events now accept keyword parameters
	* AttributeViewer columns are now resizable
	* Fixed on_delete event in AttributeViewer.Window
	* Attributes can be moved up and down in CategoryManager
	* PartCatalogue extension implemented

Mobius Forensic Toolkit 0.3.2.1

	* Attribute edition bug has been fixed

Mobius Forensic Toolkit 0.3.2

	* Each extension runs in an isolated context
	* Category Manager extension created
	* Support to SVG category icons added

Mobius Forensic Toolkit 0.3.1

	* Mediator implemented
	* Attribute viewer re-coded as extension
	* bug fix: pickle.case sets item.case
	* Case Manager window created
	* Main window created

Mobius Forensic Toolkit 0.3

	* Featuring mobius_bin, a first step toward an integrated tool
	* Extension manager created
	* Manages categories throught category.xml

Mobius Forensic Toolkit 0.2.0.1

	* Mobius_icq: fix for Python 2.4. Contributed by Christophe Monniez

Mobius Forensic Toolkit 0.2.0

	* First public release
	* Features: mobius_icq

Mobius Forensic Toolkit 0.1.6

	* Mobius_icq: scan evidences for buddy lists and message files
	* Mobius_icq: main window shows ICQ accounts found
	* Mobius_icq: support to ICQ2003b .uin files
	* Mobius_icq: show directories while scanning

Mobius Forensic Toolkit 0.1.5

	* Created mobius.application module
	* Created mobius.ui.base_window
	* Created mobius_mail.py
	* Decoder: eml
	* Decoder: dbx

Mobius Forensic Toolkit 0.1.4

	* Mobius_im: report
	* Mobius_im: dialogue view
	* Mobius_im: read ICQ buddy list
	* Mobius: application class

Mobius Forensic Toolkit 0.1.3

	* Created mobius_im

Mobius Forensic Toolkit 0.1.2

	* mobius_ca renamed to mobius_image

Mobius Forensic Toolkit 0.1.1

	* Support to BMP, GIF e TIF
	* Support to .zip
	* Support to .tar.gz, .tar.bz2, .tar

Mobius Forensic Toolkit 0.1.0

	* Initial version
	* Show .jpg, .jpeg files
